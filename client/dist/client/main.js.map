{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin-acl-management/acl-service.service.ts","webpack:///./src/app/admin/admin-acl-management/admin-acl-management.component.css","webpack:///./src/app/admin/admin-acl-management/admin-acl-management.component.html","webpack:///./src/app/admin/admin-acl-management/admin-acl-management.component.ts","webpack:///./src/app/admin/admin-acl-management/update-roles/update-roles.component.css","webpack:///./src/app/admin/admin-acl-management/update-roles/update-roles.component.html","webpack:///./src/app/admin/admin-acl-management/update-roles/update-roles.component.ts","webpack:///./src/app/admin/approve-member/approve-member-view/approve-member-view.component.css","webpack:///./src/app/admin/approve-member/approve-member-view/approve-member-view.component.html","webpack:///./src/app/admin/approve-member/approve-member-view/approve-member-view.component.ts","webpack:///./src/app/admin/approve-member/approve-member.component.css","webpack:///./src/app/admin/approve-member/approve-member.component.html","webpack:///./src/app/admin/approve-member/approve-member.component.ts","webpack:///./src/app/admin/approve-member/team-quick-view/team-quick-view.component.css","webpack:///./src/app/admin/approve-member/team-quick-view/team-quick-view.component.html","webpack:///./src/app/admin/approve-member/team-quick-view/team-quick-view.component.ts","webpack:///./src/app/admin/approve-member/user-quick-view/user-quick-view.component.css","webpack:///./src/app/admin/approve-member/user-quick-view/user-quick-view.component.html","webpack:///./src/app/admin/approve-member/user-quick-view/user-quick-view.component.ts","webpack:///./src/app/admin/dashboard/dashboard.component.css","webpack:///./src/app/admin/dashboard/dashboard.component.html","webpack:///./src/app/admin/dashboard/dashboard.component.ts","webpack:///./src/app/admin/delete-member/delete-member.component.css","webpack:///./src/app/admin/delete-member/delete-member.component.html","webpack:///./src/app/admin/delete-member/delete-member.component.ts","webpack:///./src/app/admin/division-management/add-team/add-team.component.css","webpack:///./src/app/admin/division-management/add-team/add-team.component.html","webpack:///./src/app/admin/division-management/add-team/add-team.component.ts","webpack:///./src/app/admin/division-management/division-management.component.css","webpack:///./src/app/admin/division-management/division-management.component.html","webpack:///./src/app/admin/division-management/division-management.component.ts","webpack:///./src/app/admin/division-management/division-props/division-props.component.css","webpack:///./src/app/admin/division-management/division-props/division-props.component.html","webpack:///./src/app/admin/division-management/division-props/division-props.component.ts","webpack:///./src/app/admin/division-management/remove-team/remove-team.component.css","webpack:///./src/app/admin/division-management/remove-team/remove-team.component.html","webpack:///./src/app/admin/division-management/remove-team/remove-team.component.ts","webpack:///./src/app/admin/logs-viewer/logs-viewer.component.css","webpack:///./src/app/admin/logs-viewer/logs-viewer.component.html","webpack:///./src/app/admin/logs-viewer/logs-viewer.component.ts","webpack:///./src/app/admin/manage-team/manage-select-team.component.css","webpack:///./src/app/admin/manage-team/manage-select-team.component.html","webpack:///./src/app/admin/manage-team/manage-select-team.component.ts","webpack:///./src/app/admin/manage-team/manage-team-view/manage-team-view.component.css","webpack:///./src/app/admin/manage-team/manage-team-view/manage-team-view.component.html","webpack:///./src/app/admin/manage-team/manage-team-view/manage-team-view.component.ts","webpack:///./src/app/admin/match-management/match-edit/match-edit.component.css","webpack:///./src/app/admin/match-management/match-edit/match-edit.component.html","webpack:///./src/app/admin/match-management/match-edit/match-edit.component.ts","webpack:///./src/app/admin/match-management/match-management.component.css","webpack:///./src/app/admin/match-management/match-management.component.html","webpack:///./src/app/admin/match-management/match-management.component.ts","webpack:///./src/app/admin/match-management/set-deadline/set-deadline.component.css","webpack:///./src/app/admin/match-management/set-deadline/set-deadline.component.html","webpack:///./src/app/admin/match-management/set-deadline/set-deadline.component.ts","webpack:///./src/app/app-footer/app-footer.component.css","webpack:///./src/app/app-footer/app-footer.component.html","webpack:///./src/app/app-footer/app-footer.component.ts","webpack:///./src/app/app.Routes.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/blog-list/blog-list.component.css","webpack:///./src/app/blog-list/blog-list.component.html","webpack:///./src/app/blog-list/blog-list.component.ts","webpack:///./src/app/blog-view/blog-view.component.css","webpack:///./src/app/blog-view/blog-view.component.html","webpack:///./src/app/blog-view/blog-view.component.ts","webpack:///./src/app/calendar-view/calendar-view.component.css","webpack:///./src/app/calendar-view/calendar-view.component.html","webpack:///./src/app/calendar-view/calendar-view.component.ts","webpack:///./src/app/calendar-view/event-large/event-large.component.css","webpack:///./src/app/calendar-view/event-large/event-large.component.html","webpack:///./src/app/calendar-view/event-large/event-large.component.ts","webpack:///./src/app/calendar-view/event-modal/event-modal.component.css","webpack:///./src/app/calendar-view/event-modal/event-modal.component.html","webpack:///./src/app/calendar-view/event-modal/event-modal.component.ts","webpack:///./src/app/caster-tools/caster-dashboard/caster-dashboard.component.css","webpack:///./src/app/caster-tools/caster-dashboard/caster-dashboard.component.html","webpack:///./src/app/caster-tools/caster-dashboard/caster-dashboard.component.ts","webpack:///./src/app/caster-tools/caster-dashboard/caster-inputs/caster-inputs.component.css","webpack:///./src/app/caster-tools/caster-dashboard/caster-inputs/caster-inputs.component.html","webpack:///./src/app/caster-tools/caster-dashboard/caster-inputs/caster-inputs.component.ts","webpack:///./src/app/classes/aM-input-Import.class.ts","webpack:///./src/app/classes/profile.class.ts","webpack:///./src/app/classes/team.class.ts","webpack:///./src/app/create-team/create-team.component.css","webpack:///./src/app/create-team/create-team.component.html","webpack:///./src/app/create-team/create-team.component.ts","webpack:///./src/app/directory/directory.component.css","webpack:///./src/app/directory/directory.component.html","webpack:///./src/app/directory/directory.component.ts","webpack:///./src/app/division/division.component.css","webpack:///./src/app/division/division.component.html","webpack:///./src/app/division/division.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/image-upload/image-upload.component.css","webpack:///./src/app/image-upload/image-upload.component.html","webpack:///./src/app/image-upload/image-upload.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/logout/logout.component.css","webpack:///./src/app/logout/logout.component.html","webpack:///./src/app/logout/logout.component.ts","webpack:///./src/app/members-display/members-display.component.css","webpack:///./src/app/members-display/members-display.component.html","webpack:///./src/app/members-display/members-display.component.ts","webpack:///./src/app/modal/change-captain-modal/change-captain-modal.component.css","webpack:///./src/app/modal/change-captain-modal/change-captain-modal.component.html","webpack:///./src/app/modal/change-captain-modal/change-captain-modal.component.ts","webpack:///./src/app/modal/delete-confrim-modal/delete-confrim-modal.component.css","webpack:///./src/app/modal/delete-confrim-modal/delete-confrim-modal.component.html","webpack:///./src/app/modal/delete-confrim-modal/delete-confrim-modal.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/no-access/no-access.component.css","webpack:///./src/app/no-access/no-access.component.html","webpack:///./src/app/no-access/no-access.component.ts","webpack:///./src/app/outreach-email-response/outreach-email-response.component.css","webpack:///./src/app/outreach-email-response/outreach-email-response.component.html","webpack:///./src/app/outreach-email-response/outreach-email-response.component.ts","webpack:///./src/app/profile-edit/profile-edit.component.css","webpack:///./src/app/profile-edit/profile-edit.component.html","webpack:///./src/app/profile-edit/profile-edit.component.ts","webpack:///./src/app/questionnaire/questionnaire.component.css","webpack:///./src/app/questionnaire/questionnaire.component.html","webpack:///./src/app/questionnaire/questionnaire.component.ts","webpack:///./src/app/reporting/reporting-deck/reporting-deck.component.css","webpack:///./src/app/reporting/reporting-deck/reporting-deck.component.html","webpack:///./src/app/reporting/reporting-deck/reporting-deck.component.ts","webpack:///./src/app/reporting/reporting.component.css","webpack:///./src/app/reporting/reporting.component.html","webpack:///./src/app/reporting/reporting.component.ts","webpack:///./src/app/schedule/match-schedule/match-schedule.component.css","webpack:///./src/app/schedule/match-schedule/match-schedule.component.html","webpack:///./src/app/schedule/match-schedule/match-schedule.component.ts","webpack:///./src/app/schedule/schedule-view/schedule-view.component.css","webpack:///./src/app/schedule/schedule-view/schedule-view.component.html","webpack:///./src/app/schedule/schedule-view/schedule-view.component.ts","webpack:///./src/app/schedule/team-schedule/team-schedule.component.css","webpack:///./src/app/schedule/team-schedule/team-schedule.component.html","webpack:///./src/app/schedule/team-schedule/team-schedule.component.ts","webpack:///./src/app/services/admin.service.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/contentful.service.ts","webpack:///./src/app/services/division.service.ts","webpack:///./src/app/services/hots-logs.service.ts","webpack:///./src/app/services/http-service.service.ts","webpack:///./src/app/services/markdown-parser.service.ts","webpack:///./src/app/services/notification.service.ts","webpack:///./src/app/services/queues.service.ts","webpack:///./src/app/services/schedule.service.ts","webpack:///./src/app/services/standings.service.ts","webpack:///./src/app/services/team.service.ts","webpack:///./src/app/services/timezone.service.ts","webpack:///./src/app/services/token-interceptor.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/services/utilities.service.ts","webpack:///./src/app/session-timeout/session-timeout.component.css","webpack:///./src/app/session-timeout/session-timeout.component.html","webpack:///./src/app/session-timeout/session-timeout.component.ts","webpack:///./src/app/snackbar/snackbar.component.css","webpack:///./src/app/snackbar/snackbar.component.html","webpack:///./src/app/snackbar/snackbar.component.ts","webpack:///./src/app/standings-view/standings-view.component.css","webpack:///./src/app/standings-view/standings-view.component.html","webpack:///./src/app/standings-view/standings-view.component.ts","webpack:///./src/app/team-display/team-display.component.css","webpack:///./src/app/team-display/team-display.component.html","webpack:///./src/app/team-display/team-display.component.ts","webpack:///./src/app/team-profile/team-profile.component.css","webpack:///./src/app/team-profile/team-profile.component.html","webpack:///./src/app/team-profile/team-profile.component.ts","webpack:///./src/app/team-search/team-search.component.css","webpack:///./src/app/team-search/team-search.component.html","webpack:///./src/app/team-search/team-search.component.ts","webpack:///./src/app/times-available/times-available.component.css","webpack:///./src/app/times-available/times-available.component.html","webpack:///./src/app/times-available/times-available.component.ts","webpack:///./src/app/user-search/user-search.component.css","webpack:///./src/app/user-search/user-search.component.html","webpack:///./src/app/user-search/user-search.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///os (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AclServiceService {\n\n  constructor() { }\n\n  rights = [\n    { key: \"TEAM\", value: false },\n    { key: \"USER\", value: false },\n    { key: \"DIVISION\", value: false },\n    { key: \"STANDINGS\", value: false },\n    { key: \"CASTER\", value: false },\n    { key: \"MATCH\", value: false },\n    { key: \"SCHEDULEGEN\", value: false },\n    { key: \"ACL\", value: false}\n  ];\n\n  removeUnwantedProps(acl){\n    if (acl.adminRights) {\n      //delete properties we don't want\n      delete acl.adminRights.adminId;\n      delete acl.adminRights.__v;\n      delete acl.adminRights._id;\n    }\n    return acl;\n  }\n  \n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row bg-white\\\">\\n        <div class=\\\"col\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <a [routerLink]=\\\"['/_admin/dashboard']\\\">Back to Dashboard</a>\\n                </div>\\n            </div>\\n            <div class=\\\"row m-2\\\">\\n                <div class=\\\"col\\\">\\n                    <h2>Admin Management</h2>\\n                </div>\\n            </div>\\n            <!-- <div class=\\\"row m-2\\\">\\n                <div class=\\\"col\\\">\\n                    <h4>Filter by name:</h4>\\n                </div>\\n            </div> -->\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                </div>\\n                <div class=\\\"col-5\\\">\\n                    <mat-form-field class=\\\"mat-FullWidth\\\">\\n                        <input matInput placeholder=\\\"Filter by name\\\" [(ngModel)]=\\\"filterName\\\" (ngModelChange)=\\\"filterUsers(filterName)\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col\\\">\\n                </div>\\n            </div>\\n            <mat-paginator [length]=\\\"length\\\" [pageSize]=\\\"pageSize\\\" (page)=\\\"pageEventHandler($event)\\\">\\n\\n            </mat-paginator>\\n            <table class=\\\"table table-striped\\\">\\n                <thead>\\n                    <tr>\\n                        <th scope=\\\"col\\\">User Name:</th>\\n                        <th scope=\\\"col\\\">Current Admin Rights:</th>\\n                        <th scope=\\\"col\\\">Edit</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr *ngFor=\\\"let user of displayArray\\\">\\n                        <td>{{user.displayName}}</td>\\n                        <td>\\n                            <div class=\\\"row\\\" *ngFor=\\\"let acl of user.adminRights | keyvalue\\\">\\n                                <div class=\\\"col\\\">\\n                                    {{acl.key}} : {{acl.value}}\\n                                </div>\\n                            </div>\\n                        </td>\\n                        <td><a [routerLink]=\\\"[user._id]\\\" class=\\\"btn btn-success\\\">Edit</a></td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n            <!-- <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col\\\">\\n                            \\n                        </div>\\n                        <div class=\\\"col\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col\\\">\\n                                    \\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col\\\"></div>\\n                    </div>\\n                </div>\\n            </div> -->\\n            <!-- <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"row\\\" *ngFor=\\\"let user of users\\\">\\n                        <div class=\\\"col\\\">\\n                            {{user.displayName}}\\n                        </div>\\n                        <div class=\\\"col\\\">\\n                            \\n                        </div>\\n                        <div class=\\\"col\\\">\\n                            <a [routerLink]=\\\"[user._id]\\\" class=\\\"btn btn-success\\\">Edit</a>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div> -->\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { AclServiceService } from './acl-service.service';\nimport { PageEvent, MatPaginator } from '@angular/material';\n\n@Component({\n  selector: 'app-admin-acl-management',\n  templateUrl: './admin-acl-management.component.html',\n  styleUrls: ['./admin-acl-management.component.css']\n})\nexport class AdminAclManagementComponent implements OnInit, AfterViewInit {\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  //component properties\n  users: any = [];\n  filterName:string='';\n  displayArray = [];\n  length:number;\n  pageSize:number = 10;\n  filteredArray:any = [];\n\n  pageEvent: PageEvent\n\n  pageEventHandler(pageEvent:PageEvent){\n      let i = pageEvent.pageIndex * this.pageSize;\n      let endSlice = i + this.pageSize\n      if (endSlice > this.filteredArray.length){\n        endSlice = this.filteredArray.length;\n      }\n      this.displayArray = [];\n      this.displayArray = this.filteredArray.slice(i, endSlice)\n    \n  }\n\n  ngAfterViewInit() {\n    this.paginator.pageIndex = 0;\n  }\n\n  constructor(private adminService:AdminService, private aclService: AclServiceService) { }\n\n  filterUsers(filterName){\n    if(filterName == null || filterName == undefined || filterName.length == 0){\n      this.filteredArray = this.users;\n      this.length = this.filteredArray.length; \n      this.displayArray = this.filteredArray.slice(0, 10);\n      this.paginator.firstPage();\n    }else{\n      this.filteredArray = [];\n      this.users.forEach(element => {\n        if (element.displayName.toLowerCase().indexOf(filterName.toLowerCase())>-1){\n          this.filteredArray.push(element);\n        }\n      });\n      this.length = this.filteredArray.length;\n      this.displayArray = this.filteredArray.slice(0,10);\n      this.paginator.firstPage();\n    }\n  }\n\n  ngOnInit() {\n    this.adminService.getUsersAcls().subscribe(\n      (res)=>{\n        //assign return to local property\n        this.users = res;\n        this.users.forEach(element => {\n          element = this.aclService.removeUnwantedProps(element);\n        })\n        this.filterUsers('');\n      },\n    (err)=>{ console.log(err);}\n    )\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <a [routerLink]=\\\"['/_admin/userACLMgmt']\\\">&lt; Back</a>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <h3>Edit User Rights:</h3>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">User:</div>\\n                <div class=\\\"col\\\">Roles</div>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    {{user.displayName}}\\n                </div>\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"row\\\" *ngFor=\\\"let acl of rights\\\">\\n                        <div class=\\\"col\\\">\\n                            <mat-checkbox [(ngModel)]=\\\"acl.value\\\">{{acl.key}}</mat-checkbox>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <button (click)=\\\"updateUserRights()\\\" class=\\\"btn btn-success\\\">Update Users Admin Roles</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AclServiceService } from '../acl-service.service';\nimport { cloneDeep } from 'lodash';\n\n@Component({\n  selector: 'app-update-roles',\n  templateUrl: './update-roles.component.html',\n  styleUrls: ['./update-roles.component.css']\n})\nexport class UpdateRolesComponent implements OnInit {\n\n  //local component properties\n  recId; // local var  for id recieved in route\n  user = {\n    displayName:'',\n    adminRights:{}\n  };  //prototype user object\n  rights: any //application rights\n\n  constructor(private adminService: AdminService, private route: ActivatedRoute, private router: Router, private aclSerive:AclServiceService) {\n    //get id from route\n    if (this.route.snapshot.params['id']) {\n      this.recId = this.route.snapshot.params['id'];\n    }\n   }\n\n\n\n\n  ngOnInit() {\n    //assign rights from the service to the local var\n    this.rights = cloneDeep(this.aclSerive.rights);\n    //get the users ACLs provided in the route\n    this.adminService.getUserAcls(this.recId).subscribe(\n      (res)=>{\n\n        res = this.aclSerive.removeUnwantedProps(res);\n        console.log('res ', res);\n        if (res.adminRights != null || res.adminRights != undefined){\n          let key = Object.keys(res.adminRights);\n          key.forEach(element => {\n            this.rights.forEach((statRight) => {\n              if (element == statRight.key) {\n                statRight.value = true;\n              }\n            });\n          });\n        }else{\n          res.adminRights = {};\n          // this.rights.forEach((statRight) => {\n          //     console.log(statRight);\n          //   });\n        }\n        \n\n\n        this.user = res;\n      },\n      (err)=>{\n        console.log(err);\n      }\n    )\n  }\n\n  //updates the user rights\n  updateUserRights(){\n    let resultantACL = {};\n    this.rights.forEach(right=>{\n      if(right.value){\n        resultantACL[right.key]=right.value;\n      }\n    });\n    resultantACL['adminId'] = this.user['_id'];\n    this.adminService.upsertUserAcls(resultantACL).subscribe(res=>{\n      this.router.navigate(['/_admin/userACLMgmt']);\n    },err=>{\n      console.log(err)\n    })\n  }\n\n}\n","module.exports = \".row-style {\\n    padding: 10px;\\n    margin-top: 5px;\\n    border-bottom: 1px solid #9a9898;\\n}\"","module.exports = \"<div class=\\\"row row-style\\\">\\n    <div class=\\\"col\\\">\\n        <app-user-quick-view [userId]=\\\"player\\\"></app-user-quick-view>\\n    </div>\\n    <div class=\\\"col\\\">\\n        <app-team-quick-view [teamName]=\\\"viewTeam\\\"></app-team-quick-view>\\n    </div>\\n    <div class=\\\"col\\\">\\n        {{resultantMmr}}\\n    </div>\\n    <div class=\\\"col\\\">\\n        <div class=\\\"text-center\\\">\\n            <button class=\\\"btn btn-success\\\" (click)=\\\"actionAccount(true)\\\">Approve</button>\\n            <button class=\\\"btn btn-danger ml-1\\\" (click)=\\\"actionAccount(false)\\\">Deny</button>\\n        </div>\\n\\n    </div>\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { TeamService } from 'src/app/services/team.service';\nimport { Profile } from '../../../classes/profile.class';\nimport { Team } from '../../../classes/team.class';\nimport { AdminService } from '../../../services/admin.service';\n\n@Component({\n  selector: 'app-approve-member-view',\n  templateUrl: './approve-member-view.component.html',\n  styleUrls: ['./approve-member-view.component.css']\n})\n\nexport class ApproveMemberViewComponent implements OnInit {\n  \n  //component properties\n  player = new Profile(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null); //local user profile - blank user profile\n  viewTeam = new Team(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null); //local team profile - blank team profile\n  resultantMmr: number //local var for holding returned resultant MMR calculation\n  _info: any  //local var, holds the bindings passed to this component\n  \n\n  //Input bindings , object that has username and teamname\n  @Input() set info(info){\n    if(info!=null&&info!=undefined){\n      this._info = info;\n    }\n  }\n\n  //Output bindings\n  @Output() accountActioned = new EventEmitter();\n\n  //sends events to accountActioned output binding\n  accountActioner() {\n    this.accountActioned.emit(this._info);\n  }\n\n  constructor(private user:UserService, private team:TeamService, private admin:AdminService) { }\n\n  //grabs appropriate team and user information based on privided input binding\n  ngOnInit() {\n    if(this._info.teamName && this._info.userName){\n      this.user.getUser(this._info.userName).subscribe( res =>{\n        this.player = res;\n      });\n      this.team.getTeam(this._info.teamName).subscribe(resT=>{\n        this.viewTeam = resT;\n        this.admin.resultantMmr(this.player.averageMmr, this.viewTeam.teamName_lower).subscribe(\n          resmmr=>{\n            this.resultantMmr = resmmr.resultantMmr;\n          },\n          err=>{\n            console.log(err);\n          }\n        )\n      })\n    }\n\n  }\n\n  //handles the approval chosen by the admin\n  actionAccount(act){\n    this.admin.queuePost(this.viewTeam.teamName, this.player.displayName, act).subscribe( res =>{\n      this.accountActioner();\n    }, err=>{\n      console.log(err);\n    });\n  }\n\n}\n","module.exports = \".header-style {\\n    padding: 10px;\\n    background-color: #e0d4d4;\\n    border-bottom: 1px solid #9a9898;\\n}\"","module.exports = \"<div class=\\\"container pt-4\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <a [routerLink]=\\\"['/_admin/dashboard']\\\">Back to Dashboard</a>\\n        </div>\\n    </div>\\n    <div class=\\\"row header-style\\\">\\n        <div class=\\\"col\\\">\\n            Player\\n        </div>\\n        <div class=\\\"col\\\">\\n            Team\\n        </div>\\n        <div class=\\\"col\\\">\\n            Resultant MMR\\n        </div>\\n        <div class=\\\"col text-center\\\">\\n            Actions\\n        </div>\\n    </div>\\n    <div *ngFor=\\\"let queueItem of queue\\\">\\n        <app-approve-member-view [info]=\\\"queueItem\\\" (accountActioned)=\\\"updateView($event)\\\"></app-approve-member-view>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { QueuesService } from '../../services/queues.service';\nimport { findIndex } from 'lodash';\n\n@Component({\n  selector: 'app-approve-member',\n  templateUrl: './approve-member.component.html',\n  styleUrls: ['./approve-member.component.css']\n})\n\n\n\nexport class ApproveMemberComponent implements OnInit {\n\n  //component properties\n  queue \n\n  constructor(private queueService:QueuesService) {\n   }\n  \n  ngOnInit() {\n    this.queueService.getQueues('pendingMemberQueue').subscribe( res=>{\n      this.queue = res;\n    } );\n  }\n\n  //removes an item from the view if it has been actioned\n  updateView(item){\n    let index = findIndex(this.queue, item);\n    if(index>-1){\n      this.queue.splice(index,1);\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                Name: {{disTeam.teamName}}\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                Average MMR: {{disTeam.teamMMRAvg}}\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { TeamService } from '../../../services/team.service';\nimport { Team } from '../../../classes/team.class';\n\n@Component({\n  selector: 'app-team-quick-view',\n  templateUrl: './team-quick-view.component.html',\n  styleUrls: ['./team-quick-view.component.css']\n})\nexport class TeamQuickViewComponent implements OnInit {\n  //component properties\n  _teamName: string\n  disTeam = new Team(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);\n\n  //Input bindings\n  @Input() set teamName(team){\n    if(team!=undefined&&team!=null){\n      this.disTeam = team;\n    }\n  }\n\n  constructor(private team : TeamService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                Name: {{player.displayName}}\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <div *ngIf=\\\"player.averageMmr; else noMmr\\\">MMR: {{player.averageMmr}}</div>\\n\\n            </div>\\n            <ng-template #noMmr>\\n                MMR: Player has not updated profile with hots logs URL, please contact them!\\n            </ng-template>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <div *ngIf=\\\"player.hlRankMetal && player.hlRankDivision; else noMetalDiv\\\">\\n                    Hero League: {{player.hlRankMetal}} - {{player.hlRankDivision}}\\n                </div>\\n                <ng-template #noMetalDiv>\\n                    Player has not recorded an ingame metal/div in their profole, please contact them!\\n                </ng-template>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { UserService } from '../../../services/user.service';\nimport { Profile } from '../../../classes/profile.class';\n\n@Component({\n  selector: 'app-user-quick-view',\n  templateUrl: './user-quick-view.component.html',\n  styleUrls: ['./user-quick-view.component.css']\n})\nexport class UserQuickViewComponent implements OnInit {\n  //component properties\n  _user:string\n  player = new Profile(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);\n\n  //input bindings\n  @Input() set userId(usr){\n    if(usr != null && usr != undefined){\n      this.player = usr;\n    } \n  }\n\n  constructor(private user: UserService) { }\n\n  ngOnInit() {\n\n  }\n\n}\n","module.exports = \".link-borders {\\n    border-right: solid;\\n    padding-right: 10px;\\n}\\n\\nul {\\n    list-style-type: none;\\n    margin: 0;\\n    padding: 0;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"forceFull\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col text-center\\\">\\n                <h2>Admin dashboard</h2>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col text-center\\\">\\n                <ul>\\n                    <li class=\\\"mt-1\\\">\\n                        <a [routerLink]=\\\"['/_admin/approveTeamQueue']\\\">Add User To Team</a>\\n                    </li>\\n                    <li class=\\\"mt-1\\\">\\n                        <a [routerLink]=\\\"['/_admin/deleteUser']\\\">Delete User</a>\\n                    </li>\\n                    <li class=\\\"mt-1\\\">\\n                        <a [routerLink]=\\\"['/_admin/divisionMgmt']\\\">Division Management</a>\\n                    </li>\\n                    <li class=\\\"mt-1\\\">\\n                        <a [routerLink]=\\\"['/_admin/manageTeam']\\\">Team Management</a>\\n                    </li>\\n                    <li class=\\\"mt-1\\\">\\n                        <a [routerLink]=\\\"['/_admin/matchMgmt']\\\">Match Management</a>\\n                    </li>\\n                    <li class=\\\"mt-1\\\">\\n                        <a [routerLink]=\\\"['/_admin/matchMgmt/weekDeadline']\\\">Match Schedule Deadline Setter</a>\\n                    </li>\\n                    <li class=\\\"mt-1\\\">\\n                        <a [routerLink]=\\\"['/_admin/userACLMgmt']\\\">User ACL Management</a>\\n                    </li>\\n                </ul>\\n                <!-- <h3>User Management</h3> -->\\n            </div>\\n        </div>\\n        <!-- <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <h3>Division Management</h3>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <h3>Team Management</h3>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <h2>User ACL Management</h2>\\n        </div>\\n    </div> -->\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".icon-align {\\n    display: inline-flex;\\n    vertical-align: middle;\\n}\"","module.exports = \"<div class=\\\"container pt-4\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <a [routerLink]=\\\"['/_admin/dashboard']\\\">Back to Dashboard</a>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <app-user-search (userSelected)=\\\"receiveUser($event)\\\" [buttonText]=\\\"'Select User For Delete'\\\"></app-user-search>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <div class=\\\"row\\\" *ngIf=\\\"turnOnForm\\\">\\n                <div class=\\\"col\\\">Review user below</div>\\n                <div class=\\\"col\\\">\\n                    <button type=\\\"button\\\" (click)=\\\"openDialog()\\\" class=\\\"btn btn-danger \\\">\\n                            <span class=\\\"icon-align\\\">\\n                              <i class=\\\"material-icons\\\">delete_forever</i> Delete\\n                            </span>\\n                          </button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\" *ngIf=\\\"turnOnForm\\\">\\n        <div class=\\\"col\\\">\\n            <app-profile-edit [passedProfile]=\\\"recievedProfile\\\"></app-profile-edit>\\n        </div>\\n    </div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { DeleteConfrimModalComponent } from '../../modal/delete-confrim-modal/delete-confrim-modal.component'; \nimport { AdminService } from 'src/app/services/admin.service';\n\n@Component({\n  selector: 'app-delete-member',\n  templateUrl: './delete-member.component.html',\n  styleUrls: ['./delete-member.component.css']\n})\nexport class DeleteMemberComponent implements OnInit {\n\n  //component properties\n  recievedProfile\n  turnOnForm: boolean = false;\n  confirm: string\n\n  constructor(public dialog: MatDialog, private admin:AdminService) { }\n\n  //functon bound to the user search event, when user is returned turn on the view to see the selected user profile\n  receiveUser(userRec){\n    this.turnOnForm = false;\n    if (userRec != null && userRec!=undefined){\n      this.turnOnForm = true;\n      this.recievedProfile = userRec;\n    }\n  }\n\n  //methods for opening the modal\n  openDialog(): void {\n\n    const dialogRef = this.dialog.open(DeleteConfrimModalComponent, {\n      width: '300px',\n      data: { confirm: this.confirm }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result.toLowerCase() == 'delete') {\n        this.admin.deleteUser(this.recievedProfile).subscribe(\n          res => {\n            this.turnOnForm = false;\n            this.recievedProfile = null;\n          }, err => {\n            console.log(err);\n          }\n        )\n      }\n    });\n  }\n  \n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".underline {\\n    border-bottom-style: solid;\\n}\"","module.exports = \"<div class=\\\"containter pt-4\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n\\n\\n            <div class=\\\"row border border-dark rounded mb-3 p-2\\\" *ngIf='selectedTeams.length>0 && selectedDiv'>\\n                <div class=\\\"col\\\">\\n                    <h5>Confirmation:</h5>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col\\\">\\n                            Adding teams:\\n                            <div *ngFor=\\\"let team of selectedTeams; let i = index\\\">{{team.teamName}}</div>\\n                        </div>\\n                        <div class=\\\"col\\\">\\n                            to Division:\\n                            <div>{{selectedDiv.displayName}}</div>\\n                        </div>\\n                        <div class=\\\"col-2\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"divisionTeams()\\\">Confirm</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row bg-secondary border border-dark text-white p-2\\\">\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col\\\">\\n                            <span>\\n              <h5>Teams:</h5>\\n            </span>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col\\\">\\n                            Team Name:\\n                        </div>\\n                        <div class=\\\"col\\\">\\n                            Team MMR:\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col\\\">\\n                            <span>\\n              <h5>Divisions:</h5>\\n            </span>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col\\\">\\n                            Division Name:\\n                        </div>\\n                        <div class=\\\"col\\\">\\n                            Division MMR Bracket:\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"row p-2\\\" style=\\\"border-style: solid\\\" [ngClass]=\\\"{'border border-info bg-info text-white': isSelected(team)}\\\" *ngFor=\\\"let team of undivisionTeams\\\">\\n                        <div class=\\\"col\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col\\\">\\n                                    <div><strong>Team Name</strong></div>\\n                                    {{team.teamName}}\\n                                </div>\\n                                <div class=\\\"col-2\\\">\\n                                    <div><strong>Team MMR:</strong></div>\\n                                    {{team.teamMMRAvg}}\\n                                </div>\\n                                <div class=\\\"col\\\">\\n                                    <a class=\\\"finger underline\\\" (click)=\\\"teamSelected(team)\\\">Click to <span *ngIf=\\\"isSelected(team) else select\\\"> deselect </span>\\n                                        <ng-template #select>select</ng-template> team\\n                                    </a>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col\\\">\\n                                    <div><strong>Preferred Coast</strong></div>\\n                                    {{team.questionnaire.eastWest}}\\n                                </div>\\n                                <div class=\\\"col\\\">\\n                                    <div><strong><a target=\\\"_blank\\\" [routerLink]=\\\"['/_admin/manageTeam/', teamService.routeFriendlyTeamName(team.teamName)]\\\">Team Profile</a></strong></div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n\\n\\n                    </div>\\n                </div>\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"row finger p-2\\\" [ngClass]=\\\"{'border border-warning bg-warning text-dark': isDivSelected(division)}\\\" *ngFor=\\\"let division of divisions\\\">\\n                        <div class=\\\"col\\\">\\n                            {{division.displayName}}\\n                        </div>\\n                        <div class=\\\"col\\\">\\n                            <div>Max MMR: {{division.maxMMR}}</div>\\n                            <div>Min MMR: {{division.minMMR}}</div>\\n                        </div>\\n                        <div class=\\\"col\\\">\\n                            <a class=\\\"finger underline\\\" (click)=\\\"divSelected(division)\\\">Click to Select Division</a>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { indexOf } from 'lodash';\nimport { Router } from '@angular/router';\nimport { TeamService } from 'src/app/services/team.service';\n\n@Component({\n  selector: 'app-add-team',\n  templateUrl: './add-team.component.html',\n  styleUrls: ['./add-team.component.css']\n})\nexport class AddTeamComponent implements OnInit {\n\n  //component properties\n  undivisionTeams //local variable for holding/displaying teams that have no division\n  divisions //local variable for holding/displaying the divisions\n  selectedTeams: any = []; //local variable holds the selected teams to assign to a division\n  selectedDiv //local variable holds the info of the selected div to add teams to\n\n  constructor(private admin: AdminService, private router:Router, public teamService:TeamService) { }\n\n  ngOnInit() {\n    //set the local vars to empty / uninitialised \n    this.selectedTeams = [];\n    this.selectedDiv = undefined;\n    this.undivisionTeams=[];\n\n    //get teams and divisions\n    this.admin.getTeamsNotDivisioned().subscribe(res => {\n      this.undivisionTeams = res;\n      this.undivisionTeams = this.undivisionTeams.sort( (a,b)=>{\n        if (a.teamMMRAvg < b.teamMMRAvg) {\n          return -1;\n        }\n        if (a.teamMMRAvg > b.teamMMRAvg) {\n          return 1\n        }\n        return 0;\n      } )\n    }, (err) => {\n      console.log(err)\n    })\n    this.divisions=[];\n    this.admin.getDivisionList().subscribe(res => {\n      this.divisions = res;\n    }, (err) => {\n      console.log(err);\n    })\n\n  }\n\n  //method accepts team name and toggles it's inclusion in the array of teams to be added\n  teamSelected(team) {\n    //if team is in the array, remove and deactivate it\n    let index = indexOf(this.selectedTeams, team)\n    if (index > -1) {\n      this.selectedTeams.splice(index, 1);\n    } else {\n      this.selectedTeams.push(team);\n    }\n  }\n\n  //sets the selected division variable\n  divSelected(div) {\n    this.selectedDiv = div;\n  }\n\n  //method for selective styling of team elements, returns true if team is in the selectedArray ,false if not\n  isSelected(team): boolean {\n    let index = indexOf(this.selectedTeams, team)\n    if (index > -1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  //method for selectinve styling of the division element, returns true if div is the selectedDiv, false if not\n  isDivSelected(div): boolean {\n    if (this.selectedDiv == div) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  //method to handle assigning selected teams to selected division\n  divisionTeams() {\n    this.admin.divisionTeam(this.selectedTeams, this.selectedDiv.divisionConcat).subscribe(\n      res => {\n        this.ngOnInit();\n      }, (err) => {\n        console.log(err)\n      }\n    );\n  }\n\n}\n","module.exports = \".finger:hover {\\n    background-color: darkgray;\\n    border-style: solid;\\n    border-color: black;\\n    border-width: 1px;\\n}\\n\\n.fullHeight {\\n    height: 100%;\\n}\\n\\n#tab-group mat-tab-body {\\n    flex-grow: 1;\\n}\\n\\n.mat-tab-body-wrapper {\\n    height: 100%;\\n}\"","module.exports = \"<div class=\\\"container fullHeight\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <a [routerLink]=\\\"['/_admin/dashboard']\\\">Back to Dashboard</a>\\n        </div>\\n    </div>\\n    <div class=\\\"row forceFull\\\">\\n        <div class=\\\"col\\\">\\n            <mat-tab-group dynamicHeight class=\\\"fullHeight\\\">\\n                <mat-tab label=\\\"Add Teams To Division\\\">\\n                    <ng-template matTabContent>\\n                        <app-add-team></app-add-team>\\n                    </ng-template>\\n                </mat-tab>\\n                <mat-tab label=\\\"Division Management\\\">\\n                    <ng-template matTabContent>\\n                        <app-division-props></app-division-props>\\n                    </ng-template>\\n                </mat-tab>\\n                <mat-tab label=\\\"Remove Teams From Division\\\">\\n                    <ng-template matTabContent>\\n                        <app-remove-team></app-remove-team>\\n                    </ng-template>\\n                </mat-tab>\\n            </mat-tab-group>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-division-management',\n  templateUrl: './division-management.component.html',\n  styleUrls: ['./division-management.component.css']\n})\nexport class DivisionManagementComponent implements OnInit {\n\n  constructor(){\n\n  }\n\n  ngOnInit(){\n    \n  }\n\n}\n","module.exports = \".example-container {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.example-container>* {\\n    width: 100%;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"example-container\\\">\\n                        <h5>Select division to modify:</h5>\\n                        <mat-form-field>\\n                            <mat-select placeholder=\\\"Division:\\\" [(ngModel)]=\\\"selectedDivision\\\" (ngModelChange)=\\\"selected(selectedDivision)\\\" disableOptionCentering>\\n                                <mat-option *ngFor=\\\"let division of divisions; let i = index\\\" [value]=\\\"division\\\">{{division.displayName}}</mat-option>\\n                            </mat-select>\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n                <div class=\\\"col\\\">\\n                    <h5>Create new division</h5>\\n                    <button (click)=\\\"createNew()\\\">Create new</button>\\n                </div>\\n            </div>\\n\\n            <div *ngIf=\\\"editDivision\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        <div class=\\\"example-container\\\">\\n                            <mat-form-field>\\n                                <input matInput placeholder=\\\"Display Name\\\" [formControl]=\\\"displayNameControl\\\" [(ngModel)]=\\\"editDivision.displayName\\\">\\n                                <mat-error *ngIf=\\\"displayNameControl.hasError('required')\\\">\\n                                    Display name is required\\n                                </mat-error>\\n                            </mat-form-field>\\n                            <mat-form-field>\\n                                <input matInput placeholder=\\\"Division Name\\\" [formControl]=\\\"divisionNameControl\\\" [(ngModel)]=\\\"editDivision.divisionName\\\" (ngModelChange)=\\\"calculateNewConcat()\\\">\\n                                <mat-error *ngIf=\\\"divisionNameControl.hasError('required')\\\">\\n                                    Division name is required\\n                                </mat-error>\\n                            </mat-form-field>\\n                            <mat-form-field>\\n                                <input matInput placeholder=\\\"Division Coast\\\" [(ngModel)]=\\\"editDivision.divisionCoast\\\" (ngModelChange)=\\\"calculateNewConcat()\\\">\\n                            </mat-form-field>\\n                            <mat-form-field>\\n                                <input matInput placeholder=\\\"Division Concat (System Reference)\\\" [(ngModel)]=\\\"editDivision.divisionConcat\\\" disabled=\\\"true\\\">\\n                            </mat-form-field>\\n                            <mat-form-field>\\n                                <input matInput placeholder=\\\"Sorting\\\" [(ngModel)]=\\\"editDivision.sorting\\\">\\n                            </mat-form-field>\\n                            <mat-form-field>\\n                                <input matInput placeholder=\\\"Max MMR\\\" [formControl]=\\\"maxMMRControl\\\" [(ngModel)]=\\\"editDivision.maxMMR\\\">\\n                                <mat-error *ngIf=\\\"maxMMRControl.hasError('required')\\\">\\n                                    Max MMR is required\\n                                </mat-error>\\n                            </mat-form-field>\\n                            <mat-form-field>\\n                                <input matInput placeholder=\\\"Min MMR\\\" [formControl]=\\\"minMMRControl\\\" [(ngModel)]=\\\"editDivision.minMMR\\\">\\n                                <mat-error *ngIf=\\\"minMMRControl.hasError('required')\\\">\\n                                    Min MMR is required\\n                                </mat-error>\\n                            </mat-form-field>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        <button class=\\\"btn btn-warning\\\" (click)=\\\"revert()\\\">Cancel Changes</button>\\n                    </div>\\n                    <div class=\\\"col\\\" *ngIf=\\\"!newDiv\\\">\\n                        <button class=\\\"btn btn-danger\\\" (click)=\\\"delete(editDivision.divisionConcat)\\\">Delete Selected Division</button>\\n                    </div>\\n                    <div class=\\\"col\\\">\\n                        <button class=\\\"btn btn-success\\\" [disabled]=\\\"!divisionForm.valid\\\" (click)=\\\"save(editDivision)\\\">Save</button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { DeleteConfrimModalComponent } from '../../../modal/delete-confrim-modal/delete-confrim-modal.component';\n\n@Component({\n  selector: 'app-division-props',\n  templateUrl: './division-props.component.html',\n  styleUrls: ['./division-props.component.css']\n})\nexport class DivisionPropsComponent implements OnInit {\n\n  //component properties\n  newDiv: boolean = false;\n  divisions: any = [];\n  selectedDivision: any = null;\n  safeSource\n  editDivision\n\n  constructor(private dialog: MatDialog, private adminService: AdminService) { }\n\n  displayNameControl = new FormControl('', [\n    Validators.required\n  ]);\n  divisionNameControl = new FormControl('', [\n    Validators.required\n  ]);\n  divisionCoastControl = new FormControl('', [\n    Validators.required\n  ]);\n  maxMMRControl = new FormControl('', [\n    Validators.required\n  ]);\n  minMMRControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  divisionForm = new FormGroup({\n    displayName: this.displayNameControl,\n    divName: this.divisionNameControl,\n    maxMMR: this.maxMMRControl,\n    minMMR: this.minMMRControl\n  })\n\n  //creates a new concatinated system id from provided inputs\n  calculateNewConcat(){\n    let div = this.editDivision.divisionName?this.editDivision.divisionName.toLowerCase():'' \n    \n    let coast = this.editDivision.divisionCoast?this.editDivision.divisionCoast.toLowerCase():'';\n    \n    this.editDivision.divisionConcat = div\n    if (coast.length>0){\n      this.editDivision.divisionConcat=this.editDivision.divisionConcat+'-'+coast;\n    }\n    this.editDivision.divisionConcat = this.editDivision.divisionConcat.replace(/[^A-Z0-9\\-]+/ig, \"-\");\n  }\n\n  //division selected from dropdown, creates a safe source to cancel back to\n  selected(div){\n    this.editDivision = Object.assign({}, this.selectedDivision);\n    this.safeSource = Object.assign({},this.selectedDivision);\n  }\n\n  //sets up an empty object to create a new division from\n  createNew(){\n    this.newDiv = true;\n    this.editDivision = Object.assign({});\n  }\n\n  ngOnInit() {\n    //gets division list\n    this.adminService.getDivisionList().subscribe( (res)=>{\n      this.divisions = res;\n    }, (err)=> {\n      console.log(err);\n    })\n  }\n\n  //reverts any changes to a dib object back to the safe source created at selection\n  revert(){\n    if(this.newDiv){\n      this.editDivision = null;  \n    }\n    this.editDivision = Object.assign({}, this.safeSource);\n  }\n\n  //opens a modal to receive confirmation to delete\n  confirm: string\n  delete(divConcat): void {\n\n    const dialogRef = this.dialog.open(DeleteConfrimModalComponent, {\n      width: '300px',\n      data: { confirm: this.confirm }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n\n\n      if (result.toLowerCase() == 'delete') {\n        this.adminService.deleteDivision(divConcat).subscribe(\n          res=>{\n            this.editDivision=null;\n            this.ngOnInit();\n          },\n          err=>{\n            alert('Division was not deleted!')\n          }\n        )\n      }\n    });\n  }\n\n  //handles the saving of edits to a division or the creation of a new division\n  //resets the view on success\n  save(){\n    if(this.newDiv){\n      this.adminService.createDivision(this.editDivision).subscribe(\n        res=>{\n          this.newDiv = false;\n          this.editDivision = null;\n          this.ngOnInit();\n        },err=>{\n          alert('Division not created');\n        }\n      )\n    }else{\n      this.adminService.saveDivisionEdits(this.safeSource.divisionConcat, this.editDivision).subscribe(\n        res => {\n          this.editDivision = null;\n          this.ngOnInit();\n        }, err => {\n          console.log(err)\n        }\n      )\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <div>\\n                        <h5>Select division to modify:</h5>\\n                        <mat-form-field class=\\\"mat-FullWidth\\\">\\n                            <mat-select placeholder=\\\"Division:\\\" [(ngModel)]=\\\"selectedDivision\\\" (ngModelChange)=\\\"selected()\\\" disableOptionCentering>\\n                                <mat-option *ngFor=\\\"let division of divisions; let i = index\\\" [value]=\\\"division\\\">{{division.displayName}}</mat-option>\\n                            </mat-select>\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\" *ngIf=\\\"selectedDiv\\\">\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"row finger p-2\\\" [ngClass]=\\\"{'border border-info bg-info text-white': isSelected(team)}\\\" (click)=\\\"teamSelected(team)\\\" *ngFor=\\\"let team of selectedDiv.teams\\\">\\n                        <div class=\\\"col\\\">\\n                            {{team}}\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row mt-2\\\">\\n                <div class=\\\"col\\\">\\n                    <button type=\\\"button\\\" (click)=\\\"removeTeams()\\\" class=\\\"btn btn-danger\\\">Remove Selected Teams</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { indexOf } from 'lodash';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-remove-team',\n  templateUrl: './remove-team.component.html',\n  styleUrls: ['./remove-team.component.css']\n})\nexport class RemoveTeamComponent implements OnInit {\n\n  constructor(private adminService:AdminService, private router: Router) { }\n\n  //component properties\n  divisions:any = [];\n  selectedDiv = null;\n  selectedDivision\n  selectedTeams: any = [];\n\n  ngOnInit() {\n    //grab division list for display\n    this.adminService.getDivisionList().subscribe((res) => {\n      this.divisions = res;\n    }, (err) => {\n      console.log(err);\n    })\n  }\n\n  //Assings the local property selectedDiv to a copy of the division chose.\n  selected(){\n    this.selectedDiv = Object.assign({},this.selectedDivision);\n  }\n\n  \n  //toggles provided team into or out of the selectedTeams array\n  teamSelected(team) {\n    //if team is in the array, remove it\n    let index = indexOf(this.selectedTeams, team)\n    if (index > -1) {\n      this.selectedTeams.splice(index, 1);\n    } else { //else push the team into the array\n      this.selectedTeams.push(team);\n    }\n  }\n  //function accepts team and returns true if it is in the selected array - conditional styling for view\n  isSelected(team): boolean {\n    let index = indexOf(this.selectedTeams, team)\n    if (index > -1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  //calls the admin service to remove the selected teams from the selected divison\n  removeTeams(){\n    this.adminService.removeTeams(this.selectedTeams, this.selectedDiv.divisionConcat).subscribe( (res)=>{\n      this.selectedDiv = null;\n      this.selectedTeams = [];\n    }, (err)=>{\n      console.log(err);\n    })\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  logs-viewer works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logs-viewer',\n  templateUrl: './logs-viewer.component.html',\n  styleUrls: ['./logs-viewer.component.css']\n})\nexport class LogsViewerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".icon-align {\\n    display: inline-flex;\\n    vertical-align: middle;\\n}\\n\\n.oddRow {\\n    background-color: #e0e0eb\\n}\\n\\n.rowBorder {\\n    border-style: solid;\\n    border-width: 1px;\\n    border-color: lightgrey;\\n}\\n\\n.titles {\\n    font-weight: bold\\n}\"","module.exports = \"<div class=\\\"container pt-4\\\">\\n    <div class=\\\"\\\">\\n        <div class=\\\"row bg-white\\\">\\n            <div class=\\\"col\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        <a [routerLink]=\\\"['/_admin/dashboard']\\\">Back to Dashboard</a>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"row mt-3\\\">\\n                    <div class=\\\"col\\\">\\n                        <h3>Select from list:</h3>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        <mat-form-field class=\\\"mat-FullWidth\\\">\\n                            <input matInput placeholder=\\\"Filter by name\\\" [(ngModel)]=\\\"filterName\\\" (ngModelChange)=\\\"filterTeams(filterName)\\\">\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n                <mat-paginator [length]=\\\"length\\\" [pageSize]=\\\"pageSize\\\" (page)=\\\"pageEventHandler($event)\\\">\\n\\n                </mat-paginator>\\n                <div class=\\\"row mt-2 p-3 rowBorder\\\" *ngFor=\\\"let team of displayArray; let ind = index\\\" [ngClass]=\\\"{oddRow : ind%2!=0}\\\">\\n                    <div class=\\\"col\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col\\\">\\n                                <span class=\\\"titles\\\">Team Name:</span> {{team.teamName}}\\n                            </div>\\n                            <div class=\\\"col\\\">\\n                                <span class=\\\"titles\\\">Divison: </span> <i *ngIf=\\\"!team.divisionDisplayName\\\">(not assigned)</i>\\n                                <span *ngIf=\\\"team.divisionDisplayName\\\">{{team.divisionDisplayName}}</span>\\n                            </div>\\n                            <div class=\\\"col\\\">\\n                                <span class=\\\"titles\\\">Captain:</span> {{team.captain}}\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col\\\">\\n                                <span class=\\\"titles\\\">Members:</span> {{team.teamMembers.length}}\\n                            </div>\\n                            <div class=\\\"col\\\">\\n                                <span class=\\\"titles\\\">MMR:</span> {{team.teamMMRAvg}}\\n                            </div>\\n                            <div class=\\\"col\\\">\\n\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col text-center\\\">\\n                                <a class=\\\"btn btn-secondary\\\" (click)=\\\"selectedFromList(team)\\\">Select this team for management</a>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <!--  -->\\n    </div>\\n</div>\"","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport { TeamService } from '../../services/team.service';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { Router } from '@angular/router';\nimport { PageEvent, MatPaginator } from '@angular/material';\n\n@Component({\n  selector: 'app-manage-select-team',\n  templateUrl: './manage-select-team.component.html',\n  styleUrls: ['./manage-select-team.component.css']\n})\nexport class ManageSelectTeamComponent implements OnInit, AfterViewInit {\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(private admin: AdminService, private team: TeamService, private router:Router) { }\n\n  //component properties\n  recievedProfile\n  turnOnForm: boolean = false;\n  pulledProfile:any\n  teams:any[]=[];\n\n  users: any = [];\n  filterName: string = '';\n  displayArray = [];\n  length: number;\n  pageSize: number = 10;\n  filteredArray: any = [];\n\n  ngAfterViewInit() {\n    this.paginator.pageIndex = 0;\n  }\n\n  pageEventHandler(pageEvent: PageEvent) {\n    let i = pageEvent.pageIndex * this.pageSize;\n    let endSlice = i + this.pageSize\n    if (endSlice > this.filteredArray.length) {\n      endSlice = this.filteredArray.length;\n    }\n    this.displayArray = [];\n    this.displayArray = this.filteredArray.slice(i, endSlice)\n\n  } \n  \n  //callback function that is passed to the search component, accepts the profile selected from that component\n  //santaizes the returned profile for URL and routes to that profile \n  receiveTeam(teamProf) {\n    if (teamProf != null && teamProf != undefined) {\n      this.goView(this.team.routeFriendlyTeamName(teamProf.teamName_lower));\n    }\n  }\n\n  filterTeams(filterName) {\n    if (filterName == null || filterName == undefined || filterName.length == 0) {\n      this.filteredArray = this.teams;\n      this.length = this.filteredArray.length;\n      this.displayArray = this.filteredArray.slice(0, 10);\n      this.paginator.firstPage();\n    } else {\n      this.filteredArray = [];\n      this.teams.forEach(element => {\n        if (element.teamName_lower.toLowerCase().indexOf(filterName.toLowerCase()) > -1) {\n          this.filteredArray.push(element);\n        }\n      });\n      this.length = this.filteredArray.length;\n      this.displayArray = this.filteredArray.slice(0, 10);\n      this.paginator.firstPage();\n    }\n  }\n\n  //function tied to the list of teams, accepts team in scope, \n  //sanatizes the team name and routes to the proper endpoint\n  selectedFromList(prof){\n    this.goView(this.team.routeFriendlyTeamName(prof.teamName_lower));\n  }\n\n  //takes id and routes to the manageTeam of id\n  goView(id){\n    this.router.navigate(['_admin/manageTeam/', id]);\n  }\n\n  ngOnInit() {\n    //returns the teams for displaying in list. \n    //TODO: check into pagination \n    this.admin.getTeams().subscribe(\n      (res)=>{\n        this.teams = res;\n        this.filteredArray = this.teams;\n        this.length = this.filteredArray.length;\n        this.displayArray = this.teams.slice(0,10);\n      },\n      (err)=>{\n        console.log(err);\n      }\n    )\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <a [routerLink]=\\\"['/_admin/manageTeam']\\\">Back to Team Select</a>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <app-team-profile [source]=\\\"'admin'\\\" [passedProfile]=\\\"recievedProfile\\\"></app-team-profile>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-manage-team-view',\n  templateUrl: './manage-team-view.component.html',\n  styleUrls: ['./manage-team-view.component.css']\n})\nexport class ManageTeamViewComponent implements OnInit {\n\n  //component properties\n  recievedProfile:string = '';\n\n  constructor(private route:ActivatedRoute) { \n    if (this.route.snapshot.params['id']) {\n      this.recievedProfile = this.route.snapshot.params['id'];\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row bg-white\\\">\\n        <div class=\\\"col\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">Match ID: {{match.matchId}}</div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">Season: {{match.season}}</div>\\n                <div class=\\\"col\\\">Round: {{match.round}}</div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    Division: {{match.divisionConcat}}\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <div *ngIf=\\\"match.home.teamName!=null&&match.home.teamName!=undefined&&match.home.teamName.length>0 else bye\\\">{{match.home.teamName}}</div>\\n                </div>\\n                <div class=\\\"col\\\">\\n                    <div *ngIf=\\\"match.away.teamName!=null&&match.away.teamName!=undefined&&match.away.teamName.length>0 else bye\\\">{{match.away.teamName}}</div>\\n                </div>\\n                <ng-template #bye> BYE </ng-template>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <h3>Scores:</h3>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-4\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col\\\">\\n                            <mat-form-field class=\\\"fullWidth\\\">\\n                                <mat-select placeholder=\\\"{{match.home.teamName}} Score:\\\" [(ngModel)]=\\\"homeScore\\\" disableOptionCentering>\\n                                    <mat-option [value]=\\\"0\\\">0</mat-option>\\n                                    <mat-option [value]=\\\"1\\\">1</mat-option>\\n                                    <mat-option [value]=\\\"2\\\">2</mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n                <div class=\\\"col\\\">\\n\\n                </div>\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col\\\">\\n                            <mat-form-field>\\n                                <mat-select placeholder=\\\"{{match.away.teamName}} Score:\\\" [(ngModel)]=\\\"awayScore\\\" disableOptionCentering>\\n                                    <mat-option [value]=\\\"0\\\">0</mat-option>\\n                                    <mat-option [value]=\\\"1\\\">1</mat-option>\\n                                    <mat-option [value]=\\\"2\\\">2</mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <h3>Time:</h3>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <mat-form-field>\\n                        <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" [(ngModel)]=\\\"friendlyDate\\\">\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #picker></mat-datepicker>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col\\\">\\n                    <mat-form-field>\\n                        <mat-select placeholder=\\\"Start Time:\\\" [(ngModel)]=\\\"friendlyTime\\\">\\n                            <mat-option *ngFor=\\\"let time of times\\\" [value]=\\\"time\\\">\\n                                {{time}}\\n                            </mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n\\n                    <mat-form-field>\\n                        <mat-select placeholder=\\\"AM/PM:\\\" [(ngModel)]=\\\"suffix\\\">\\n                            <mat-option *ngFor=\\\"let suffix of amPm\\\" [value]=\\\"suffix\\\">\\n                                {{suffix}}\\n                            </mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <h3>Caster Info:</h3>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <mat-form-field class=\\\"tp-FullWidth\\\">\\n                        <input matInput placeholder=\\\"Caster Name\\\" [(ngModel)]=\\\"match.casterName\\\">\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <mat-form-field class=\\\"tp-FullWidth\\\">\\n                        <input matInput placeholder=\\\"Caster URL\\\" [(ngModel)]=\\\"match.casterUrl\\\">\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <button class=\\\"btn btn-success\\\" (click)=\\\"saveMatch(match)\\\"> Save </button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ScheduleService } from 'src/app/services/schedule.service';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { UtilitiesService } from 'src/app/services/utilities.service';\n\n@Component({\n  selector: 'app-match-edit',\n  templateUrl: './match-edit.component.html',\n  styleUrls: ['./match-edit.component.css']\n})\nexport class MatchEditComponent implements OnInit {\n\n  //component properties\n  matchId;\n  times: any[] = [];\n  match: any = {\n    home: {\n      teamName: '',\n      score: null\n    },\n    away: {\n      teamName: '',\n      score: null\n    },\n    casterName: null,\n    casterUrl: null\n  }; //match prototype\n  homeScore: number;\n  awayScore: number;\n  suffix;\n  friendlyTime;\n  friendlyDate;\n  amPm = ['PM', 'AM'];\n\n  \n  constructor(private route: ActivatedRoute, private scheduleService: ScheduleService, private adminService: AdminService, private util:UtilitiesService) { \n    if (this.route.snapshot.params['id']) {\n      this.matchId = this.route.snapshot.params['id'];\n    }\n  }\n\n  ngOnInit() {\n    this.scheduleService.getMatchInfo(6, this.matchId).subscribe(res=>{\n      this.match = res;\n      if (this.match.away.score || this.match.home.score) {\n        this.homeScore = this.match.home.score;\n        this.awayScore = this.match.away.score;\n      }\n      if(!this.match.scheduledTime){\n        this.match.scheduledTime = {};\n      }else{\n        this.friendlyDate = this.util.getDatePickerFormatFromMS(this.match.scheduledTime.startTime);\n        this.friendlyTime = this.util.getTimeFromMS(this.match.scheduledTime.startTime);\n        this.suffix = this.util.getSuffixFromMS(this.match.scheduledTime.startTime);\n      }\n    }, err=>{\n      console.log(err);\n    })\n    for (let i = 1; i < 13; i++) {\n      for (let j = 0; j <= 3; j++) {\n        let min: any = j * 15;\n        if (min == 0) {\n          min = '00';\n        }\n        let time = i + \":\" + min;\n        this.times.push(time);\n      }\n    }\n  }\n\n  saveMatch(match){\n    let submittable = true;\n    if(this.homeScore == 1 && this.awayScore == 2 || this.awayScore == 1 && this.homeScore ==2){\n      //ok\n    } else if (this.homeScore == 0 && this.awayScore == 2 || this.awayScore == 0 && this.homeScore == 2){\n      //ok\n    }else if(this.homeScore + this.awayScore > 3){\n      submittable = false;\n      alert('these scores are not allowed');\n    }else{\n      submittable = false;\n      alert('these scores are not allowed');\n    }\n\n    if(this.friendlyDate && this.friendlyTime){\n      let years = this.friendlyDate.getFullYear();\n      let month = this.friendlyDate.getMonth();\n      let day = this.friendlyDate.getDate();\n\n      let colonSplit = this.friendlyTime.split(':');\n      colonSplit[1] = parseInt(colonSplit[1]);\n      if (this.suffix == 'PM') {\n        colonSplit[0] = parseInt(colonSplit[0]);\n        colonSplit[0] += 12;\n      }\n      let setDate = new Date();\n      setDate.setFullYear(years);\n      setDate.setMonth(month);\n      setDate.setDate(day);\n      setDate.setHours(colonSplit[0]);\n      setDate.setMinutes(colonSplit[1]);\n      let msDate = setDate.getTime();\n      let endDate = msDate + 5400000;\n      match.scheduledTime.startTime = msDate;\n      match.scheduledTime.endDate = endDate;\n    } else if (this.friendlyDate && !this.friendlyTime){\n      alert('You have entered a date but no time!');\n    } else if (!this.friendlyDate && this.friendlyTime) {\n      alert('You have entered a time but no date!');\n    }\n\n    if(submittable){\n      this.adminService.matchUpdate(match).subscribe(\n        (res) => {\n          this.ngOnInit();\n        },\n        (err) => {\n          console.log(err);\n        }\n      )\n    }\n    \n    \n  }\n \n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"\\\">\\n        <div class=\\\"row bg-white\\\">\\n            <div class=\\\"col\\\">\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        <a [routerLink]=\\\"['/_admin/dashboard']\\\">Back to Dashboard</a>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        <h2>Match Admin Dashboard</h2>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        <mat-form-field class=\\\"mat-FullWidth\\\">\\n                            <mat-select placeholder=\\\"Division:\\\" [(ngModel)]=\\\"selectedDivision\\\" (ngModelChange)=\\\"doFilterMatches(selectedDivision, selectedRound, filterTeam)\\\" disableOptionCentering>\\n                                <mat-option [value]=\\\"null\\\"> </mat-option>\\n                                <mat-option *ngFor=\\\"let division of divisions; let i = index\\\" [value]=\\\"division.divisionConcat\\\">{{division.displayName}}</mat-option>\\n                            </mat-select>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col\\\">\\n                        <mat-form-field class=\\\"mat-FullWidth\\\">\\n                            <mat-select placeholder=\\\"Round:\\\" [(ngModel)]=\\\"selectedRound\\\" (ngModelChange)=\\\"doFilterMatches(selectedDivision, selectedRound, filterTeam)\\\" disableOptionCentering>\\n                                <mat-option [value]=\\\"null\\\"> </mat-option>\\n                                <mat-option *ngFor=\\\"let round of rounds\\\" [value]=\\\"round\\\">{{round}}</mat-option>\\n                            </mat-select>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col\\\">\\n                        <mat-form-field class=\\\"mat-FullWidth\\\">\\n                            <input matInput placeholder=\\\"Team Name\\\" [(ngModel)]=\\\"filterTeam\\\" (ngModelChange)=\\\"doFilterMatches(selectedDivision, selectedRound, filterTeam)\\\">\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n                <mat-paginator [length]=\\\"length\\\" [pageIndex]=\\\"pageIndex\\\" [pageSize]=\\\"pageSize\\\" (page)=\\\"pageEventHandler($event)\\\">\\n\\n                </mat-paginator>\\n                <div class=\\\"row p-2\\\" *ngFor=\\\"let match of displayArray; let ind = index;\\\" [ngClass]=\\\"{'bg-light': ind%2!=0}\\\">\\n                    <div class=\\\"col-10\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col\\\">\\n                                <!-- {{match.division.displayName}} -->\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row mt-2\\\">\\n                            <div class=\\\"col\\\">\\n                                {{match.home.teamName}}\\n                            </div>\\n                            <div class=\\\"col\\\">\\n                                -VS-\\n                            </div>\\n                            <div class=\\\"col\\\">\\n                                {{match.away.teamName}}\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row mt-2\\\">\\n                            <div class=\\\"col\\\">\\n                                Scheduled Time: <span *ngIf=\\\"match.scheduledTime !=undefined && match.scheduledTime !=null else notScheduled\\\">{{displayTime(match.scheduledTime.startTime)}}</span>\\n                                <ng-template #notScheduled>\\n                                    <span>Not Yet Scheduled</span>\\n                                </ng-template>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\" *ngIf=\\\"match.casterName !=undefined && match.casterName !=null\\\">\\n                            <div class=\\\"col\\\">\\n                                <div>\\n                                    Caster: {{match.casterName}} Url: {{match.casterUrl}}\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"col\\\">\\n                        <a [routerLink]=\\\"[match.matchId]\\\" class=\\\"btn btn-primary\\\">Manage</a>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <!--  -->\\n    </div>\\n</div>\"","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport { ScheduleService } from 'src/app/services/schedule.service';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { MatPaginator, PageEvent } from '@angular/material';\n\n@Component({\n  selector: 'app-match-management',\n  templateUrl: './match-management.component.html',\n  styleUrls: ['./match-management.component.css']\n})\nexport class MatchManagementComponent implements OnInit, AfterViewInit {\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  //component properties\n  hideForm = true;\n  selectedRound: any\n  selectedDivision: any\n  originalMatches: any\n  filterMatches: any\n  filterTeam: any\n  rounds = [];\n  divisions = []\n\n  constructor(private scheduleService: ScheduleService, private adminService: AdminService) { }\n\n  ngAfterViewInit() {\n    this.paginator.pageIndex = 0;\n  }\n\n  ngOnInit() {\n    this.adminService.getDivisionList().subscribe((res) => {\n      this.divisions = res;\n      this.scheduleService.getAllMatches().subscribe(\n        (sched) => {\n          this.originalMatches = sched;\n          this.filterMatches = sched;\n          this.filterMatches.forEach(match => {\n            match.submitCaster = {\n              \"name\": '',\n              \"URL\": ''\n            }\n            if (this.rounds.indexOf(match.round) < 0) {\n              this.rounds.push(match.round);\n            }\n          });\n          this.rounds.sort();\n          this.length = this.filterMatches.length;\n          this.displayArray = this.filterMatches.slice(0, this.pageSize);\n        }\n      )\n    }, (err) => {\n      console.log(err);\n    });\n  }\n\n  displayArray = [];\n  length: number;\n  pageSize: number = 10;\n  filteredArray: any = [];\n  pageIndex: number;\n\n  pageEventHandler(pageEvent: PageEvent) {\n    console.log(pageEvent);\n    let i = pageEvent.pageIndex * this.pageSize;\n    let endSlice = i + this.pageSize\n    if (endSlice > this.filterMatches.length) {\n      endSlice = this.filterMatches.length;\n    }\n    console.log('index start ', i, ' endSlice ', endSlice);\n    this.displayArray = [];\n    this.displayArray = this.filterMatches.slice(i, endSlice)\n\n  } \n\n  /*\n  div, round, team\n  div, round, \n  div, team,\n  round, team,\n  div, \n  round, \n  team\n  */\n //filters the matches based on selected criteria\n  doFilterMatches(div, round, team) {\n    // console.log('div ', div, ' round ', round, ' team ', team);\n    this.filterMatches = this.originalMatches.filter(match => {\n      let home, away;\n      if(!match.away.teamName){\n        away = '';\n      }else{\n        away = match.away.teamName.toLowerCase();\n      }\n      if(!match.home.teamName){\n        home = '';\n      }else{\n        home = match.home.teamName.toLowerCase();\n      }\n      if(team){\n        team = team.toLowerCase();\n      }\n      \n      let pass = false;\n      if (div && round && team) {\n        if (div == match.divisionConcat && round == match.round && \n          (away.indexOf(team) > -1 || home.indexOf(team) >-1 )) {\n          pass = true;\n        }\n      } else if (div && round){\n        if (div == match.divisionConcat && round == match.round) {\n          pass = true;\n        }\n      } else if (div && team) {\n        if (div == match.divisionConcat && (away.indexOf(team) > -1 || home.indexOf(team) > -1 )) {\n          pass = true;\n        }\n      } else if (round && team) {\n        if (round == match.round && (away.indexOf(team) > -1 || home.indexOf(team) > -1 )) {\n          pass = true;\n        }\n      }else if(div) {\n        if (div == match.divisionConcat) {\n          pass = true;\n        }\n      } else if (round) {\n        if (round == match.round) {\n          pass = true;\n        }\n      }else if(team){\n        if (away.indexOf(team) > -1 || home.indexOf(team) > -1 ){\n          pass = true;\n        }\n      } else {\n        pass = true\n      }\n      return pass;\n    }\n    );\n\n    this.length = this.filterMatches.length;\n    this.displayArray = this.filterMatches.slice(0, this.pageSize > this.length ? this.length : this.pageSize);\n    this.paginator.firstPage();\n  }\n\n  displayTime(ms) {\n    let d = new Date(parseInt(ms));\n    let day = d.getDate();\n    let year = d.getFullYear();\n    let month = d.getMonth();\n    month = month + 1;\n    let hours = d.getHours();\n    let suffix = \"AM\";\n    if (hours > 12) {\n      hours = hours - 12;\n      suffix = \"PM\";\n    }\n\n    let min = d.getMinutes();\n    let minStr;\n    if (min == 0) {\n      minStr = '00';\n    } else {\n      minStr = min.toString();\n    }\n    let dateTime = month + '/' + day + '/' + year + ' @ ' + hours + ':' + minStr + \" \" + suffix;\n    return dateTime;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container forceFull\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <a [routerLink]=\\\"['/_admin/dashboard']\\\">Back to Dashboard</a>\\n        </div>\\n    </div>\\n    <div class=\\\"row mt-3\\\">\\n        <div class=\\\"col\\\">\\n            Select Divison:\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <mat-form-field>\\n                <mat-select placeholder=\\\"Division:\\\" [(ngModel)]=\\\"selectedDivision\\\" (ngModelChange)=\\\"selected(selectedDivision)\\\" disableOptionCentering>\\n                    <mat-option *ngFor=\\\"let division of divisions; let i = index\\\" [value]=\\\"division\\\">{{division.displayName}}</mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            Select week to require a deadline through:\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <mat-form-field>\\n                <mat-select placeholder=\\\"Division:\\\" [(ngModel)]=\\\"selectedWeek\\\" disableOptionCentering>\\n                    <mat-option *ngFor=\\\"let week of weeks; let i = index\\\" [value]=\\\"week\\\">{{week}}</mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            Select due date of WEEK 1 MATCH! THIS WILL SET DEADLINES +7 DAYS OUT FROM THIS WEEK FOR SPECIFIED WEEKS!\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <mat-form-field>\\n                <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" [(ngModel)]=\\\"friendlyDate\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #picker></mat-datepicker>\\n            </mat-form-field>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <button (click)=\\\"createDeadline()\\\" class=\\\"btn btn-info\\\">Set Scheduling Deadlines!</button>\\n        </div>\\n    </div>\\n\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/services/admin.service';\n\n@Component({\n  selector: 'app-set-deadline',\n  templateUrl: './set-deadline.component.html',\n  styleUrls: ['./set-deadline.component.css']\n})\nexport class SetDeadlineComponent implements OnInit {\n  divisions\n  selectedDivision\n  weeks:any[]=[];\n  friendlyDate\n  selectedWeek\n  constructor( private admin:AdminService) { }\n\n  ngOnInit() {\n    this.divisions = [];\n    this.admin.getDivisionList().subscribe(res => {\n      this.divisions = res;\n    }, (err) => {\n      console.log(err);\n    })\n  }\n\n  selected(selectedDivision){\n    let number;\n    this.selectedDivision = selectedDivision;\n    if(selectedDivision.teams % 2 == 0){\n      number = selectedDivision.teams.length-1;\n    }else{\n      number = selectedDivision.teams.length;\n    }\n    for(var i = 0; i<number; i++){\n      this.weeks.push(i+1);\n    }\n  }\n\n  createDeadline(){\n    console.log(this.friendlyDate);\n\n    this.friendlyDate.setHours(23);\n    this.friendlyDate.setMinutes(59);\n\n    let time = this.friendlyDate.getTime();\n\n    \n    if (this.selectedDivision.divisionConcat && time && this.selectedWeek){\n      this.admin.setScheduleDeadline(this.selectedDivision.divisionConcat, time, this.selectedWeek).subscribe( res=>{\n      console.log(res)\n    }, err=>{\n      console.log(err);\n    })\n    }else{\n      alert('Input missing');\n    } \n\n\n  }\n\n}\n","module.exports = \".footer {\\n    color: white\\n}\\n\\n.footLink {\\n    color: white\\n}\\n\\n.footIco {\\n    margin-right: 10px;\\n}\\n\\nul {\\n    list-style-type: none;\\n    margin: 0;\\n    padding: 0;\\n}\"","module.exports = \"<!-- Footer -->\\n\\n<link rel=\\\"stylesheet\\\" href=\\\"https://use.fontawesome.com/releases/v5.6.3/css/all.css\\\" integrity=\\\"sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/\\\" crossorigin=\\\"anonymous\\\">\\n<div class=\\\"p-3 bg-dark m-auto\\\">\\n    <div class=\\\"container footer\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col text-center\\\">\\n                Quick Links\\n                <ul>\\n                    <li><a class=\\\"footLink\\\" [routerLink]=\\\"['/blog','3BLsIya6ZiWQWka4IeUw2']\\\">Rules</a></li>\\n                    <li><a class=\\\"footLink\\\" [routerLink]=\\\"['/blog']\\\">Blog</a></li>\\n                </ul>\\n            </div>\\n            <div class=\\\"col text-center\\\">\\n                Copyright NGS\\n            </div>\\n            <div class=\\\"col text-center\\\">\\n                Social Media:\\n                <ul class=\\\"list-inline\\\">\\n                    <li class=\\\"list-inline-item\\\">\\n                        <a href=\\\"https://discordapp.com/invite/mQMfTga\\\" target=\\\"_blank\\\"> <i class=\\\"fab fa-3x footIco footLink fa-discord \\\"></i></a>\\n                    </li>\\n                    <li class=\\\"list-inline-item\\\">\\n                        <a href=\\\"https://twitter.com/nexus_series?lang=en\\\" target=\\\"_blank\\\"> <i class=\\\"fab fa-3x footIco footLink  fa-twitter\\\"></i></a>\\n                    </li>\\n                    <li class=\\\"list-inline-item\\\">\\n                        <a href=\\\"https://www.youtube.com/channel/UCnfohSTrlMyqiCwI5-3jXmw\\\" target=\\\"_blank\\\"><i class=\\\"fab footIco fa-3x footLink  fa-youtube\\\"></i></a>\\n                    </li>\\n                    <li class=\\\"list-inline-item\\\">\\n                        <a href=\\\"https://www.patreon.com/heroesnexusgamingseries\\\" target=\\\"_blank\\\"><i class=\\\"fab footIco fa-3x footLink  fa-patreon\\\"></i></a>\\n                    </li>\\n                </ul>\\n                <!-- <div class=\\\"row mt-2\\\">\\n                    <div class=\\\"col\\\">\\n                        <a href=\\\"https://discordapp.com/invite/mQMfTga\\\" target=\\\"_blank\\\"> <img class=\\\"img-fluid\\\" src=\\\"/assets/Discord.png\\\" alt=\\\"Discord\\\"></a>\\n                    </div>\\n                </div>\\n                <div class=\\\"row mt-2\\\">\\n                    <div class=\\\"col\\\">\\n                        <a href=\\\"https://www.youtube.com/channel/UCnfohSTrlMyqiCwI5-3jXmw\\\" target=\\\"_blank\\\"><img class=\\\"img-fluid\\\" src=\\\"/assets/YouTube.png\\\" alt=\\\"YouTube\\\"></a>\\n                    </div>\\n                </div>\\n                <div class=\\\"row mt-2\\\">\\n                    <div class=\\\"col\\\">\\n                 <a href=\\\"https://twitter.com/nexus_series?lang=en\\\" target=\\\"_blank\\\"> <img class=\\\"img-fluid\\\" src=\\\"/assets/Twitter.png\\\" alt=\\\"Twitter\\\"></a> -->\\n\\n\\n            </div>\\n        </div>\\n\\n        <!-- <div class=\\\"row mt-2\\\">\\n            <div class=\\\"col\\\">\\n                <a href=\\\"https://www.patreon.com/heroesnexusgamingseries\\\" target=\\\"_blank\\\"><img class=\\\"img-fluid\\\" src=\\\"/assets/Patreon.png\\\" alt=\\\"Patreon\\\"></a>\\n            </div>\\n        </div> -->\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './app-footer.component.html',\n  styleUrls: ['./app-footer.component.css']\n})\nexport class AppFooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { HomeComponent } from \"./home/home.component\";\nimport { DirectoryComponent } from \"./directory/directory.component\";\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgModule, Component } from \"@angular/core\";\nimport { LoginComponent } from \"./login/login.component\";\nimport { ProfileEditComponent } from \"./profile-edit/profile-edit.component\";\nimport { TeamProfileComponent } from \"./team-profile/team-profile.component\";\nimport { DivisionComponent } from \"./division/division.component\";\nimport { OutreachEmailResponseComponent } from \"./outreach-email-response/outreach-email-response.component\";\nimport { BlogListComponent } from \"./blog-list/blog-list.component\";\nimport { BlogViewComponent } from \"./blog-view/blog-view.component\";\nimport { LogoutComponent } from \"./logout/logout.component\";\nimport { CreateTeamComponent } from \"./create-team/create-team.component\";\nimport { ApproveMemberComponent } from \"./admin/approve-member/approve-member.component\";\nimport { DeleteMemberComponent } from \"./admin/delete-member/delete-member.component\";\nimport { ManageSelectTeamComponent } from \"./admin/manage-team/manage-select-team.component\";\nimport { DivisionManagementComponent } from \"./admin/division-management/division-management.component\";\nimport { ScheduleViewComponent } from \"./schedule/schedule-view/schedule-view.component\";\nimport { MatchScheduleComponent } from \"./schedule/match-schedule/match-schedule.component\";\nimport { TeamScheduleComponent } from \"./schedule/team-schedule/team-schedule.component\";\nimport { ReportingComponent } from \"./reporting/reporting.component\";\nimport { DashboardComponent } from \"./admin/dashboard/dashboard.component\";\nimport { CasterDashboardComponent } from \"./caster-tools/caster-dashboard/caster-dashboard.component\";\nimport { MatchManagementComponent } from \"./admin/match-management/match-management.component\";\nimport { MatchEditComponent } from \"./admin/match-management/match-edit/match-edit.component\";\nimport { AdminAclManagementComponent } from './admin/admin-acl-management/admin-acl-management.component';\nimport { UpdateRolesComponent } from \"./admin/admin-acl-management/update-roles/update-roles.component\";\nimport { ManageTeamViewComponent } from './admin/manage-team/manage-team-view/manage-team-view.component';\nimport { AuthGuardService } from \"./services/auth-guard.service\";\nimport { NoAccessComponent } from \"./no-access/no-access.component\";\nimport { SessionTimeoutComponent } from \"./session-timeout/session-timeout.component\";\nimport { CalendarViewComponent } from \"./calendar-view/calendar-view.component\";\nimport { EventLargeComponent } from \"./calendar-view/event-large/event-large.component\";\nimport { SetDeadlineComponent } from \"./admin/match-management/set-deadline/set-deadline.component\";\n\nconst APP_ROUTES: Routes = [\n  { path: 'directory', component: DirectoryComponent},\n  { path:'', component: HomeComponent},\n  { path: 'login', component: LoginComponent },\n  { path: 'logout', component: LogoutComponent },\n  { path: 'login/:token', component: LoginComponent},\n  { path: 'profile/:id', component: ProfileEditComponent},\n  { path: 'teamProfile/:id', component: TeamProfileComponent},\n  { path: 'teamCreate', component: CreateTeamComponent},\n  { path: 'division/:division', component: DivisionComponent, runGuardsAndResolvers:'paramsChange' },\n  { path: 'email/invite/:id', component:OutreachEmailResponseComponent },\n  { path: 'blog', component:BlogListComponent },\n  { path: 'blog/:id', component:BlogViewComponent },\n  { path: '_admin/approveTeamQueue', component:ApproveMemberComponent, canActivate:[AuthGuardService], data:{role:'team'} },\n  { path: '_admin/deleteUser', component: DeleteMemberComponent, canActivate: [AuthGuardService], data: { role: 'user' } },\n  { path: '_admin/manageTeam', component: ManageSelectTeamComponent, canActivate: [AuthGuardService], data: { role: 'team' } },\n  { path: '_admin/manageTeam/:id', component: ManageTeamViewComponent, canActivate: [AuthGuardService], data: { role: 'team' } },\n  { path: '_admin/divisionMgmt', component: DivisionManagementComponent, canActivate: [AuthGuardService], data: { role: 'division' } },\n  { path: '_admin/matchMgmt', component: MatchManagementComponent, canActivate: [AuthGuardService], data: { role: 'match' } },\n  { path: '_admin/matchMgmt/match/:id', component: MatchEditComponent, canActivate: [AuthGuardService], data: { role: 'match' } },\n  { path: '_admin/userACLMgmt', component: AdminAclManagementComponent, canActivate: [AuthGuardService], data: { role: 'acl' } },\n  { path: '_admin/userACLMgmt/:id', component: UpdateRolesComponent, canActivate: [AuthGuardService], data: { role: 'acl' } },\n  { path: 'schedule/scheduleMatch/:id', component:MatchScheduleComponent},\n  { path: 'schedule/teamSchedule', component: TeamScheduleComponent },\n  { path: 'schedule/teamSchedule/:id', component:TeamScheduleComponent}, //accepts team name as url parameter\n  { path: 'reporting/:id', component:ReportingComponent}, //accepts team name as url parameter\n  { path: '_admin/dashboard', component: DashboardComponent, canActivate: [AuthGuardService]},\n  { path: '_casterDashboard', component: CasterDashboardComponent, canActivate: [AuthGuardService], data: { role: 'caster' }},\n  { path: 'noAccess/:id', component:NoAccessComponent},\n  { path: 'sessionTimeOut', component: SessionTimeoutComponent},\n  { path: 'calendar' , component:CalendarViewComponent },\n  { path: 'event/:id' , component:EventLargeComponent},\n  { path: '_admin/matchMgmt/weekDeadline', component: SetDeadlineComponent, canActivate: [AuthGuardService], data: { role: 'match' }}\n]\n\n@NgModule({\n  imports: [ RouterModule.forRoot(APP_ROUTES, {onSameUrlNavigation:'reload', scrollPositionRestoration:'enabled'})],\n  exports : [ RouterModule ]\n})\n\nexport class AppRoutingModule{}\n/*\n, children: [\n      { path: 'approveTeamQueue', component: ApproveMemberComponent },\n      { path: 'deleteUser', component: DeleteMemberComponent },\n      { path: 'manageTeam', component: DeleteTeamComponent },\n      { path: 'divisionMgmt', component: DivisionManagementComponent }\n    ]\n*/\n","module.exports = \"/* section {\\n    padding-top: 56px;\\n    height: 100%;\\n}\\n\\n:host {\\n    box-sizing: border-box;\\n    display: block;\\n    height: 100%;\\n} */\\n\\n.clearfooter {\\n    height: 1px;\\n    clear: both;\\n}\\n\\n#footer {\\n    position: relative;\\n}\\n\\n#content {\\n    padding-top: 56px;\\n    height: 100%;\\n}\\n\\n#container {\\n    min-height: 100%;\\n    margin-bottom: -115px;\\n    position: relative;\\n}\\n\\n.bg-white{\\n  box-shadow: 0px 0px 300px 150px rgb(69, 57, 82);\\n}\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div id=\\\"container\\\">\\n    <div id=\\\"header\\\">\\n        <app-nav></app-nav>\\n    </div>\\n    <div class=\\\"container bg-white pb-5\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <div id=\\\"content\\\">\\n                    <router-outlet></router-outlet>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"clearfooter\\\"></div>\\n    <div id=\\\"footer\\\">\\n        <app-footer></app-footer>\\n    </div>\\n</div>\\n\\n<!-- <app-home></app-home> -->\\n<!-- <section>\\n\\n</section>\\n<app-footer></app-footer> -->\"","import { Component } from '@angular/core';\nimport * as $ from 'jquery';\nimport { MatSnackBar } from '@angular/material';\nimport { NotificationService } from './services/notification.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(private notificationService:NotificationService, private snackBar:MatSnackBar){\n    this.notificationService.subj_notification.subscribe(\n      message=>{\n        this.snackBar.open(message, 'Dismiss', { duration: 2500});\n      }\n    )\n  }\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { DirectoryComponent } from './directory/directory.component';\nimport { AppRoutingModule } from './app.Routes';\nimport { NavComponent } from './nav/nav.component';\nimport { LoginComponent } from './login/login.component';\nimport { ResponseInterceptor } from './services/token-interceptor.service';\nimport { ProfileEditComponent } from './profile-edit/profile-edit.component';\nimport { InputFormMaterial } from './classes/aM-input-Import.class';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TeamProfileComponent } from './team-profile/team-profile.component';\nimport { DivisionComponent } from './division/division.component';\nimport { TeamDisplayComponent } from './team-display/team-display.component';\nimport { MembersDisplayComponent } from './members-display/members-display.component';\nimport { UserSearchComponent } from './user-search/user-search.component';\nimport { OutreachEmailResponseComponent } from './outreach-email-response/outreach-email-response.component';\nimport { BlogListComponent } from './blog-list/blog-list.component';\nimport { BlogViewComponent } from './blog-view/blog-view.component';\nimport { AppFooterComponent } from './app-footer/app-footer.component';\nimport { ImageUploadComponent } from './image-upload/image-upload.component';\nimport { NgxCroppieModule } from 'ngx-croppie';\nimport { LogoutComponent } from './logout/logout.component';\nimport { CreateTeamComponent } from './create-team/create-team.component';\nimport { ApproveMemberComponent } from './admin/approve-member/approve-member.component';\nimport { UserQuickViewComponent } from './admin/approve-member/user-quick-view/user-quick-view.component';\nimport { TeamQuickViewComponent } from './admin/approve-member/team-quick-view/team-quick-view.component';\nimport { ApproveMemberViewComponent } from './admin/approve-member/approve-member-view/approve-member-view.component';\nimport { DeleteMemberComponent } from './admin/delete-member/delete-member.component';\nimport { ManageSelectTeamComponent } from './admin/manage-team/manage-select-team.component';\nimport { TeamSearchComponent } from './team-search/team-search.component';\nimport { ChangeCaptainModalComponent } from './modal/change-captain-modal/change-captain-modal.component';\nimport { DivisionManagementComponent } from './admin/division-management/division-management.component';\nimport { AddTeamComponent } from './admin/division-management/add-team/add-team.component';\nimport { DivisionPropsComponent } from './admin/division-management/division-props/division-props.component';\nimport { RemoveTeamComponent } from './admin/division-management/remove-team/remove-team.component';\nimport { ScheduleViewComponent } from './schedule/schedule-view/schedule-view.component';\nimport { MatchScheduleComponent } from './schedule/match-schedule/match-schedule.component';\nimport { TeamScheduleComponent } from './schedule/team-schedule/team-schedule.component';\nimport { ReportingComponent } from './reporting/reporting.component';\nimport { ReportingDeckComponent } from './reporting/reporting-deck/reporting-deck.component';\nimport { ngfModule } from 'angular-file';\nimport { DashboardComponent } from './admin/dashboard/dashboard.component';\nimport { CasterDashboardComponent } from './caster-tools/caster-dashboard/caster-dashboard.component';\nimport { CasterInputsComponent } from './caster-tools/caster-dashboard/caster-inputs/caster-inputs.component';\nimport { MatchEditComponent } from './admin/match-management/match-edit/match-edit.component';\nimport { MatchManagementComponent } from './admin/match-management/match-management.component';\nimport { AdminAclManagementComponent } from './admin/admin-acl-management/admin-acl-management.component';\nimport { UpdateRolesComponent } from './admin/admin-acl-management/update-roles/update-roles.component';\nimport { StandingsViewComponent } from './standings-view/standings-view.component';\nimport { SnackbarComponent } from './snackbar/snackbar.component';\nimport { ManageTeamViewComponent } from './admin/manage-team/manage-team-view/manage-team-view.component';\nimport { DeleteConfrimModalComponent } from './modal/delete-confrim-modal/delete-confrim-modal.component';\nimport { NoAccessComponent } from './no-access/no-access.component';\nimport { SessionTimeoutComponent } from './session-timeout/session-timeout.component';\nimport { TimesAvailableComponent } from './times-available/times-available.component';\nimport { QuestionnaireComponent } from './questionnaire/questionnaire.component';\nimport { LogsViewerComponent } from './admin/logs-viewer/logs-viewer.component';\nimport { CalendarViewComponent } from './calendar-view/calendar-view.component';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { EventModalComponent } from './calendar-view/event-modal/event-modal.component';\nimport { EventLargeComponent } from './calendar-view/event-large/event-large.component';\nimport { SetDeadlineComponent } from './admin/match-management/set-deadline/set-deadline.component';\n \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    DirectoryComponent,\n    NavComponent,\n    LoginComponent,\n    ProfileEditComponent,\n    TeamProfileComponent,\n    DivisionComponent,\n    TeamDisplayComponent,\n    MembersDisplayComponent,\n    UserSearchComponent,\n    OutreachEmailResponseComponent,\n    BlogListComponent,\n    BlogViewComponent,\n    AppFooterComponent,\n    ImageUploadComponent,\n    LogoutComponent,\n    CreateTeamComponent,\n    ApproveMemberComponent,\n    UserQuickViewComponent,\n    TeamQuickViewComponent,\n    ApproveMemberViewComponent,\n    DeleteMemberComponent,\n    ManageSelectTeamComponent,\n    TeamSearchComponent,\n    ChangeCaptainModalComponent,\n    DivisionManagementComponent,\n    AddTeamComponent,\n    DivisionPropsComponent,\n    RemoveTeamComponent,\n    ScheduleViewComponent,\n    MatchScheduleComponent,\n    TeamScheduleComponent,\n    ReportingComponent,\n    ReportingDeckComponent,\n    DashboardComponent,\n    CasterDashboardComponent,\n    CasterInputsComponent,\n    MatchManagementComponent,\n    MatchEditComponent,\n    AdminAclManagementComponent,\n    UpdateRolesComponent,\n    StandingsViewComponent,\n    SnackbarComponent,\n    ManageTeamViewComponent,\n    DeleteConfrimModalComponent,\n    NoAccessComponent,\n    SessionTimeoutComponent,\n    TimesAvailableComponent,\n    QuestionnaireComponent,\n    LogsViewerComponent,\n    CalendarViewComponent,\n    EventModalComponent,\n    EventLargeComponent,\n    SetDeadlineComponent\n  ],\n  entryComponents:[\n    DeleteConfrimModalComponent,\n    ChangeCaptainModalComponent,\n    EventModalComponent\n  ],\n  imports: [\n    BrowserModule, \n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    InputFormMaterial,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxCroppieModule,\n    ngfModule,\n    CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory\n    })\n  ],\n  providers: [\n    {\n    provide:HTTP_INTERCEPTORS,\n    useClass:ResponseInterceptor,\n    multi:true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\n\n\nexport class AppModule { }\n","module.exports = \".blog-card {\\n    max-width: 300px;\\n}\\n\\n.m-t {\\n    margin-top: 10px;\\n}\\n\\n.nav-offset {\\n    padding-top: 60px;\\n}\\n\\n.finger {\\n  cursor: pointer;\\n}\\n\\n.author-image {\\n    background-size: cover;\\n}\\n\\n.example-container {\\n    display: flex;\\n    flex-direction: column;\\n    z-index: 1000;\\n}\\n\\n.example-container>* {\\n    width: 100%;\\n}\\n\\n.mat-card{\\n  background-color: #F26A2F;\\n  color: white;\\n}\\n\\n.mat-card-image{\\n  background-color: white;\\n}\\n\\n.anchor{\\n  color: #482262;\\n  text-decoration: underline;\\n  font-weight: bold;\\n  font-size: 16px;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row bg-white forceFull\\\">\\n        <div class=\\\"col\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\"></div>\\n                <div class=\\\"col-6\\\">\\n                    <mat-form-field class=\\\"example-container\\\">\\n                        <mat-select placeholder=\\\"Filter by Category\\\" (selectionChange)=\\\"updateDisplay($event)\\\" disableOptionCentering>\\n                            <mat-option [value]=\\\"'all'\\\">\\n                                All\\n                            </mat-option>\\n                            <mat-option *ngFor=\\\"let category of categories\\\" [value]=\\\"category.sys.id\\\">\\n                                {{category.fields.title}}\\n                            </mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col\\\"></div>\\n            </div>\\n\\n            <div class=\\\"row m-t\\\" *ngFor=\\\"let row of rows\\\">\\n                <div class=\\\"col\\\" *ngFor=\\\"let item of row\\\">\\n                    <mat-card class=\\\"blog-card finger\\\" (click)=\\\"goToBlogPage(item)\\\">\\n                        <mat-card-header>\\n                            <img mat-card-avatar src=\\\"{{item.fields.author.fields.image.fields.file.url}}\\\" class=\\\"author-image\\\">\\n                            <mat-card-title><span class=\\\"anchor\\\">{{item.fields.title}}</span></mat-card-title>\\n                            <mat-card-subtitle>{{item.fields.author.fields.name}}</mat-card-subtitle>\\n                        </mat-card-header>\\n                        <img mat-card-image src=\\\"{{item.fields.heroImage.fields.file.url}}?w=450&h=300&fit=scale\\\" alt=\\\"{{item.fields.heroImage.fields.description}}\\\">\\n                        <mat-card-content>\\n                            <div>{{item.fields.description}}</div>\\n                        </mat-card-content>\\n                    </mat-card>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ContentfulService } from '../services/contentful.service';\nimport { Entry } from 'contentful';\n\n@Component({\n  selector: 'app-blog-list',\n  templateUrl: './blog-list.component.html',\n  styleUrls: ['./blog-list.component.css']\n})\n\nexport class BlogListComponent implements OnInit {\n  perColumn: number = 3;\n  blogs: Entry<any>[]=[];\n  constructor( private router:Router, private contentfulService:ContentfulService) { }\n  rows: any []=[];\n  categories:any[]\n  ngOnInit() {\n    this.contentfulService.getCategories().then(res=>{\n      this.categories = res;\n    });\n\n    this.contentfulService.getBlogs().then(\n      res => { \n        this.createMyDisplay(res);\n      });\n  }\n\n  selection:string = '';\n\n  updateDisplay(val){\n    val = val.value\n    if(val == 'all'){\n      this.selection = val;\n      this.contentfulService.getBlogs().then(\n        res => {\n          this.createMyDisplay(res);\n        });\n    }else if (val !== this.selection){\n      this.selection = val;\n      this.contentfulService.getBlogs({ 'links_to_entry': this.selection }).then(\n      res => {\n        this.createMyDisplay(res);\n      });\n    }else{\n      //do nothing\n    }\n \n  }\n\n  createMyDisplay(dat) {\n    if (!this.perColumn) {\n      this.perColumn = 3;\n    }\n    this.rows = [];\n    if (dat != undefined && dat.length > 0) {\n      if (dat.length > this.perColumn) {\n        let temparr = [];\n        for (var i = 0; i < dat.length; i++) {\n          if (i>0 && i % this.perColumn == 0) {\n            this.rows.push(temparr);\n            temparr = [];\n          }\n          temparr.push(dat[i]);\n        }\n        if(temparr.length>0){\n          this.rows.push(temparr);\n        }\n      } else {\n        this.rows.push(dat);\n      }\n    } else {\n      this.rows = [];\n    }\n  }\n\n\n  goToBlogPage(blog){\n    this.contentfulService.cacheBlog(blog);\n    this.router.navigate(['/blog', blog.sys.id]);\n  }\n\n}\n","module.exports = \".breadcrumb{\\r\\n  background-color: #F26A2F;\\r\\n}\\r\\n\\r\\n.breadcrumb-item {\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.breadcrumb-item::before {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.breadcrumb-item > a {\\r\\n  color: #482262;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row bg-white forceFull\\\">\\n        <div class=\\\"col\\\">\\n            <!-- Page Heading/Breadcrumbs -->\\n            <h1 class=\\\"mt-4 mb-3\\\">{{displayBlog.fields.title}}\\n                <small>by<i>{{displayBlog.fields.author.fields.name}}</i></small>\\n            </h1>\\n\\n            <ol class=\\\"breadcrumb\\\">\\n                <li class=\\\"breadcrumb-item\\\">\\n                    <a [routerLink]=\\\"['/blog']\\\">Blog Home</a>\\n                </li>\\n                <li class=\\\"breadcrumb-item active\\\">{{displayBlog.fields.title}}</li>\\n            </ol>\\n\\n            <div class=\\\"row\\\">\\n                <!-- Post Content Column -->\\n                <div class=\\\"col\\\">\\n                    <!-- Preview Image -->\\n                    <div class=\\\"text-center\\\"><img class=\\\"img-fluid rounded\\\" src=\\\"{{displayBlog.fields.heroImage.fields.file.url}}?w=900&h=300\\\" alt=\\\"\\\"></div>\\n                    <hr>\\n                    <!-- Date/Time -->\\n                    <p class=\\\"date\\\">Posted on {{displayBlog.fields.publishDate | date}}</p>\\n                    <hr>\\n                    <!-- Post Content -->\\n                    <p class=\\\"lead\\\">{{displayBlog.fields.description}}</p>\\n                    <div [innerHTML]=\\\"md.convertMarkdown(displayBlog.fields.body)\\\"></div>\\n                    <hr>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<!-- Comments Form -->\\n<!-- comments disabled for now -->\\n<!-- <div class=\\\"card my-4\\\">\\n                <h5 class=\\\"card-header\\\">Leave a Comment:</h5>\\n                <div class=\\\"card-body\\\">\\n                    <form>\\n                        <div class=\\\"form-group\\\">\\n                            <textarea class=\\\"form-control\\\" rows=\\\"3\\\"></textarea>\\n                        </div>\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n                    </form>\\n                </div>\\n            </div> -->\\n\\n<!-- Single Comment -->\\n<!-- <div class=\\\"media mb-4\\\">\\n                <img class=\\\"d-flex mr-3 rounded-circle\\\" src=\\\"http://placehold.it/50x50\\\" alt=\\\"\\\">\\n                <div class=\\\"media-body\\\">\\n                    <h5 class=\\\"mt-0\\\">Commenter Name</h5>\\n                    Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.\\n                </div>\\n            </div> -->\\n\\n<!-- Comment with nested comments -->\\n<!-- <div class=\\\"media mb-4\\\">\\n                <img class=\\\"d-flex mr-3 rounded-circle\\\" src=\\\"http://placehold.it/50x50\\\" alt=\\\"\\\">\\n                <div class=\\\"media-body\\\">\\n                    <h5 class=\\\"mt-0\\\">Commenter Name</h5>\\n                    Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.\\n\\n                    <div class=\\\"media mt-4\\\">\\n                        <img class=\\\"d-flex mr-3 rounded-circle\\\" src=\\\"http://placehold.it/50x50\\\" alt=\\\"\\\">\\n                        <div class=\\\"media-body\\\">\\n                            <h5 class=\\\"mt-0\\\">Commenter Name</h5>\\n                            Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"media mt-4\\\">\\n                        <img class=\\\"d-flex mr-3 rounded-circle\\\" src=\\\"http://placehold.it/50x50\\\" alt=\\\"\\\">\\n                        <div class=\\\"media-body\\\">\\n                            <h5 class=\\\"mt-0\\\">Commenter Name</h5>\\n                            Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.\\n                        </div>\\n                    </div>\\n\\n                </div>\\n            </div> -->\\n<!-- Sidebar Widgets Column -->\\n<!-- <div class=\\\"col-md-4\\\"> -->\\n\\n<!-- Search Widget -->\\n<!-- <div class=\\\"card mb-4\\\">\\n                <h5 class=\\\"card-header\\\">Search</h5>\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"input-group\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search for...\\\">\\n                        <span class=\\\"input-group-btn\\\">\\n            <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\">Go!</button>\\n          </span>\\n                    </div>\\n                </div>\\n            </div> -->\\n\\n<!-- Categories Widget -->\\n<!-- <div class=\\\"card my-4\\\">\\n                <h5 class=\\\"card-header\\\">Categories</h5>\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-6\\\">\\n                            <ul class=\\\"list-unstyled mb-0\\\">\\n                                <li>\\n                                    <a href=\\\"#\\\">Web Design</a>\\n                                </li>\\n                                <li>\\n                                    <a href=\\\"#\\\">HTML</a>\\n                                </li>\\n                                <li>\\n                                    <a href=\\\"#\\\">Freebies</a>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                        <div class=\\\"col-lg-6\\\">\\n                            <ul class=\\\"list-unstyled mb-0\\\">\\n                                <li>\\n                                    <a href=\\\"#\\\">JavaScript</a>\\n                                </li>\\n                                <li>\\n                                    <a href=\\\"#\\\">CSS</a>\\n                                </li>\\n                                <li>\\n                                    <a href=\\\"#\\\">Tutorials</a>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div> -->\\n\\n<!-- Side Widget -->\\n<!-- <div class=\\\"card my-4\\\">\\n                <h5 class=\\\"card-header\\\">Side Widget</h5>\\n                <div class=\\\"card-body\\\">\\n                    You can put anything you want inside of these side widgets. They are easy to use, and feature the new Bootstrap 4 card containers!\\n                </div>\\n            </div> -->\\n\\n<!-- </div>\\n\\n    </div> -->\\n<!-- /.row -->\"","import { Component, OnInit } from '@angular/core';\nimport { ContentfulService } from '../services/contentful.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { MarkdownParserService } from '../services/markdown-parser.service';\nimport { Entry } from 'contentful';\nimport { merge } from 'lodash';\n\n@Component({\n  selector: 'app-blog-view',\n  templateUrl: './blog-view.component.html',\n  styleUrls: ['./blog-view.component.css']\n})\nexport class BlogViewComponent implements OnInit {\n\n  //component properties\n  recId: string  //local property for a receieved blog ID\n  displayBlog //local property to hold a fetched blog\n\n  constructor(private contentfulService:ContentfulService, private route: ActivatedRoute, public md:MarkdownParserService) {\n    //gets the ID from the url route\n    if(this.route.snapshot.params['id']){\n      this.recId = this.route.snapshot.params['id'];\n    }\n   }\n\n  ngOnInit() {\n    this.displayBlog = {\n      'fields':\n      {\n        'body':'',\n        'author': {\n          'fields': {\n            'name': ''\n          }\n        },\n        'title': '',\n        'heroImage': {\n          'fields': {\n            'file':{\n              'url':''\n            }\n          }\n        }\n      }\n    };\n    //gets provided blog post from received id\n    if(this.contentfulService.getCache()){\n      this.displayBlog = this.contentfulService.getCache();\n      this.contentfulService.getCache();\n    }else{\n      this.contentfulService.getBlog(this.recId).then(\n        res=>{\n          merge(this.displayBlog, res);\n          // this.displayBlog = res;\n        }\n      )\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row bg-white\\\">\\n        <div class=\\\"col\\\">\\n            <!-- \\n            <ng-template #modalContent let-close=\\\"close\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <h5 class=\\\"modal-title\\\">Event action occurred</h5>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"close()\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div>\\n                        Action:\\n                        <pre>{{ modalData?.action }}</pre>\\n                    </div>\\n                    <div>\\n                        Event:\\n                        <pre>{{ modalData?.event | json }}</pre>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"close()\\\">OK</button>\\n                </div>\\n            </ng-template> -->\\n            <div class=\\\"row mt-4\\\">\\n                <div class=\\\"col\\\">\\n                    Eventually we will have a table of colors for divs / games casted etc.\\n                </div>\\n            </div>\\n            <div class=\\\"row text-center mt-3\\\">\\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"btn-group\\\">\\n                        <div class=\\\"btn btn-primary\\\" mwlCalendarPreviousView [view]=\\\"view\\\" [(viewDate)]=\\\"viewDate\\\" (viewDateChange)=\\\"activeDayIsOpen = false\\\">\\n                            Previous\\n                        </div>\\n                        <div class=\\\"btn btn-outline-secondary\\\" mwlCalendarToday [(viewDate)]=\\\"viewDate\\\">\\n                            Today\\n                        </div>\\n                        <div class=\\\"btn btn-primary\\\" mwlCalendarNextView [view]=\\\"view\\\" [(viewDate)]=\\\"viewDate\\\" (viewDateChange)=\\\"activeDayIsOpen = false\\\">\\n                            Next\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>\\n                </div>\\n                <div class=\\\"col-md-4\\\">\\n                    <div class=\\\"btn-group\\\">\\n                        <div class=\\\"btn btn-primary\\\" (click)=\\\"view = CalendarView.Month\\\" [class.active]=\\\"view === CalendarView.Month\\\">\\n                            Month\\n                        </div>\\n                        <div class=\\\"btn btn-primary\\\" (click)=\\\"view = CalendarView.Week\\\" [class.active]=\\\"view === CalendarView.Week\\\">\\n                            Week\\n                        </div>\\n                        <div class=\\\"btn btn-primary\\\" (click)=\\\"view = CalendarView.Day\\\" [class.active]=\\\"view === CalendarView.Day\\\">\\n                            Day\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <br>\\n            <div [ngSwitch]=\\\"view\\\">\\n                <mwl-calendar-month-view *ngSwitchCase=\\\"CalendarView.Month\\\" [viewDate]=\\\"viewDate\\\" [events]=\\\"events\\\" [refresh]=\\\"refresh\\\" [activeDayIsOpen]=\\\"activeDayIsOpen\\\" (dayClicked)=\\\"dayClicked($event.day)\\\" (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\" (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n                </mwl-calendar-month-view>\\n                <mwl-calendar-week-view *ngSwitchCase=\\\"CalendarView.Week\\\" [viewDate]=\\\"viewDate\\\" [events]=\\\"events\\\" [refresh]=\\\"refresh\\\" (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\" (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n                </mwl-calendar-week-view>\\n                <mwl-calendar-day-view *ngSwitchCase=\\\"CalendarView.Day\\\" [viewDate]=\\\"viewDate\\\" [events]=\\\"events\\\" [refresh]=\\\"refresh\\\" (eventClicked)=\\\"handleEvent('Clicked', $event.event)\\\" (eventTimesChanged)=\\\"eventTimesChanged($event)\\\">\\n                </mwl-calendar-day-view>\\n            </div>\\n\\n            <br><br><br>\\n\\n            <!-- <h3>\\n                Events List\\n                <div class=\\\"clearfix\\\"></div>\\n            </h3> -->\\n\\n            <!-- <table class=\\\"table table-bordered\\\">\\n\\n                <thead>\\n                    <tr>\\n                        <th>Title</th>\\n                        <th>Primary color</th>\\n                        <th>Starts at</th>\\n                        <th>Ends at</th>\\n                    </tr>\\n                </thead>\\n\\n                <tbody>\\n                    <tr *ngFor=\\\"let event of events; let index = index\\\">\\n                        <td>\\n                            <input type=\\\"text\\\" disabled=\\\"true\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"event.title\\\" (keyup)=\\\"refresh.next()\\\">\\n                        </td>\\n                        <td>\\n                            <input type=\\\"color\\\" disabled=\\\"true\\\" [(ngModel)]=\\\"event.color.primary\\\">\\n                        </td>\\n                        <td>\\n                            <input class=\\\"form-control\\\" disabled=\\\"true\\\" type=\\\"text\\\" mwlFlatpickr [(ngModel)]=\\\"event.start\\\" dateFormat=\\\"Y-m-dTH:i\\\" altFormat=\\\"F j, Y H:i\\\">\\n                        </td>\\n                        <td>\\n                            <input class=\\\"form-control\\\" disabled=\\\"true\\\" type=\\\"text\\\" mwlFlatpickr [(ngModel)]=\\\"event.end\\\" dateFormat=\\\"Y-m-dTH:i\\\" altFormat=\\\"F j, Y H:i\\\">\\n                        </td>\\n                    </tr>\\n                </tbody>\\n\\n            </table> -->\\n\\n        </div>\\n    </div>\\n</div>\"","import { Component,ChangeDetectionStrategy,ViewChild,TemplateRef, OnInit} from '@angular/core';\nimport { startOfDay, endOfDay, subDays,addDays,endOfMonth, isSameDay, isSameMonth, addHours } from 'date-fns';\nimport { Subject } from 'rxjs';\nimport { CalendarEvent, CalendarEventAction, CalendarEventTimesChangedEvent, CalendarView } from 'angular-calendar';\nimport { ScheduleService } from '../services/schedule.service';\nimport { EventModalComponent } from './event-modal/event-modal.component';\nimport { MatDialog } from '@angular/material';\nimport { Router } from '@angular/router';\n\nconst colors: any = {\n  red: {\n    primary: '#ad2121',\n    secondary: '#FAE3E3'\n  },\n  blue: {\n    primary: '#1e90ff',\n    secondary: '#D1E8FF'\n  },\n  yellow: {\n    primary: '#e3bc08',\n    secondary: '#FDF1BA'\n  }\n};\n\n\n@Component({\n  selector: 'app-calendar-view',\n  templateUrl: './calendar-view.component.html',\n  styleUrls: ['./calendar-view.component.css']\n})\nexport class CalendarViewComponent implements OnInit {\n\n\n\n  constructor(private matches: ScheduleService, public dialog: MatDialog, private router:Router) { }\n\n  _matches = [];\n  ngOnInit(){\n    this.matches.getAllMatchesWithStartTime().subscribe(\n      res=>{\n        let matches = res;\n        this._matches = res;\n        matches.forEach(match => {\n          let event: CalendarEvent = {\n            'start': new Date(parseInt(match.scheduledTime.startTime)),\n            'end': new Date(parseInt(match.scheduledTime.endTime)),\n            'title': match.home.teamName + ' vs ' + match.away.teamName,\n            'meta':match.matchId\n          };\n\n          if(match.casterName!=null||match.casterName!=undefined){\n            event['title']+=' Casted! '\n          }\n          event['color']=colors.red;\n          this.events.push(event);\n        });\n        this.refresh.next();\n      },\n      err=>{\n        console.log(err);\n      }\n    )\n    //todo: pull in matches\n  }\n\n  @ViewChild('modalContent')\n  modalContent: TemplateRef<any>;\n\n  view: CalendarView = CalendarView.Month;\n\n  CalendarView = CalendarView;\n\n  viewDate: Date = new Date();\n\n  modalData: {\n    action: string;\n    event: CalendarEvent;\n  };\n\n  actions: CalendarEventAction[] = [\n    {\n      label: '<i class=\"fa fa-fw fa-pencil\"></i>',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.handleEvent('Edited', event);\n      }\n    },\n    {\n      label: '<i class=\"fa fa-fw fa-times\"></i>',\n      onClick: ({ event }: { event: CalendarEvent }): void => {\n        this.events = this.events.filter(iEvent => iEvent !== event);\n        this.handleEvent('Deleted', event);\n      }\n    }\n  ];\n\n  refresh: Subject<any> = new Subject();\n\n  events: CalendarEvent[] = [];\n\n  activeDayIsOpen: boolean = true;\n\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n    if (isSameMonth(date, this.viewDate)) {\n      this.viewDate = date;\n      if (\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\n        events.length === 0\n      ) {\n        this.activeDayIsOpen = false;\n      } else {\n        this.activeDayIsOpen = true;\n      }\n    }\n  }\n\n  openDialog(match): void {\n\n    const dialogRef = this.dialog.open(EventModalComponent, {\n      width:'700px',\n      data: match\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n\n  eventTimesChanged({\n    event,\n    newStart,\n    newEnd\n  }: CalendarEventTimesChangedEvent): void {\n    event.start = newStart;\n    event.end = newEnd;\n    this.handleEvent('Dropped or resized', event);\n    this.refresh.next();\n  }\n\n  handleEvent(action: string, event: CalendarEvent): void {\n    // console.log('hi, ', event);\n    // let passMatch;\n    // this._matches.forEach(match=>{\n    //   console.log('event.meta ', event.meta, ' match.matchId ', match.matchId)\n    //   if(event.meta == match.matchId){\n    //     passMatch = match;\n    //   }\n    // });\n    // this.openDialog(passMatch);\n\n    this.router.navigate(['event/',event.meta]);\n\n  }\n\n  // addEvent(): void {\n  //   this.events.push({\n  //     title: 'New event',\n  //     start: startOfDay(new Date()),\n  //     end: endOfDay(new Date()),\n  //     color: colors.red,\n  //     draggable: true,\n  //     resizable: {\n  //       beforeStart: true,\n  //       afterEnd: true\n  //     }\n  //   });\n  //   this.refresh.next();\n  // }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col text-center\\\">\\n                    <h3>Match Details</h3>\\n                </div>\\n            </div>\\n            <div class=\\\"row mt-3\\\" *ngIf=\\\"match\\\">\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-5\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col\\\">\\n                                    <img class=\\\"img-fluid\\\" src=\\\"{{team.imageFQDN(match.home.logo)}}\\\" width=\\\"150\\\" alt=\\\"Team Logo\\\">\\n                                </div>\\n                                <div class=\\\"col vertical-middle\\\">\\n                                    <div *ngIf=\\\"match.home.teamName\\\">{{match.home.teamName}}</div>\\n\\n                                </div>\\n                                <div class=\\\"col-2 vertical-middle\\\">\\n                                    <span> {{match.home.wins}} - {{match.home.losses}} </span>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                        <div class=\\\"col-2 vertical-middle text-center\\\">\\n                            - VS -\\n                        </div>\\n                        <div class=\\\"col-5\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-2 vertical-middle\\\">\\n                                    <span> {{match.away.wins}} - {{match.away.losses}} </span>\\n                                </div>\\n                                <div class=\\\"col vertical-middle\\\">\\n                                    <div *ngIf=\\\"match.away.teamName; else bye\\\">{{match.away.teamName}}</div>\\n                                </div>\\n                                <div class=\\\"col\\\">\\n                                    <img class=\\\"img-fluid\\\" src=\\\"{{team.imageFQDN(match.away.logo)}}\\\" width=\\\"150\\\" alt=\\\"Team Logo\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col\\\">\\n\\n                        </div>\\n                        <div class=\\\"col-7 text-center\\\">\\n                            <span *ngIf=\\\"match.scheduledTime else tbd\\\">Scheduled Time: {{match.friendlyDate}} - {{match.friendlyTime}} {{match.suffix}}</span>\\n                            <ng-template #tbd>\\n                                <button class=\\\"btn btn-info\\\" (click)=\\\"scheduleMatch(match.matchId)\\\"> Schedule this match! </button>\\n                            </ng-template>\\n                        </div>\\n                        <div class=\\\"col\\\">\\n\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\" *ngIf=\\\"match.casterName && match.casterUrl\\\">\\n                        <div class=\\\"col\\\"></div>\\n                        <div class=\\\"col-7 text-center\\\">\\n                            <span> Casted by:</span> {{match.casterName}} : <a href=\\\"{{util.prePendHttp(match.casterUrl)}}\\\" target=\\\"_blank\\\">{{match.casterUrl}}</a>\\n                        </div>\\n                        <div class=\\\"col\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ScheduleService } from 'src/app/services/schedule.service';\nimport { TeamService } from 'src/app/services/team.service';\nimport { UtilitiesService } from 'src/app/services/utilities.service';\nimport { StandingsService } from 'src/app/services/standings.service';\n\n@Component({\n  selector: 'app-event-large',\n  templateUrl: './event-large.component.html',\n  styleUrls: ['./event-large.component.css']\n})\nexport class EventLargeComponent implements OnInit {\n\n  id:string;\n  constructor(private router: ActivatedRoute, private scheduleService:ScheduleService, public team:TeamService, public util:UtilitiesService, private standingsService:StandingsService) {\n    if(this.router.snapshot.params['id']){\n      this.id = this.router.snapshot.params['id'];\n    }\n  }\n\n  match \n  ngOnInit() {\n    this.scheduleService.getMatchInfo(6, this.id).subscribe(\n      res=>{\n        this.match = res;\n        let match = res;\n        let div = this.match.divisionConcat\n        this.standingsService.getStandings(div).subscribe(\n          res => {\n            let standings = res;\n              standings.forEach(standing => {\n                if (match.home.teamName == standing.teamName) {\n                  match.home['losses'] = standing.losses;\n                  match.home['wins'] = standing.wins;\n                }\n                if (match.away.teamName == standing.teamName) {\n                  match.away['losses'] = standing.losses;\n                  match.away['wins'] = standing.wins;\n                }\n              });\n              if (match.scheduledTime) {\n                match['friendlyDate'] = this.util.getDateFromMS(match.scheduledTime.startTime);\n                match['friendlyTime'] = this.util.getTimeFromMS(match.scheduledTime.startTime);\n                match['suffix'] = this.util.getSuffixFromMS(match.scheduledTime.startTime);\n              }\n            \n          }, err => {\n            console.log(err);\n          });\n      },\n      err=>{\n        console.log(err);\n      }\n    )\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                Match Details\\n            </div>\\n            <div class=\\\"col\\\">\\n\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <!-- <div class=\\\"col\\\">{{data.home.teamName}}</div>\\n            <div class=\\\"col\\\">{{data.away.teamName}}</div> -->\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                Schedule\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                Caster Info\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<mat-dialog-actions align=\\\"end\\\">\\n    <button mat-button mat-dialog-close>Close</button>\\n</mat-dialog-actions>\"","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-event-modal',\n  templateUrl: './event-modal.component.html',\n  styleUrls: ['./event-modal.component.css']\n})\nexport class EventModalComponent {\n\n\n  constructor(\n    public dialogRef: MatDialogRef<EventModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: {}) {\n      console.log(data);\n     }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        <h2>Caster Dashboard</h2>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        <h5>Filter Matches By:</h5>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        <mat-form-field class=\\\"mat-FullWidth\\\">\\n                            <mat-select placeholder=\\\"Division:\\\" [(ngModel)]=\\\"selectedDivision\\\" (ngModelChange)=\\\"doFilterMatches(selectedDivision, selectedRound, filterTeam)\\\" disableOptionCentering>\\n                                <mat-option [value]=\\\"null\\\"> </mat-option>\\n                                <mat-option *ngFor=\\\"let division of divisions; let i = index\\\" [value]=\\\"division.divisionConcat\\\">{{division.displayName}}</mat-option>\\n                            </mat-select>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col\\\">\\n                        <mat-form-field class=\\\"mat-FullWidth\\\">\\n                            <mat-select placeholder=\\\"Round:\\\" [(ngModel)]=\\\"selectedRound\\\" (ngModelChange)=\\\"doFilterMatches(selectedDivision, selectedRound, filterTeam)\\\" disableOptionCentering>\\n                                <mat-option [value]=\\\"null\\\"> </mat-option>\\n                                <mat-option *ngFor=\\\"let round of rounds\\\" [value]=\\\"round\\\">{{round}}</mat-option>\\n                            </mat-select>\\n                        </mat-form-field>\\n                    </div>\\n                    <div class=\\\"col\\\">\\n                        <mat-form-field class=\\\"mat-FullWidth\\\">\\n                            <input matInput placeholder=\\\"Team Name\\\" [(ngModel)]=\\\"filterTeam\\\" (ngModelChange)=\\\"doFilterMatches(selectedDivision, selectedRound, filterTeam)\\\">\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        <mat-checkbox [(ngModel)]=\\\"scheduledOnly\\\" (ngModelChange)=\\\"filterScheduled(scheduledOnly)\\\">Only Scheduled Matches.</mat-checkbox>\\n                    </div>\\n                </div>\\n                <mat-paginator [length]=\\\"length\\\" [pageIndex]=\\\"pageIndex\\\" [pageSize]=\\\"pageSize\\\" (page)=\\\"pageEventHandler($event)\\\">\\n\\n                </mat-paginator>\\n                <div *ngIf=\\\"displayArray.length==0\\\" style=\\\"height: 650px\\\"></div>\\n                <div class=\\\"row mb-3 p-4\\\" *ngFor=\\\"let match of displayArray; let ind = index\\\" [ngClass]=\\\"{'bg-light':ind%2==0}\\\">\\n                    <div class=\\\"col\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col\\\">\\n                                {{match.divisionDisplayName}}\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col\\\">\\n                                {{match.home.teamName}}\\n                            </div>\\n                            <div class=\\\"col\\\">\\n                                -VS-\\n                            </div>\\n                            <div class=\\\"col\\\">\\n                                {{match.away.teamName}}\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row mt-2\\\">\\n                            <div class=\\\"col\\\">\\n                                Scheduled Time: <span *ngIf=\\\"match.scheduledTime !=undefined && match.scheduledTime !=null else notScheduled\\\">{{displayTime(match.scheduledTime.startTime)}}</span>\\n                                <ng-template #notScheduled>\\n                                    <span>Not Yet Scheduled</span>\\n                                </ng-template>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row mt-2\\\">\\n                            <div class=\\\"col\\\">\\n                                <div *ngIf=\\\"match.casterName != undefined && match.casterName != null else addCasterButton\\\">\\n                                    Caster: {{match.casterName}} Url: {{match.casterUrl}}\\n                                </div>\\n                                <ng-template #addCasterButton>\\n                                    <app-caster-inputs [matchId]=\\\"match.matchId\\\"></app-caster-inputs>\\n                                </ng-template>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { ScheduleService } from 'src/app/services/schedule.service';\nimport { AdminService } from 'src/app/services/admin.service';\n\nimport { PageEvent, MatPaginator } from '@angular/material';\n\n\n@Component({\n  selector: 'app-caster-dashboard',\n  templateUrl: './caster-dashboard.component.html',\n  styleUrls: ['./caster-dashboard.component.css']\n})\nexport class CasterDashboardComponent implements OnInit, AfterViewInit {\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor( private scheduleService:ScheduleService, private adminService : AdminService) {\n\n   }\n\n  hideForm = true;\n  selectedRound:any\n  selectedDivision:any\n  originalMatches:any\n  filterMatches:any\n  rounds=[];\n  divisions = []\n  filterTeam:string='';\n  scheduledOnly:boolean=false;\n\n  \n\n  displayArray = [];\n  length: number;\n  pageSize: number = 10;\n  filteredArray: any = [];\n  pageIndex:number;\n\n\n  ngAfterViewInit(){\n    this.paginator.pageIndex = 0;\n  }\n\n  pageEventHandler(pageEvent: PageEvent) {\n    console.log(pageEvent);\n    let i = pageEvent.pageIndex * this.pageSize;\n    let endSlice = i + this.pageSize\n    if (endSlice > this.filterMatches.length) {\n      endSlice = this.filterMatches.length;\n    }\n    console.log('index start ', i, ' endSlice ', endSlice);\n    this.displayArray = [];\n    this.displayArray = this.filterMatches.slice(i, endSlice)\n\n  } \n\n  ngOnInit() {\n    this.adminService.getDivisionList().subscribe((res) => {\n      this.divisions = res;\n      this.scheduleService.getAllMatches().subscribe(\n        (sched) => {\n          this.originalMatches = sched;\n          this.length = sched.length;\n          this.filterMatches = sched;\n          this.filterMatches.forEach(match => {\n            match.submitCaster = {\n              \"name\":'',\n              \"URL\":''\n            }\n            if (this.rounds.indexOf(match.round) < 0) {\n              this.rounds.push(match.round);\n            }\n          });\n          this.rounds = this.rounds.sort();\n          this.displayArray = this.filterMatches.slice(0, 10);\n        }\n      )\n    }, (err) => {\n      console.log(err);\n    });\n  }\n\n  /*\n div, round, team\n div, round, \n div, team,\n round, team,\n div, \n round, \n team\n */\n  //filters the matches based on selected criteria\n  doFilterMatches(div, round, team) {\n    // console.log('div ', div, ' round ', round, ' team ', team);\n    this.filterMatches = this.originalMatches.filter(match => {\n      let home, away;\n      if (!match.away.teamName) {\n        away = '';\n      } else {\n        away = match.away.teamName.toLowerCase();\n      }\n      if (!match.home.teamName) {\n        home = '';\n      } else {\n        home = match.home.teamName.toLowerCase();\n      }\n      if (team) {\n        team = team.toLowerCase();\n      }\n\n      let pass = false;\n      if (div && round && team) {\n        if (div == match.divisionConcat && round == match.round &&\n          (away.indexOf(team) > -1 || home.indexOf(team) > -1)) {\n          pass = true;\n        }\n      } else if (div && round) {\n        if (div == match.divisionConcat && round == match.round) {\n          pass = true;\n        }\n      } else if (div && team) {\n        if (div == match.divisionConcat && (away.indexOf(team) > -1 || home.indexOf(team) > -1)) {\n          pass = true;\n        }\n      } else if (round && team) {\n        if (round == match.round && (away.indexOf(team) > -1 || home.indexOf(team) > -1)) {\n          pass = true;\n        }\n      } else if (div) {\n        if (div == match.divisionConcat) {\n          pass = true;\n        }\n      } else if (round) {\n        if (round == match.round) {\n          pass = true;\n        }\n      } else if (team) {\n        if (away.indexOf(team) > -1 || home.indexOf(team) > -1) {\n          pass = true;\n        }\n      } else {\n        pass = true\n      }\n      return pass;\n    }\n    );\n    this.length=this.filterMatches.length;\n    this.displayArray = this.filterMatches.slice(0,this.pageSize>this.length? this.length:this.pageSize);\n    this.paginator.firstPage();\n  }\n\n  filterScheduled(filter){\n    if(filter){\n      this.filterMatches = this.originalMatches.filter((match) => {\n        let pass = false;\n        if (match.scheduledTime) {\n          if (match.scheduledTime.startTime != undefined || match.scheduledTime.startTime != null) {\n            pass = true;\n          }\n        }\n        return pass;\n      });\n      this.length = this.filterMatches.length;\n      this.displayArray = this.filterMatches.slice(0, this.pageSize > this.length ? this.length : this.pageSize);\n      this.paginator.pageIndex = 0;\n    }else{\n      this.filterMatches = this.originalMatches;\n      this.length = this.filterMatches.length;\n      this.displayArray = this.filterMatches.slice(0, this.pageSize > this.length ? this.length : this.pageSize);\n      this.paginator.pageIndex = 0;\n    }\n\n  }\n\n  displayTime(ms) {\n    let d = new Date(parseInt(ms));\n    let day = d.getDate();\n    let year = d.getFullYear();\n    let month = d.getMonth();\n    month = month + 1;\n    let hours = d.getHours();\n    let suffix = \"AM\";\n    if (hours > 12) {\n      hours = hours - 12;\n      suffix = \"PM\";\n    }\n\n    let min = d.getMinutes();\n    let minStr;\n    if (min == 0) {\n      minStr = '00';\n    } else {\n      minStr = min.toString();\n    }\n    let dateTime = month + '/' + day + '/' + year + ' @ ' + hours + ':' + minStr + \" \" + suffix;\n    return dateTime;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col text-center\\\">\\n        <button class=\\\"btn btn-info\\\" (click)=\\\"hideForm = !hideForm\\\"> Add Caster </button>\\n    </div>\\n</div>\\n<div [hidden]=\\\"hideForm\\\" class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <mat-form-field class=\\\"mat-FullWidth\\\">\\n            <input matInput [formControl]=\\\"casterNameControl\\\" placeholder=\\\"Caster Name\\\" [(ngModel)]=\\\"name\\\">\\n            <mat-error *ngIf=\\\"casterNameControl.hasError('required')\\\">\\n                Caster Name is required\\n            </mat-error>\\n        </mat-form-field>\\n    </div>\\n    <div class=\\\"col\\\">\\n        <mat-form-field class=\\\"mat-FullWidth\\\">\\n            <input matInput [formControl]=\\\"casterUrlControl\\\" placeholder=\\\"Caster URL\\\" [(ngModel)]=\\\"URL\\\">\\n            <mat-error *ngIf=\\\"casterUrlControl.hasError('required')\\\">\\n                Caster URL is required\\n            </mat-error>\\n        </mat-form-field>\\n    </div>\\n    <div class=\\\"col\\\">\\n        <button class=\\\"btn btn-success\\\" [disabled]=\\\"casterInputForm.invalid\\\" (click)=\\\"saveCasterInfo(name, URL)\\\">Submit</button>\\n    </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { ScheduleService } from 'src/app/services/schedule.service';\n\n@Component({\n  selector: 'app-caster-inputs',\n  templateUrl: './caster-inputs.component.html',\n  styleUrls: ['./caster-inputs.component.css']\n})\nexport class CasterInputsComponent implements OnInit {\n\n  constructor(private scheduleService:ScheduleService) { }\n\n  hideForm = true;\n  _id:string;\n\n  name:string;\n  URL: string;\n  \n  @Input() set matchId(id) {\n    if (id != null && id != undefined) {\n      this._id = id;\n    }\n  }\n\n  casterNameControl = new FormControl('', [\n    Validators.required\n  ]);\n  casterUrlControl = new FormControl('', [\n    Validators.required\n  ]);\n  casterInputForm = new FormGroup({\n    name: this.casterNameControl,\n    url: this.casterUrlControl,\n\n  })\n  \n  ngOnInit() {\n  }\n\n  saveCasterInfo(casterName, casterUrl) {\n    let matchId;\n\n    if (this._id != null && this._id != undefined){\n      matchId = this._id;\n      if (casterName != null && casterName != undefined) {\n        if (casterUrl != null && casterUrl != undefined) {\n          this.scheduleService.addCaster(matchId, casterName, casterUrl).subscribe(\n            (res)=>{\n              \n            },\n            (err)=>{\n\n            }\n          )\n        }else{\n          alert('Null Caster Url');\n        }\n      }else{\n        alert('Null Caster Name');\n      }\n    }else{\n      alert('Null MatchId');\n    }\n    \n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MatInputModule } from '@angular/material';\nimport { MatFormFieldModule } from '@angular/material';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material';\nimport { MatSliderModule } from '@angular/material';\nimport { MatDatepickerModule } from '@angular/material';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatRadioModule } from '@angular/material';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatNativeDateModule } from '@angular/material';\nimport { MatSnackBarModule } from '@angular/material';\nimport { MatPaginatorModule } from '@angular/material';\n\n\n\n@NgModule({\n  imports: [MatInputModule, MatFormFieldModule, MatCheckboxModule, MatSelectModule, \n    MatSliderModule, MatDatepickerModule, MatGridListModule, MatSlideToggleModule, \n    MatButtonModule, MatCardModule, MatExpansionModule, MatAutocompleteModule, MatDialogModule,\n    MatRadioModule, MatTabsModule, MatNativeDateModule, MatSnackBarModule, MatPaginatorModule],\n  exports: [MatInputModule, MatFormFieldModule, MatCheckboxModule, MatSelectModule, \n    MatSliderModule, MatDatepickerModule, MatGridListModule, MatSlideToggleModule, \n    MatButtonModule, MatCardModule, MatExpansionModule, MatAutocompleteModule, MatDialogModule,\n    MatRadioModule, MatTabsModule, MatNativeDateModule, MatSnackBarModule, MatPaginatorModule]\n})\n\nexport class InputFormMaterial{\n  \n}\n","export class Profile {  //addition of stats for future plans\n  _id:string;\n  displayName: string;\n  teamId: string;\n  teamName: string;\n  isCaptain:Boolean;\n  hlRankMetal: string;\n  hlRankDivision: number;\n  //stats:object // not implemented\n  //messageCenter: Array // not implemented\n  lookingForGroup: Boolean;\n  availability: schedule; //form input added\n  competitiveLevel: number; //form input added\n  descriptionOfPlay: string; //form input added\n  role: roles; //\n  timeZone: string; //form input added\n  hotsLogsURL: string; //form input added\n  averageMmr: number;  //user average mmr\n  toonId:string;\n  discordTag:string;\n  __v: string;//useless\n\n\n  constructor (id: string, displayName: string, teamId:string, teamName:string, isCaptain:boolean,\n    hlRankMetal:string, hlRankDivision:number, lookingForGroup: Boolean, availability:schedule, \n    competitiveLevel:number, descriptionOfPlay:string, role:roles, timeZone:string, hotsLogsURL:string,\n    averageMmr: number, toonId: string, discordTag:string){\n  if (id != null && id != undefined && id.length > 0) {\n    this._id = id;\n  } else {\n    this._id = \"\";\n  }\n  if (displayName != null && displayName != undefined && displayName.length > 0) {\n    this.displayName = displayName;\n  } else {\n    this.displayName = \"\";\n  }\n    if (teamId != null && teamId != undefined && teamId.length > 0) {\n      this.teamId = teamId;\n    } else {\n      this.teamId = \"\";\n    }\n    if (teamName != null && teamName != undefined && teamName.length > 0) {\n      this.teamName = teamName;\n    } else {\n      this.teamName = \"\";\n    }\n    if (isCaptain != null && isCaptain != undefined) {\n      this.isCaptain = isCaptain;\n    } else {\n      this.isCaptain = null;\n    }\n    if (hlRankMetal != null && hlRankMetal != undefined && hlRankMetal.length > 0) {\n      this.hlRankMetal = hlRankMetal;\n    } else {\n      this.hlRankMetal = \"\";\n    }\n    if (hlRankDivision != null && hlRankDivision != undefined ) {\n      this.hlRankDivision = hlRankDivision;\n    } else {\n      this.hlRankDivision = null;\n    }\n  if (lookingForGroup != null && lookingForGroup != undefined) {\n    this.lookingForGroup = lookingForGroup;\n  } else {\n    this.lookingForGroup = false;\n  }\n  if(availability != null && availability != undefined){\n    this.availability = availability;\n  }else{\n    this.availability = {\n      \"monday\": {\n        \"available\": false,\n        \"startTime\": null,\n        \"endTime\": null\n      },\n      \"tuesday\": {\n        \"available\": false,\n        \"startTime\": null,\n        \"endTime\": null\n      },\n      \"wednesday\": {\n        \"available\": false,\n        \"startTime\": null,\n        \"endTime\": null\n      }\n      , \"thursday\": {\n        \"available\": false,\n        \"startTime\": null,\n        \"endTime\": null\n      }\n      , \"friday\": {\n        \"available\": false,\n        \"startTime\": null,\n        \"endTime\": null\n      }\n      , \"saturday\": {\n        \"available\": false,\n        \"startTime\": null,\n        \"endTime\": null\n      }\n      , \"sunday\": {\n        \"available\": false,\n        \"startTime\": null,\n        \"endTime\": null\n      }\n    };\n  }\n    if (competitiveLevel != null && competitiveLevel != undefined ) {\n      this.competitiveLevel = competitiveLevel;\n    } else {\n      this.competitiveLevel = null;\n    }\n    if (descriptionOfPlay != null && descriptionOfPlay != undefined) {\n      this.descriptionOfPlay = descriptionOfPlay;\n    } else {\n      this.descriptionOfPlay = null;\n    }\n    if (role != null && role != undefined) {\n      this.role = role;\n    } else {\n      this.role = { \"tank\": false, \"meleeassassin\": false, \"rangedassassin\": false, \"support\": false, \"offlane\": false, \"flex\": false };\n    }\n    if (timeZone != null && timeZone != undefined) {\n      this.timeZone = timeZone;\n    } else {\n      this.timeZone = '';\n    }\n    if (hotsLogsURL != null && hotsLogsURL != undefined) {\n      this.hotsLogsURL = hotsLogsURL;\n    } else {\n      this.hotsLogsURL = null;\n    }\n    if (averageMmr != null && averageMmr != undefined) {\n      this.averageMmr = averageMmr;\n    } else {\n      this.averageMmr = null;\n    }\n    if (toonId != null && toonId != undefined) {\n      this.toonId = toonId;\n    } else {\n      this.toonId = null;\n    }\n    if (discordTag != null && discordTag != undefined) {\n      this.discordTag = toonId;\n    } else {\n      this.discordTag = null;\n    }\n}\n}\n\n\nexport interface schedule {\n  monday: atset,\n  tuesday: atset,\n  wednesday: atset,\n  thursday: atset,\n  friday: atset,\n  saturday: atset,\n  sunday: atset\n}\n\nexport interface atset {\n  available:boolean,\n  startTime:number,\n  endTime: number\n}\n\nexport interface roles {\n  tank: boolean,\n  'meleeassassin': boolean,\n  'rangedassassin': boolean,\n  offlane: boolean,\n  support: boolean,\n  flex: boolean\n}\n","export class Team {\n  _id: string;\n  logo: string;\n  teamName: string; //added to display form \n  teamName_lower: string ;\n  divisionDisplayName: string;\n  divisionConcat: string;\n  //\"stats\": string; //later addition of team statistics\n  lookingForMore: Boolean; //added to display form\n  availability: schedule;\n  competitiveLevel: number;\n  rolesNeeded: roles;\n  descriptionOfTeam: string;\n  timeZone: string;\n  captain: string;\n  teamMMRAvg: number; //added to display\n  teamMembers: [string]; //added to display\n  pendingMembers: [string];\n  questionnaire:object;\n  \n\n\n  constructor(id: string, logo:string, teamName: string, lookingForMore: Boolean, availability:schedule,\n    competitiveLevel: number, rolesNeeded: roles, descriptionOfTeam: string, timeZone: string,\n    teamMembers: [string], pendingMembers: [string], captain: string, teamMMRAvg:number,\n    divisionDisplayName: string, divisionConcat: string, questionnaire:object) {\n    if (id != null && id != undefined && id.length > 0) {\n      this._id = id;\n    } else {\n      this._id = \"\";\n    }\n    if (teamName != null && teamName != undefined && teamName.length > 0) {\n      this.teamName = teamName;\n      this.teamName_lower = teamName.toLowerCase()\n    } else {\n      this.teamName, this.teamName_lower = \"\";\n    }\n    if (lookingForMore != null && lookingForMore != undefined) {\n      this.lookingForMore = lookingForMore;\n    } else {\n      this.lookingForMore = false;\n    }\n    if(availability != null && availability != undefined){\n      this.availability = availability;\n    }else{\n      this.availability = {\n        \"monday\": {\n          \"available\": false,\n          \"startTime\": null,\n          \"endTime\": null\n        },\n        \"tuesday\": {\n          \"available\": false,\n          \"startTime\": null,\n          \"endTime\": null\n        },\n        \"wednesday\": {\n          \"available\": false,\n          \"startTime\": null,\n          \"endTime\": null\n        }\n        , \"thursday\": {\n          \"available\": false,\n          \"startTime\": null,\n          \"endTime\": null\n        }\n        , \"friday\": {\n          \"available\": false,\n          \"startTime\": null,\n          \"endTime\": null\n        }\n        , \"saturday\": {\n          \"available\": false,\n          \"startTime\": null,\n          \"endTime\": null\n        }\n        , \"sunday\": {\n          \"available\": false,\n          \"startTime\": null,\n          \"endTime\": null\n        }\n      }\n    }\n    if (competitiveLevel != null && competitiveLevel != undefined){\n      this.competitiveLevel = competitiveLevel;\n    }else{\n      this.competitiveLevel = null;\n    }\n    if(descriptionOfTeam!=null&&descriptionOfTeam!=undefined){\n      this.descriptionOfTeam = descriptionOfTeam;\n    }else{\n      this.descriptionOfTeam = null;\n    }\n    if(rolesNeeded!=null&&rolesNeeded!=undefined){\n      this.rolesNeeded = rolesNeeded;\n    }else{\n      this.rolesNeeded = { \"tank\": false, \"meleeassassin\": false, \"rangedassassin\": false, \"support\": false, \"offlane\": false, \"flex\": false };\n    }\n    if(timeZone!=null&&timeZone!=undefined){\n      this.timeZone=timeZone;\n    }else{\n      this.timeZone = \"\";\n    }\n    if (teamMembers != null && teamMembers != undefined) {\n      this.teamMembers = teamMembers;\n    } else {\n      this.teamMembers = null;\n    }\n    if(pendingMembers != null && pendingMembers != undefined){\n      this.pendingMembers = pendingMembers\n    }else{\n      this.pendingMembers = null;\n    }\n      if(captain != null && captain != undefined){\n        this.captain = captain;\n      }else{\n        this.captain = null;\n      }\n      if(teamMMRAvg != null && teamMMRAvg != undefined){\n        this.teamMMRAvg = teamMMRAvg\n      }else{\n        this.teamMMRAvg = 0;\n      }\n      if(divisionDisplayName!=null && divisionDisplayName !=undefined){\n        this.divisionDisplayName = divisionDisplayName;\n      }else{\n        this.divisionDisplayName = null;\n      }\n    if (divisionConcat != null && divisionConcat != undefined) {\n      this.divisionConcat = divisionConcat;\n    } else {\n      this.divisionConcat = null;\n    }\n    if (questionnaire != null && questionnaire != undefined) {\n      this.questionnaire = questionnaire;\n    } else {\n      this.questionnaire = {\n        pickedMaps:[]\n      };\n    }\n  }\n}\n\ninterface schedule {\n  monday: atset,\n  tuesday: atset,\n  wednesday: atset,\n  thursday: atset,\n  friday: atset,\n  saturday: atset,\n  sunday: atset\n}\n\ninterface atset {\n  available: boolean,\n  startTime: number,\n  endTime: number\n}\n\ninterface roles {\n  tank: boolean,\n  'meleeassassin': boolean,\n  'rangedassassin':boolean,\n  offlane: boolean,\n  support: boolean,\n  flex: boolean\n}\n","module.exports = \".role-margin {\\n    margin: 0 10px;\\n}\\n\\n.error-avail {\\n    border-style: solid;\\n    border-width: 2px;\\n    border-color: red;\\n    padding-left: 10px;\\n}\\n\\n.req-field {\\n    color: red;\\n    font-size: .80em;\\n    font-weight: 600;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n\\n            <div class=\\\"row mt-3\\\">\\n                <div class=\\\"col\\\">\\n                    <mat-form-field class=\\\"mat-FullWidth\\\">\\n                        <input matInput placeholder=\\\"Team Name*\\\" [formControl]=\\\"nameContorl\\\" [(ngModel)]=\\\"returnedProfile.teamName\\\">\\n                        <mat-error *ngIf=\\\"nameContorl.hasError('required')\\\">\\n                            Team name is required\\n                        </mat-error>\\n                        <mat-error *ngIf=\\\"nameContorl.hasError('invalidCharacters')\\\">\\n                            Special characters are not allowed in team names\\n                        </mat-error>\\n                    </mat-form-field>\\n                    <mat-slide-toggle [(ngModel)]=\\\"returnedProfile.lookingForMore\\\">\\n                        Looking for More.\\n                    </mat-slide-toggle>\\n                </div>\\n            </div>\\n\\n            <mat-form-field class=\\\"mat-FullWidth\\\">\\n                <mat-select placeholder=\\\"Team Competitive Level\\\" [(ngModel)]=\\\"returnedProfile.competitiveLevel\\\" disableOptionCentering>\\n                    <mat-option *ngFor=\\\"let level of competitonLevel\\\" [value]=\\\"level.val\\\">\\n                        {{level.display}}\\n                    </mat-option>\\n                </mat-select>\\n                <mat-hint align=\\\"start\\\"><strong>Generally how serious / competitively you're looking to play</strong>\\n                </mat-hint>\\n            </mat-form-field>\\n\\n            <!-- <div class=\\\"row mt-2\\\">\\n                    <div class=\\\"col\\\"> -->\\n            <mat-form-field class=\\\"mat-FullWidth\\\">\\n                <mat-label>Describe the teams play history / style</mat-label>\\n                <textarea matInput cdkTextareaAutosize [(ngModel)]=\\\"returnedProfile.descriptionOfTeam\\\"></textarea>\\n            </mat-form-field>\\n            <!-- </div>\\n                </div> -->\\n            <div class=\\\"row mt-3\\\">\\n                <div class=\\\"col\\\">\\n                    Roles the team needs:\\n                    <section>\\n                        <mat-checkbox class=\\\"role-margin\\\" [(ngModel)]=\\\"returnedProfile.rolesNeeded.tank\\\">Tank</mat-checkbox>\\n                        <mat-checkbox class=\\\"role-margin\\\" [(ngModel)]=\\\"returnedProfile.rolesNeeded.offlane\\\">Offlane</mat-checkbox>\\n                        <mat-checkbox class=\\\"role-margin\\\" [(ngModel)]=\\\"returnedProfile.rolesNeeded.meleeassassin\\\">Melee Assassin</mat-checkbox>\\n                        <mat-checkbox class=\\\"role-margin\\\" [(ngModel)]=\\\"returnedProfile.rolesNeeded.rangedassassin\\\">Ranged Assassin</mat-checkbox>\\n                        <mat-checkbox class=\\\"role-margin\\\" [(ngModel)]=\\\"returnedProfile.rolesNeeded.support\\\">Support</mat-checkbox>\\n                        <mat-checkbox class=\\\"role-margin\\\" [(ngModel)]=\\\"returnedProfile.rolesNeeded.flex\\\">Flex</mat-checkbox>\\n                    </section>\\n                </div>\\n            </div>\\n            <!-- Availability Schedule -->\\n            <app-times-available [availObj]=\\\"returnedProfile.availability\\\" (availValid)=\\\"receiveTimesValidity($event)\\\"></app-times-available>\\n\\n            <div class=\\\"row mt-3\\\">\\n                <div class=\\\"col\\\">\\n                    <mat-form-field class=\\\"mat-FullWidth\\\">\\n                        <mat-select placeholder=\\\"Timezone:*\\\" [formControl]=\\\"timeZoneControl\\\" [(ngModel)]=\\\"returnedProfile.timeZone\\\">\\n                            <mat-option *ngFor=\\\"let zone of timezone.timezones\\\" [value]=\\\"zone.value\\\">\\n                                {{zone.text}}\\n                            </mat-option>\\n                        </mat-select>\\n                        <mat-error *ngIf=\\\"timeZoneControl.hasError('required')\\\">\\n                            Timezone is required\\n                        </mat-error>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <div class=\\\"row mt-3 mb-3\\\">\\n\\n                <div class=\\\"col\\\">\\n                    <button type=\\\"button\\\" [disabled]=\\\"!validate()\\\" (click)=\\\"save()\\\" class=\\\"btn btn-success \\\">Save</button>\\n                </div>\\n                <div class=\\\"col\\\">\\n                    <button type=\\\"button\\\" (click)=\\\"cancel()\\\" class=\\\"btn btn-danger\\\">Cancel</button>\\n                </div>\\n\\n\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Team } from '../classes/team.class';\nimport { TeamService } from '../services/team.service';\nimport { TimezoneService } from '../services/timezone.service';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { UtilitiesService } from '../services/utilities.service';\n\n@Component({\n  selector: 'app-create-team',\n  templateUrl: './create-team.component.html',\n  styleUrls: ['./create-team.component.css']\n})\nexport class CreateTeamComponent implements OnInit {\n  returnedProfile: Team \n\n  hlMedals = ['Grand Master', 'Master', 'Diamond', 'Platinum', 'Gold', 'Silver', 'Bronze'];\n  hlDivision = [1, 2, 3, 4, 5];\n  competitonLevel = [\n    { val: 1, display: 'Low'},\n    { val: 3, display: 'Medium'},\n    { val: 5, display: 'High'}\n  ]\n  availabilityValid:boolean\n  \n  constructor(private team: TeamService, public timezone:TimezoneService, private auth: AuthService, private route:Router, private util:UtilitiesService) { }\n\n  nameContorl = new FormControl();\n  timeZoneControl = new FormControl();\n\n  createTeamControlGroup = new FormGroup({\n    nameControl: this.nameContorl,\n    timeZone: this.timeZoneControl\n  })\n\n  \n\n  ngOnInit() {\n    this.markFormGroupTouched(this.createTeamControlGroup);\n    this.returnedProfile = new Team(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);\n  }\n\n  cancel() {\n    this.returnedProfile = new Team(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);\n  }\n\n  receiveTimesValidity(event){\n    this.availabilityValid=event;\n  }\n\n  save() {\n    let checkName = this.returnedProfile.teamName.toLowerCase()\n    this.team.getTeam(checkName).subscribe( res =>{\n      if(res && res.teamName){\n        alert('Team name is taken!');\n        this.nameContorl.setErrors({taken:true});\n      }else{\n        if (this.validate()) {\n          this.returnedProfile.teamName_lower = checkName;\n          this.team.createTeam(this.returnedProfile).subscribe( res =>{\n            this.auth.setCaptain('true');\n            this.auth.setTeam(res.teamName_lower);\n            // go to the team profile page.\n            this.route.navigate(['/teamProfile', this.team.routeFriendlyTeamName(res.teamName)]);\n          }, err=>{\n            console.log(err);\n          })\n        }else{\n          alert('required infomation not included');\n        }\n      }\n    });\n  }\n\n  markFormGroupTouched(formGroup: FormGroup) {\n\n    if (formGroup.controls) {\n      const keys = Object.keys(formGroup.controls);\n      for (let i = 0; i < keys.length; i++) {\n        const control = formGroup.controls[keys[i]];\n\n        if (control instanceof FormControl) {\n          control.markAsTouched();\n        } else if (control instanceof FormGroup) {\n          this.markFormGroupTouched(control);\n        }\n      }\n    }\n  }\n\n  validate() {\n    let valid = true;\n    //validate team name is there\n    if(!this.util.returnBoolByPath(this.returnedProfile, 'teamName')){\n      this.nameContorl.setErrors({required:true});\n      valid = false;\n    }else{\n      let regEx = new RegExp(/[^A-Z0-9\\s]/ig);\n      if(regEx.test(this.returnedProfile.teamName)){\n        this.nameContorl.setErrors({invalidCharacters:true});\n      }else{\n        this.nameContorl.setErrors(null);\n      }\n      \n    }\n    //validate looking for team:\n    if (!this.util.returnBoolByPath(this.returnedProfile, 'lookingForMore')) {\n      valid = false;\n    }\n\n    //validate that there is at least 1 available day\n    if (!this.availabilityValid){\n      valid = false;\n    }\n\n    //ensure time zone\n    if (!this.util.returnBoolByPath(this.returnedProfile,'timeZone') ) {\n      this.timeZoneControl.setErrors({required:true});\n      valid = false;\n    }else{\n      this.timeZoneControl.setErrors(null);\n    }\n\n    return valid;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  directory works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-directory',\n  templateUrl: './directory.component.html',\n  styleUrls: ['./directory.component.css']\n})\nexport class DirectoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"/* #wrapper {\\n    padding: 16px;\\n    min-height: 100%;\\n    height: 100%;\\n    box-sizing: border-box;\\n} */\\n\\n#tab-group {\\n    /* height: 100%; */\\n    min-height: 100vh;\\n}\\n\\n#tab-group mat-tab-body {\\n    flex-grow: 1;\\n}\\n\\n.mat-tab-body-wrapper {\\n    height: 100%;\\n}\"","module.exports = \"<div id=\\\"myDiv\\\" class=\\\"container\\\" style=\\\"height: 100%\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div id=\\\"wrapper\\\">\\n                <mat-tab-group id=\\\"tab-group\\\" dynamicHeight class=\\\"mb-3\\\">\\n                    <mat-tab label=\\\"Division\\\">\\n                        <ng-template matTabContent>\\n                            <div>\\n                                <div class=\\\"row mt-3\\\">\\n                                    <div class=\\\"col-md-12\\\">\\n                                        <h2 class=\\\"text-center\\\">{{divDisplay.displayName}} </h2>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col\\\">\\n                                        <app-team-display [teams]=\\\"teams\\\"></app-team-display>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </ng-template>\\n\\n                    </mat-tab>\\n                    <mat-tab label=\\\"Schedule\\\">\\n                        <ng-template matTabContent>\\n                            <app-schedule-view [division]=\\\"divDisplay\\\"></app-schedule-view>\\n                        </ng-template>\\n                    </mat-tab>\\n                    <mat-tab label=\\\"Standings\\\">\\n                        <ng-template matTabContent>\\n                            <app-standings-view [division]=\\\"divDisplay\\\"></app-standings-view>\\n                        </ng-template>\\n                    </mat-tab>\\n                </mat-tab-group>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { DivisionService } from '../services/division.service';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Team } from '../classes/team.class';\nimport { TeamService } from '../services/team.service';\n\n\n\n@Component({\n  selector: 'app-division',\n  templateUrl: './division.component.html',\n  styleUrls: ['./division.component.css']\n})\n\nexport class DivisionComponent implements OnInit {\n\n\n \n  teams:Team[]\n  divSub: Subscription\n  param: string\n  navigationSubscription\n  divDisplay = {displayName:''};\n\n  \n\n  constructor(private division:DivisionService, private teamService:TeamService, private route:ActivatedRoute, private router: Router) {\n    \n\n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\n\n      // If it is a NavigationEnd event re-initalise the component\n      if (e instanceof NavigationEnd) {\n        this.param = this.route.snapshot.params['division'];\n        this.initialise();\n      }\n    });\n\n   }\n  \n  initialise(){\n    this.divDisplay;\n    this.teams = [];\n    this.divSub = this.division.getDivision(this.param).subscribe((res) => {\n\n      if(res!=undefined&&res!=null){\n        this.divDisplay = res;\n\n        if (res.teams && res.teams.length > 0) {\n          this.teamService.getTeams(res.teams).subscribe((retn) => {\n            this.teams = retn;\n          }, (error) => {\n            console.log(error);\n          });\n        }\n      }\n    }, (err)=>{\n      var arr : Team[] = [];\n      this.teams = arr; \n        });\n  \n      }\n\n  ngOnInit() {\n    this.initialise();\n  } \n\n}\n","module.exports = \".carousel-item {\\n    height: 65vh;\\n    min-height: 300px;\\n    background: no-repeat center center scroll;\\n    background-size: cover;\\n}\\n\\n.portfolio-item {\\n    margin-bottom: 30px;\\n}\\n\\n.mat-card {\\n    background-color: #F26A2F;\\n    color: white;\\n}\\n\\n.m-t {\\n    margin-top: 10px;\\n}\\n\\n.mat-card-image {\\n    background-color: white;\\n}\\n\\n.anchor {\\n    color: #482262;\\n    text-decoration: underline;\\n    font-weight: bold;\\n    font-size: 16px;\\n}\\n\\n.carousel-caption > h3, .carousel-caption > p {\\n  text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;\\n}\"","module.exports = \"<!-- <div class=\\\"container nav-padding\\\"> -->\\n\\n\\n<!-- Page Content -->\\n<div class=\\\"backGround\\\">\\n    <div class=\\\"container pb-4\\\">\\n        <header>\\n            <div id=\\\"carouselExampleIndicators\\\" class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\">\\n                <ol class=\\\"carousel-indicators\\\">\\n                    <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"0\\\" class=\\\"active\\\"></li>\\n                    <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"1\\\"></li>\\n                    <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"2\\\"></li>\\n                </ol>\\n                <div class=\\\"carousel-inner\\\" role=\\\"listbox\\\">\\n                    <!-- Slide One - Set the background image for this slide in the line below -->\\n                    <div (click)=\\\"goToBlogPage(jumboSlide)\\\" *ngFor=\\\"let jumboSlide of jumboTron let i = index\\\" class=\\\"carousel-item finger\\\" [ngClass]=\\\"{'active':i==0}\\\" [style.background-image]=\\\"'url('+jumboSlide.fields.heroImage.fields.file.url+'?w=1920&h=1080&fit=scale)'\\\">\\n                        <div class=\\\"carousel-caption d-none d-md-block\\\">\\n\\n                            <h3>{{jumboSlide.fields.title}}</h3>\\n                            <p>{{jumboSlide.fields.description}}</p>\\n                        </div>\\n                    </div>\\n\\n                    <a class=\\\"carousel-control-prev\\\" href=\\\"#carouselExampleIndicators\\\" role=\\\"button\\\" data-slide=\\\"prev\\\">\\n                        <span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\n                        <span class=\\\"sr-only\\\">Previous</span>\\n                    </a>\\n                    <a class=\\\"carousel-control-next\\\" href=\\\"#carouselExampleIndicators\\\" role=\\\"button\\\" data-slide=\\\"next\\\">\\n                        <span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\n                        <span class=\\\"sr-only\\\">Next</span>\\n                    </a>\\n                </div>\\n            </div>\\n        </header>\\n\\n        <h1 class=\\\"my-4 text-center\\\">Welcome to Nexus Gaming Series!</h1>\\n\\n        <h2>Recent news</h2>\\n        <div class=\\\"row m-t\\\" *ngFor=\\\"let row of rows\\\">\\n            <div class=\\\"col-4\\\" *ngFor=\\\"let item of row\\\">\\n                <mat-card (click)=\\\"goToBlogPage(item)\\\" class=\\\"blog-card finger\\\">\\n                    <mat-card-header>\\n                        <img mat-card-avatar src=\\\"{{item.fields.author.fields.image.fields.file.url}}\\\" class=\\\"author-image\\\">\\n                        <mat-card-title><span class=\\\"anchor\\\" (click)=\\\"goToBlogPage(item)\\\">{{item.fields.title}}</span></mat-card-title>\\n                        <mat-card-subtitle>{{item.fields.author.fields.name}}</mat-card-subtitle>\\n                    </mat-card-header>\\n                    <img mat-card-image src=\\\"{{item.fields.heroImage.fields.file.url}}?w=400&h=300&fit=scale\\\" alt=\\\"{{item.fields.heroImage.fields.description}}\\\">\\n                    <mat-card-content>\\n                        <div>{{item.fields.description}}</div>\\n                    </mat-card-content>\\n                </mat-card>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {  Router } from '@angular/router';\nimport { ContentfulService } from '../services/contentful.service';\nimport { environment } from '../../environments/environment';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private contentfulService:ContentfulService, private router: Router) {\n\n   }\n  perColumn:number = 3;\n  \n  jumboTron: any;\n  rows:any[]=[];\n\n  ngOnInit() {\n    this.contentfulService.getBlogs((Object.assign({content_type: 'blogPost'}, { links_to_entry: environment.contentful.categoryIDs.news, order:'-sys.createdAt', limit:6 }))).then(\n      res => { \n        this.createMyDisplay(res);\n      } \n    );\n    this, this.contentfulService.getBlogs((Object.assign({ content_type: 'blogPost' }, { links_to_entry: environment.contentful.categoryIDs.jumbotron, order: '-sys.createdAt', limit: 3 }))).then( res => {\n      this.jumboTron = res;\n    })\n  }\n\n  createMyDisplay(dat) {\n    if (!this.perColumn) {\n      this.perColumn = 3;\n    }\n    this.rows = [];\n    if (dat != undefined && dat.length > 0) {\n      if (dat.length > this.perColumn) {\n        let temparr = [];\n        for (var i = 0; i < dat.length; i++) {\n          if (i > 0 && i % this.perColumn == 0) {\n            this.rows.push(temparr);\n            temparr = [];\n          }\n          temparr.push(dat[i]);\n        }\n        if (temparr.length > 0) {\n          this.rows.push(temparr);\n        }\n      } else {\n        this.rows.push(dat);\n      }\n    } else {\n      this.rows = [];\n    }\n  }\n\n  goToBlogPage(blog) {\n    this.contentfulService.cacheBlog(blog);\n    this.router.navigate(['/blog', blog.sys.id]);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        Team Logo:\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <img class=\\\"img-fluid\\\" [src]=\\\"imageToDisplay\\\" alt=\\\"\\\" />\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\" [hidden]=\\\"!_showEdit\\\">\\n            <div class=\\\"col\\\">\\n                <span class=\\\"finger\\\"><i (click)=\\\"editClicked=!editClicked\\\" class=\\\"material-icons\\\">launch</i></span>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\" [hidden]=\\\"editClicked\\\">\\n            <div class=\\\"col\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\" [hidden]=\\\"!_showEdit\\\">\\n                        Upload New Team Logo:\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\" [hidden]=\\\"!_showEdit\\\">\\n                        <div>\\n                            <ngx-croppie *ngIf=\\\"croppieImage\\\" #ngxCroppie [croppieOptions]=\\\"croppieOptions\\\" [imageUrl]=\\\"croppieImageG\\\" (result)=\\\"newImageResultFromCroppie($event)\\\"></ngx-croppie>\\n                        </div>\\n                        <div>\\n                            <input type=\\\"file\\\" id=\\\"fileupload\\\" #imageUpload (change)=\\\"imageUploadEvent($event)\\\" accept=\\\"image/gif, image/jpeg, image/png\\\" />\\n                            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" (click)=\\\"cancelCroppieEdit()\\\">Cancel</button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveImageFromCroppie()\\\">Save</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { CroppieOptions } from 'croppie';\nimport { NgxCroppieComponent } from 'ngx-croppie';\nimport { TeamService } from '../services/team.service';\n\n@Component({\n  selector: 'app-image-upload',\n  templateUrl: './image-upload.component.html',\n  styleUrls: ['./image-upload.component.css']\n})\nexport class ImageUploadComponent implements OnInit {\n  @ViewChild('ngxCroppie') ngxCroppie: NgxCroppieComponent;\n\n  _teamName: string\n  @Input() set teamName(name) {\n    if (name != null && name != undefined && name.length) {\n      this._teamName = name;\n    } else {\n      this._teamName = '';\n    }\n  }\n  _showEdit:boolean=false;\n  @Input() set showEdit(show){\n    if (show != null && show != undefined) {\n      this._showEdit = show;\n    } else {\n      this._showEdit = false;\n    }\n  }\n\n  @Input() set teamLogo(img){\n    if (img != null && img != undefined && img.length) {\n      this.currentImage = this.teamService.imageFQDN(img);\n    } else {\n      this.currentImage = null;\n    }\n  }\n\n  editClicked:boolean=true;\n\n  widthPx = '350';\n  heightPx = '230';\n  imageUrl = '';\n  currentImage: string;\n  croppieImage: string;\n\n  constructor(private teamService:TeamService){\n\n  }\n\n  public get imageToDisplay() {\n    let imgRet;\n    if (this.currentImage) { imgRet = this.currentImage; }\n    else if (this.imageUrl) { imgRet = this.imageUrl; }else{\n      imgRet = `https://placehold.it/${this.widthPx}x${this.heightPx}`;\n    }\n    return imgRet\n  }\n\n  public get croppieOptions(): CroppieOptions {\n    const opts: CroppieOptions = {};\n    opts.viewport = {\n      width: parseInt(this.widthPx, 10),\n      height: parseInt(this.heightPx, 10)\n    };\n    opts.boundary = {\n      width: parseInt(this.widthPx, 10)*1.1,\n      height: parseInt(this.heightPx, 10)*1.1\n    };\n    opts.enforceBoundary = false;\n    return opts;\n  }\n\n  public get croppieImageG():string{\n    return this.croppieImage;\n  }\n\n  ngOnInit() {\n    this.currentImage = this.imageUrl;\n    this.croppieImage = this.imageUrl;\n  }\n\n  ngOnChanges(changes: any) {\n    if (this.croppieImage) { return; }\n    if (!changes.imageUrl) { return; }\n    if (!changes.imageUrl.previousValue && changes.imageUrl.currentValue) {\n      this.croppieImage = changes.imageUrl.currentValue;\n    }\n  }\n\n  newImageResultFromCroppie(img: string) {\n    this.croppieImage = img;\n  }\n\n  saveImageFromCroppie() {\n    \n    let input = {\n      logo: this.croppieImage,\n      teamName: this._teamName\n    }\n\n    this.teamService.logoUpload(input).subscribe(res=>{\n      this.currentImage = this.croppieImage;\n      this.croppieImage = null;\n      this.editClicked = true;\n    },(err)=>{\n      console.log(err);\n    });\n   \n  }\n\n  cancelCroppieEdit() {\n    this.croppieImage = null;\n    this.editClicked = true;\n  }\n\n  imageUploadEvent(evt: any) {\n    this.croppieImage=null;\n    if (!evt.target) { return; }\n    if (!evt.target.files) { return; }\n    if (evt.target.files.length !== 1) { return; }\n    const file = evt.target.files[0];\n    if (file.type !== 'image/jpeg' && file.type !== 'image/png' && file.type !== 'image/gif' && file.type !== 'image/jpg') { return; }\n    const fr = new FileReader();\n    fr.onloadend = (loadEvent) => {\n      this.croppieImage = '';\n      this.croppieImage = <string>fr.result;\n    };\n    fr.readAsDataURL(file);\n  }\n\n}\n","module.exports = \".bNet {\\n    background-color: #0e86ca;\\n    border-color: #00aeff\\n}\\n\\n.disclaimer {\\n    color: #fb6969;\\n    padding-right: 25px;\\n    padding-left: 25px;\\n    font-size: small;\\n}\"","module.exports = \"<div class=\\\"container forceFull\\\">\\n    <div class=\\\"row\\\" *ngIf=\\\"!Auth.isAuthenticated(); else loggedIn\\\">\\n        <div class=\\\"col-3\\\"></div>\\n        <div class=\\\"col\\\">\\n            <div class=\\\"card mt-5\\\">\\n                <div class=\\\"card-header\\\">\\n                    NGS Login\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <h5 class=\\\"card-title\\\">We manage authentication and login via Battle.net</h5>\\n                    <div class=\\\"text-center\\\"><a href=\\\"/auth/bnet\\\" class=\\\"btn btn-primary bNet\\\">Login with Battle.Net!</a></div>\\n                    <div class=\\\"text-center mt-1\\\"><img class=\\\"text-center\\\" src=\\\"assets/Blizz_Corp_RGB_LightBkgd.png\\\" width=\\\"145\\\"></div>\\n                </div>\\n            </div>\\n\\n            <p class=\\\"disclaimer\\\">We do not capture any private data (ie: email); however we do create a profile including your battle.bet battle tag and collect information regarding your play schedule and MMR etc.</p>\\n            <!-- <div class=\\\"mt-5\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        <h2>Login</h2>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        <p>We manage athentication an login via Battle.net:</p>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\"><a type=\\\"button\\\" class=\\\"btn btn-success\\\" href=\\\"/auth/bnet\\\">Login with Battle.Net!</a></div>\\n                </div>\\n            </div> -->\\n        </div>\\n        <div class=\\\"col-3\\\"></div>\\n    </div>\\n    <ng-template #loggedIn>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm\\\"></div>\\n            <div class=\\\"col-sm\\\">\\n                <h2>Welcome to the Nexus Gaming Series app!</h2>\\n                <a type=\\\"button\\\" class=\\\"btn btn-success\\\" href=\\\"/profile/{{profile}}\\\">Check out your profile!</a>\\n            </div>\\n            <div class=\\\"col-sm\\\"></div>\\n        </div>\\n    </ng-template>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  profile: string\n\n  constructor(private route: ActivatedRoute, public Auth: AuthService, private router: Router, private user : UserService ) {\n    if(route.snapshot.params['token']){\n      let URI = decodeURIComponent(route.snapshot.params['token']);\n      \n      let parsed = JSON.parse(URI);\n\n      // console.log('parsed ',parsed );\n      \n      Auth.createAuth(parsed.token);\n      // console.log('init in login ', Auth.getReferral());\n      if (Auth.getReferral()) {\n        this.user.outreachResponse(Auth.getReferral(), Auth.getUser()).subscribe((res) => {\n          Auth.destroyReferral();\n        }, (err) => { Auth.destroyReferral();});\n      } else if (Auth.isAuthenticated()) {\n        this.profile = user.routeFriendlyUsername(Auth.getUser());\n      }\n      \n      router.navigateByUrl('/profile/'+user.routeFriendlyUsername(Auth.getUser()));\n    }\n   }\n\n  ngOnInit() {\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container forceFull\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-3\\\"></div>\\n        <div class=\\\"col\\\">\\n            <div class=\\\"card mt-5\\\">\\n                <div class=\\\"card-header\\\">\\n                    You have been logged out of Nexus Gaming Series!\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <p class=\\\"\\\">You have been logged out of Nexus Gaming Series, however battle.net does not provide a method for destroying your session with them, so please go to a battle.net webpage and action a logout.</p>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-3\\\"></div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!-- <div class=\\\"row\\\" *ngFor=\\\"let memberRow of memberRows\\\">\\n    <div class=\\\"col\\\" *ngFor=\\\"let member of memberRow\\\">\\n        <a [routerLink]=\\\"['/profile/', user.routeFriendlyUsername(member.displayName)]\\\">{{member.displayName}}</a>\\n    </div>\\n</div> -->\\n<div class=\\\"row\\\" *ngFor=\\\"let member of members\\\">\\n    <div class=\\\"col\\\">\\n        <a [routerLink]=\\\"['/profile/', user.routeFriendlyUsername(member.displayName)]\\\">{{member.displayName}}</a>\\n    </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-members-display',\n  templateUrl: './members-display.component.html',\n  styleUrls: ['./members-display.component.css']\n})\nexport class MembersDisplayComponent implements OnInit {\n  _members:Array<any>=[]\n\n  @Input() perColumn: any\n  @Input() set members(members){\n    if(members != null && members != undefined && members.length){\n      this._members = members;\n      // this.createMembersDisplay()\n    }else{\n      this._members = [];\n    }\n    }\n  get members(){\n    return this._members;\n  }\n\n  memberRows: Array<any> = []\n\n  createMembersDisplay(){\n    if(!this.perColumn){\n      this.perColumn=2;\n    }\n    this.memberRows = [];\n    if (this._members != undefined && this._members.length > 0) {\n      if (this._members.length > this.perColumn) {\n        for (var i = 0; i < this._members.length; i++) {\n          let temparr = [];\n          if (i % this.perColumn == 0) {\n            this.memberRows.push(temparr);\n            temparr = [];\n          }\n          temparr.push(this._members[i]);\n        }\n      } else {\n        this.memberRows.push(this._members);\n      }\n    } else {\n      this.memberRows = [];\n    }\n  }\n\n  constructor(public user:UserService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1 mat-dialog-title>Select New Captain</h1>\\n<div mat-dialog-content>\\n    <section class=\\\"example-section\\\">\\n        <div *ngFor=\\\"let member of data.members; let i = index\\\">\\n            <mat-checkbox class=\\\"example-margin\\\" [checked]=\\\"selected === member.displayName\\\" (change)=\\\"selected=member.displayName\\\" [disabled]=\\\"member.displayName==data.captain\\\">{{member.displayName}}</mat-checkbox>\\n        </div>\\n    </section>\\n</div>\\n<div mat-dialog-actions>\\n    <button mat-button (click)=\\\"onNoClick()\\\">No Thanks</button>\\n    <button mat-button [mat-dialog-close]=\\\"selected\\\" cdkFocusInitial>Ok</button>\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-change-captain-modal',\n  templateUrl: './change-captain-modal.component.html',\n  styleUrls: ['./change-captain-modal.component.css']\n})\n\nexport class ChangeCaptainModalComponent implements OnInit {\n  selected:string\n  newCaptain:string\n  memberSelected:string\n  constructor(\n    public dialogRef: MatDialogRef<ChangeCaptainModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: dataModel) {\n    \n     }\n  \n    \n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit() {\n  }\n\n}\n\nexport interface dataModel {\n  members: any\n}\n","module.exports = \"\"","module.exports = \"<h1 mat-dialog-title>Confirm Delete</h1>\\n<div mat-dialog-content>\\n    <p>Type delete to confirm delete:</p>\\n    <mat-form-field class=\\\" mat-FullWidth\\\">\\n        <input matInput [(ngModel)]=\\\"data.confirm\\\">\\n    </mat-form-field>\\n</div>\\n<div mat-dialog-actions>\\n    <button mat-button (click)=\\\"onNoClick()\\\">No Thanks</button>\\n    <button mat-button [mat-dialog-close]=\\\"data.confirm\\\" cdkFocusInitial>Ok</button>\\n</div>\"","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-delete-confrim-modal',\n  templateUrl: './delete-confrim-modal.component.html',\n  styleUrls: ['./delete-confrim-modal.component.css']\n})\nexport class DeleteConfrimModalComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteConfrimModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\nexport interface DialogData {\n  confirm: string;\n}\n","module.exports = \".container {\\n    background-color: #F26A2F;\\n}\\n\\n.navbar {\\n    background-color: #F26A2F;\\n    color: white;\\n}\"","module.exports = \"<nav class=\\\"navbar fixed-top navbar-expand-lg navbar-dark fixed-top\\\">\\n    <div class=\\\"container\\\">\\n        <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\">Home</a>\\n        <button class=\\\"navbar-toggler navbar-toggler-right\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarResponsive\\\" aria-controls=\\\"navbarResponsive\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarResponsive\\\">\\n            <ul class=\\\"navbar-nav ml-auto\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" [routerLink]=\\\"['/blog','3BLsIya6ZiWQWka4IeUw2']\\\">Rules</a>\\n                </li>\\n                <li class=\\\"nav-item dropdown\\\">\\n                    <a class=\\\"nav-link dropdown-toggle finger\\\" id=\\\"divisionDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">Divisions</a>\\n                    <div class=\\\"dropdown-menu\\\">\\n                        <a class=\\\"dropdown-item\\\" *ngFor=\\\"let division of divisions\\\" [routerLink]=\\\"['/division/',division.divisionConcat]\\\">{{division.displayName}}</a>\\n                    </div>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" [routerLink]=\\\"['/calendar']\\\">Calendar</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" [routerLink]=\\\"['/blog']\\\">Blog</a>\\n                </li>\\n                <ul class=\\\"navbar-nav mr-auto\\\">\\n                    <li class=\\\"nav-item\\\" *ngIf=\\\"!Auth.isAuthenticated() else loggedIn\\\">\\n                        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n                    </li>\\n                    <ng-template #loggedIn>\\n                        <li class=\\\"nav-item dropdown\\\">\\n                            <a class=\\\"nav-link dropdown-toggle finger\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-expanded=\\\"false\\\">{{Auth.getUser()}} </a>\\n                            <div class=\\\"dropdown-menu\\\">\\n                                <a class=\\\"dropdown-item finger\\\" (click)=\\\"navGo('/profile/',user.routeFriendlyUsername(Auth.getUser()))\\\">Profile</a>\\n                                <div *ngIf=\\\"Auth.getTeam(); else noTeam\\\">\\n                                    <a class=\\\"dropdown-item finger\\\" (click)=\\\"navGo('/teamProfile/',team.routeFriendlyTeamName( Auth.getTeam() ) )\\\">Team</a>\\n                                    <a class=\\\"dropdown-item finger\\\" [routerLink]=\\\"['/schedule/teamSchedule']\\\">Schedule</a>\\n                                    <div *ngIf=\\\"Auth.getCaptain()\\\">\\n                                        <!--TODO: implement Find players <a class=\\\"dropdown-item\\\" (click)=\\\"navGo('/teamProfile/',team.routeFriendlyTeamName( Auth.getTeam() ) )\\\">Find Players</a> -->\\n                                        <a class=\\\"dropdown-item finger\\\" (click)=\\\"navGo('/reporting/',team.routeFriendlyTeamName( Auth.getTeam() ) )\\\">Reporting</a>\\n                                    </div>\\n\\n                                </div>\\n                                <ng-template #noTeam>\\n                                    <a class=\\\"dropdown-item finger\\\" [routerLink]=\\\"['/teamCreate']\\\">Create Team</a>\\n                                    <!-- TODO: implement a find team <a class=\\\"dropdown-item finger\\\" (click)=\\\"navGo('/teamProfile/',team.routeFriendlyTeamName( teamName ) )\\\">Find Team</a> -->\\n                                </ng-template>\\n                                <a *ngIf=\\\"Auth.getAdmin() && Auth.getAdmin().length>0\\\" class=\\\"dropdown-item finger\\\" (click)=\\\"navGo('/_admin/dashboard')\\\">Admin Dashboard</a>\\n                                <a *ngIf=\\\"Auth.getCaster()\\\" class=\\\"dropdown-item finger\\\" (click)=\\\"navGo('/_casterDashboard')\\\">Caster Dashboard</a>\\n                                <div class=\\\"dropdown-divider\\\"></div>\\n                                <a class=\\\"dropdown-item finger\\\" (click)=\\\"Auth.destroyAuth('/logout')\\\">Logout</a>\\n                            </div>\\n                        </li>\\n                    </ng-template>\\n\\n                </ul>\\n            </ul>\\n        </div>\\n    </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { TeamService } from '../services/team.service';\nimport { UserService } from '../services/user.service';\nimport { DivisionService } from '../services/division.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  userName: string\n  teamName: string\n  divisions\n\n  constructor(public Auth:AuthService, private router: Router, public team:TeamService, public user:UserService, private divisionService: DivisionService) { }\n\n  navGo(appRoute,path){\n    if(path != null && path != undefined && path.length>0){\n      this.router.navigateByUrl(appRoute+path);\n    }else{\n      this.router.navigateByUrl(appRoute);\n      //nah\n    }\n  }\n  ngOnInit() {\n    this.divisionService.getDivisionInfo().subscribe( res => {\n      this.divisions = res;\n    }, err=>{\n      console.log(err);\n    })\n    if(this.Auth.getTeam()){\n      this.teamName = this.Auth.getTeam();\n    }\n    if(this.Auth.isAuthenticated()){\n      this.userName=this.Auth.getUser();\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container forceFull\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col text-center\\\">\\n            <h3>!UNAUTHORIZED!</h3>\\n            <h4>Sorry you do not have access to that!</h4>\\n            <h5>If you feel that you should please contact an admin and request \\\" {{role}} \\\" access!</h5>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router'\n\n@Component({\n  selector: 'app-no-access',\n  templateUrl: './no-access.component.html',\n  styleUrls: ['./no-access.component.css']\n})\nexport class NoAccessComponent implements OnInit {\n\n  role:string = '';\n  constructor(private router: ActivatedRoute) {\n    this.role = this.router.snapshot.params['id'];\n    this.role = this.role.toUpperCase();\n   }\n\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".disclaimer {\\n    color: #fb6969;\\n    padding-right: 25px;\\n    padding-left: 25px;\\n    font-size: small;\\n}\"","module.exports = \"<div class=\\\"container forceFull\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-3\\\"></div>\\n        <div class=\\\"col\\\">\\n            <div class=\\\"card mt-5\\\">\\n                <div class=\\\"card-header\\\">\\n                    Welcome to the Nexus Gaming Series!\\n                    <!--NGS!-->\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <h5 class=\\\"card-title\\\">You've been invited to join an elite group of players to test your mettle in the Nexus!</h5>\\n                    <div class=\\\"text-center\\\"><a href=\\\"/auth/bnet\\\" class=\\\"btn btn-primary bNet\\\">Login with Battle.Net!</a></div>\\n                    <div class=\\\"text-center mt-1\\\"><img class=\\\"text-center\\\" src=\\\"assets/Blizz_Corp_RGB_LightBkgd.png\\\" width=\\\"145\\\"></div>\\n                </div>\\n            </div>\\n\\n            <p class=\\\"disclaimer\\\">\\n                We do not capture any private data (ie: email); however we do create a profile including your battle.bet account and collect information regarding your play schedule and MMR etc.\\n            </p>\\n        </div>\\n        <div class=\\\"col-3\\\"></div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-outreach-email-response',\n  templateUrl: './outreach-email-response.component.html',\n  styleUrls: ['./outreach-email-response.component.css']\n})\nexport class OutreachEmailResponseComponent implements OnInit {\n\n  referralKey\n  constructor(private route:ActivatedRoute, private auth: AuthService) {\n    if(route.snapshot.params['id']){\n      console.log('setting referral code')\n      auth.setReferral(route.snapshot.params['id']);\n      console.log(auth.getReferral());\n    }\n   }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".example-container {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.example-container>* {\\n    width: 100%;\\n}\\n\\n.cb-vertival {\\n    flex-flow: column;\\n}\\n\\n.cb-wrapper {\\n    display: flex;\\n    flex-wrap: wrap;\\n    justify-content: left;\\n    flex-flow: row;\\n}\\n\\n.pe-full-width {\\n    width: 100%;\\n}\\n\\n.role-margin {\\n    margin: 0 10px;\\n}\\n\\n.icon-align {\\n    display: inline-flex;\\n    vertical-align: middle;\\n}\"","module.exports = \"<!-- *ngIf=\\\"userProfile|async as resolvedUser; else loading\\\" -->\\n<div class=\\\"container\\\">\\n    <div class=\\\"bg-white\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <div class=\\\"row\\\" *ngIf=\\\"auth.getUser() === returnedProfile.displayName\\\">\\n                    <div class=\\\"col-8 offset-2\\\">\\n                        <div class=\\\"row mt-3\\\">\\n                            <div class=\\\"col-6\\\">\\n                                Welcome to your player profile!\\n                            </div>\\n                            <div class=\\\"col-6\\\">\\n                                <div *ngIf=\\\"editOn == true\\\">\\n                                    <button type=\\\"button\\\" (click)=\\\"openEdit()\\\" class=\\\"btn btn-primary float-right\\\">Edit</button>\\n                                </div>\\n                                <div class=\\\"row\\\" *ngIf=\\\"!editOn\\\">\\n                                    <div class=\\\"col\\\">\\n                                        <button type=\\\"button\\\" (click)=\\\"openDialog()\\\" class=\\\"btn btn-danger \\\"><span class=\\\"icon-align\\\"><i class=\\\"material-icons\\\">delete_forever</i>Delete</span></button>\\n                                    </div>\\n                                    <div class=\\\"col\\\">\\n                                        <button type=\\\"button\\\" [disabled]=\\\"!profileForm.valid\\\" (click)=\\\"save()\\\" class=\\\"btn btn-success \\\"><span class=\\\"icon-align\\\"><i class=\\\"material-icons\\\">check</i>Save</span></button>\\n                                    </div>\\n                                    <div class=\\\"col\\\">\\n                                        <button type=\\\"button\\\" (click)=\\\"cancel()\\\" class=\\\"btn btn-danger\\\"><span class=\\\"icon-align\\\"><i class=\\\"material-icons\\\">close</i>Cancel</span></button>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row mt-2\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <div class=\\\"example-container\\\">\\n                            <mat-form-field>\\n                                <input matInput placeholder=\\\"Display Name\\\" [(ngModel)]=\\\"returnedProfile.displayName\\\" disabled=\\\"true\\\">\\n                            </mat-form-field>\\n                            <mat-form-field>\\n                                <input matInput placeholder=\\\"HOTS LOGS URL\\\" [formControl]=\\\"hotsLogsFormControl\\\" [(ngModel)]=\\\"returnedProfile.hotsLogsURL\\\">\\n                                <mat-error *ngIf=\\\"hotsLogsFormControl.hasError('required')\\\">\\n                                    HOTS Logs URL is required\\n                                </mat-error>\\n                                <mat-error *ngIf=\\\"hotsLogsFormControl.hasError('invalidurl')\\\">\\n                                    This doesn't match the pattern we're looking for: https://www.hotslogs.com/Player/Profile?PlayerID=######\\n                                </mat-error>\\n\\n                            </mat-form-field>\\n                            <mat-form-field>\\n                                <input matInput placeholder=\\\"Discord Tag\\\" [formControl]=\\\"discordTagFormControl\\\" [(ngModel)]=\\\"returnedProfile.discordTag\\\">\\n                                <mat-error *ngIf=\\\"discordTagFormControl.hasError('required')\\\">\\n                                    Discord Tag is required.\\n                                </mat-error>\\n                            </mat-form-field>\\n                            <mat-form-field>\\n                                <mat-select placeholder=\\\"Hero League Division\\\" [formControl]=\\\"heroeLeagueDivisionControl\\\" [(ngModel)]=\\\"returnedProfile.hlRankMetal\\\" disableOptionCentering>\\n                                    <mat-option *ngFor=\\\"let medal of hlMedals\\\" [value]=\\\"medal\\\">\\n                                        {{medal}}\\n                                    </mat-option>\\n                                    <mat-error *ngIf=\\\"heroeLeagueDivisionControl.hasError('required')\\\">\\n                                        Hero League Division is required\\n                                    </mat-error>\\n                                </mat-select>\\n                            </mat-form-field>\\n                            <div class=\\\"pe-full-width\\\" *ngIf=\\\"returnedProfile.hlRankMetal != 'Master' && returnedProfile.hlRankMetal != 'Grand Master'\\\">\\n                                <mat-form-field class=\\\"pe-full-width\\\">\\n                                    <mat-select placeholder=\\\"Hero League Rank\\\" [formControl]=\\\"heroeLeagueRankControl\\\" [(ngModel)]=\\\"returnedProfile.hlRankDivision\\\" disableOptionCentering>\\n                                        <mat-option *ngFor=\\\"let rank of hlDivision\\\" [value]=\\\"rank\\\">\\n                                            {{rank}}\\n                                        </mat-option>\\n                                        <mat-error *ngIf=\\\"heroeLeagueRankControl.hasError('required')\\\">\\n                                            Hero League Rank is required\\n                                        </mat-error>\\n                                    </mat-select>\\n                                </mat-form-field>\\n                            </div>\\n\\n                            <div class=\\\"pe-full-width\\\" *ngIf=\\\"returnedProfile.hlRankMetal == 'Master' || returnedProfile.hlRankMetal == 'Grand Master'\\\">\\n                                <mat-form-field class=\\\"pe-full-width\\\">\\n                                    <input matInput placeholder=\\\"Rank Number\\\" [formControl]=\\\"heroeLeagueRankControl\\\" [(ngModel)]=\\\"returnedProfile.hlRankDivision\\\">\\n                                </mat-form-field>\\n                                <mat-error *ngIf=\\\"heroeLeagueRankControl.hasError('required')\\\">\\n                                    Hero League Rank is required\\n                                </mat-error>\\n                            </div>\\n\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col\\\">\\n                                    <mat-slide-toggle disabled=\\\"{{editOn}}\\\" [(ngModel)]=\\\"returnedProfile.lookingForGroup\\\">\\n                                        Looking for team.\\n                                    </mat-slide-toggle>\\n                                </div>\\n                            </div>\\n\\n                            <mat-form-field class=\\\"mt-3\\\">\\n                                <mat-select placeholder=\\\"Competitive Level\\\" disabled=\\\"{{editOn}}\\\" [(ngModel)]=\\\"returnedProfile.competitiveLevel\\\" disableOptionCentering>\\n                                    <mat-option *ngFor=\\\"let level of competitonLevel\\\" [value]=\\\"level\\\">\\n                                        {{level}}\\n                                    </mat-option>\\n                                </mat-select>\\n                                <mat-hint align=\\\"start\\\"><strong>Generally how serious / competitively you're looking to play</strong>\\n                                </mat-hint>\\n                            </mat-form-field>\\n\\n                            <div class=\\\"row mt-3\\\">\\n                                <div class=\\\"col\\\">\\n                                    <mat-form-field class=\\\"pe-full-width\\\">\\n                                        <mat-label>Describe your play history / style</mat-label>\\n                                        <textarea matInput cdkTextareaAutosize disabled=\\\"{{editOn}}\\\" [(ngModel)]=\\\"returnedProfile.descriptionOfPlay\\\"></textarea>\\n                                    </mat-form-field>\\n                                </div>\\n                            </div>\\n                            <!-- <div class=\\\"row mt-3\\\">\\n                            <div class=\\\"col\\\">\\n                                <mat-form-field class=\\\"pe-full-width\\\">\\n                                    <input matInput placeholder=\\\"Enter your toon ID, we will use this tie your profile to submitted replays\\\" [(ngModel)]=\\\"returnedProfile.toonId\\\" disabled=\\\"{{editOn}}\\\">\\n                                </mat-form-field>\\n                            </div>\\n                        </div> -->\\n                            <div class=\\\"row mt-1\\\">\\n                                <div class=\\\"col\\\">\\n                                    Roles:\\n                                    <section>\\n                                        <mat-checkbox class=\\\"role-margin\\\" disabled=\\\"{{editOn}}\\\" [(ngModel)]=\\\"returnedProfile.role.tank\\\">Tank</mat-checkbox>\\n                                        <mat-checkbox class=\\\"role-margin\\\" disabled=\\\"{{editOn}}\\\" [(ngModel)]=\\\"returnedProfile.role.offlane\\\">Offlane</mat-checkbox>\\n                                        <mat-checkbox class=\\\"role-margin\\\" disabled=\\\"{{editOn}}\\\" [(ngModel)]=\\\"returnedProfile.role.meleeassassin\\\">Melee Assassin</mat-checkbox>\\n                                        <mat-checkbox class=\\\"role-margin\\\" disabled=\\\"{{editOn}}\\\" [(ngModel)]=\\\"returnedProfile.role.rangedassassin\\\">Ranged Assassin</mat-checkbox>\\n                                        <mat-checkbox class=\\\"role-margin\\\" disabled=\\\"{{editOn}}\\\" [(ngModel)]=\\\"returnedProfile.role.support\\\">Support</mat-checkbox>\\n                                        <mat-checkbox class=\\\"role-margin\\\" disabled=\\\"{{editOn}}\\\" [(ngModel)]=\\\"returnedProfile.role.flex\\\">Flex</mat-checkbox>\\n                                    </section>\\n                                </div>\\n                            </div>\\n                            <!-- Availability Schedule -->\\n\\n                            <!-- !editOn && !returnedProfile.availability.monday.available || editOn &&  -->\\n                            <app-times-available [customText]=\\\"'Availability'\\\" [availObj]=\\\"returnedProfile.availability\\\" (availValid)=\\\"recieveAvailTimeValidity($event)\\\" [disabled]=\\\"editOn\\\"></app-times-available>\\n\\n                            <div class=\\\"row mt-3\\\">\\n                                <div class=\\\"col\\\">\\n                                    <mat-form-field class=\\\"pe-full-width\\\">\\n                                        <mat-select placeholder=\\\"Timezone:\\\" [formControl]=\\\"timezoneControl\\\" [(ngModel)]=\\\"returnedProfile.timeZone\\\">\\n                                            <mat-option *ngFor=\\\"let zone of timezone.timezones\\\" [value]=\\\"zone.value\\\">\\n                                                {{zone.text}}\\n                                            </mat-option>\\n                                        </mat-select>\\n                                        <mat-error *ngIf=\\\"timezoneControl.hasError('required')\\\">\\n                                            Timezone is required\\n                                        </mat-error>\\n                                    </mat-form-field>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n\\n\\n            <ng-template #loading>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        <h3>Loading profile..</h3>\\n                    </div>\\n                </div>\\n            </ng-template>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, NgModule, Input} from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\nimport { TimezoneService } from '../services/timezone.service';\nimport { UserService } from '../services/user.service';\nimport { AuthService } from '../services/auth.service';\nimport { Profile } from '../classes/profile.class';\nimport { Observable, Subscription } from 'rxjs';\nimport { ReactiveFormsModule, FormControl, Validators, FormGroup } from '@angular/forms';\nimport { merge } from 'lodash';\nimport { HotsLogsService } from '../services/hots-logs.service';\nimport { Router } from '@angular/router';\nimport { NotificationService } from '../services/notification.service';\nimport { DeleteConfrimModalComponent } from '../modal/delete-confrim-modal/delete-confrim-modal.component'\n\n@NgModule({\n  imports:[\n    ReactiveFormsModule\n  ]\n})\n\n@Component({\n  selector: 'app-profile-edit',\n  templateUrl: './profile-edit.component.html',\n  styleUrls: ['./profile-edit.component.css']\n})\nexport class ProfileEditComponent implements OnInit {\n\n  constructor(private notificationService:NotificationService, public timezone: TimezoneService, private user: UserService, public auth: AuthService, private router: Router, private route: ActivatedRoute, private hotsLogsService: HotsLogsService, public dialog: MatDialog) {\n    this.displayName = user.realUserName(this.route.snapshot.params['id']);\n  }\n\n  editOn = true;\n\n  hotsLogsFormControl = new FormControl({value:'',disabled:true} ,[\n    Validators.required,\n    this.hotslogsUrlPatternValidator\n  ]);\n\n  discordTagFormControl = new FormControl({ value: '', disabled: true }, [\n    Validators.required\n  ]);\n\n  heroeLeagueDivisionControl = new FormControl({ value: '',disabled:true}, [\n    Validators.required\n  ]);\n\n  heroeLeagueRankControl = new FormControl({ value: '', disabled: true }, [\n    Validators.required\n  ]);\n\n  timezoneControl = new FormControl({ value: '', disabled: true }, [\n    Validators.required\n  ]);\n\n  timesAvailControl = new FormControl();\n\n  hotslogsUrlPatternValidator(control: FormControl) {\n  let hotslogsURL = control.value;\n    let regex = new RegExp(/^((https):\\/)\\/www\\.hotslogs\\.com\\/player\\/profile\\?playerid\\=[0-9]+/, 'i');\n    if (regex.test(hotslogsURL)) {\n      return null;\n  }else{\n      return {\n        invalidurl:true\n        }\n      };\n  }\n\n  profileForm = new FormGroup({\n    hotslogurl: this.hotsLogsFormControl,\n    discordTag: this.discordTagFormControl,\n    hlDivision: this.heroeLeagueDivisionControl,\n    hlRank: this.heroeLeagueRankControl,\n    timezone: this.timezoneControl,\n    timeAvail:this.timesAvailControl\n  })\n\n  formControlledEnable(){\nthis.hotsLogsFormControl.enable();\nthis.discordTagFormControl.enable();\nthis.heroeLeagueDivisionControl.enable();\nthis.heroeLeagueRankControl.enable();\nthis.timezoneControl.enable();\n  }\n\n  formControlledDisable(){\n    this.hotsLogsFormControl.disable();\n    this.discordTagFormControl.disable();\n    this.heroeLeagueDivisionControl.disable();\n    this.heroeLeagueRankControl.disable();\n    this.timezoneControl.disable();\n  }\n\n  providedProfile:string;\n  @Input() set passedProfile(profile){\n    if(profile!=null&&profile!=undefined){\n      this.providedProfile = profile;\n      this.ngOnInit();\n    }\n  }\n\n  confirm: string\n\n  openDialog(): void {\n    \n    const dialogRef = this.dialog.open(DeleteConfrimModalComponent, {\n      width: '300px',\n      data: { confirm: this.confirm }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result.toLowerCase()=='delete'){\n        this.user.deleteUser().subscribe(\n          res =>{\n          this.auth.destroyAuth('/logout');\n         },err=>{\n            console.log(err);\n          }\n        )\n      }\n    });\n  }\n\n  answers: object;\n  selectedMedal: string;\n  displayName : string;\n  profileObs : Observable<Profile>;\n  returnedProfile = new Profile(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);\n\n  dataRet = false;\n  profSub: Subscription;\n  tempProfile: Profile;\n\n  hlMedals = ['Grand Master','Master','Diamond','Platinum','Gold','Silver','Bronze'];\n  hlDivision = [1,2,3,4,5];\n  competitonLevel = [\n    'Low','Medium','High'\n  ]\n  \n\n   hideDay(editSwitch, dayAvailabilty): boolean {\n     if (!editSwitch){\n      return false;\n     }else{\n       if(dayAvailabilty){\n         return false;\n       }else{\n         return true;\n       }\n     }\n   }\n\n  markFormGroupTouched(formGroup: FormGroup) {\n\n  if (formGroup.controls) {\n    const keys = Object.keys(formGroup.controls);\n    for (let i = 0; i < keys.length; i++) {\n      const control = formGroup.controls[keys[i]];\n\n      if (control instanceof FormControl) {\n        control.markAsTouched();\n      } else if (control instanceof FormGroup) {\n        this.markFormGroupTouched(control);\n      }\n    }\n  }\n}\n\n   openEdit(){\n     this.editOn=false;\n     this.formControlledEnable();\n     this.markFormGroupTouched(this.profileForm);\n     this.tempProfile = new Profile(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);\n     merge(this.tempProfile, this.returnedProfile);\n   }\n\n   cancel(){\n     this.returnedProfile = Object.assign({}, this.tempProfile);\n     this.editOn = true;\n     this.formControlledDisable();\n   }\n\n   save(){\n     if(this.validate()){\n       if (!this.isNullOrEmpty(this.returnedProfile.hotsLogsURL)){\n\n         this.hotsLogsService.getMMR(this.returnedProfile.hotsLogsURL).subscribe(res => {\n           if (res != 'error') {\n             this.returnedProfile.averageMmr = res;\n             this.user.saveUser(this.returnedProfile).subscribe((res) => {\n               if (res) {\n                 this.editOn = true;\n                 this.formControlledDisable();\n               } else {\n                 alert(\"error\");\n               }\n             });\n            }else{\n              alert('We could not validate your hots logs, please recheck the URL!');\n              this.cancel();\n            }\n\n         });\n       }else{\n         this.user.saveUser(this.returnedProfile).subscribe((res) => {\n           if (res) {\n             this.editOn = true;\n             this.formControlledDisable();\n           } else {\n             alert(\"error\");\n           }\n         });\n       }\n     }else{\n       console.log('the data was invalid we cant save');\n     }\n   }\n\n  ngOnInit() {    \n    let getProfile:string;\n    if(this.providedProfile){\n      getProfile = this.providedProfile;\n    }else if(this.displayName){\n      getProfile = this.displayName;\n    }\n    this.profSub = this.user.getUser(getProfile).subscribe((res) => { \n      merge(this.returnedProfile, res);\n      } )\n  }\n\n  validAvailTimes:boolean=false;\n  recieveAvailTimeValidity(event){\n    this.validAvailTimes = event;\n    if(event){\n      this.timesAvailControl.setErrors(null);\n    }else{\n      this.timesAvailControl.setErrors({ invalid: true });\n    }\n  }  \n\n  validate(){\n    let valid = true;\n    //validate the hotslogs URL\n    if (this.isNullOrEmpty(this.returnedProfile.hotsLogsURL) ||\n      this.returnedProfile.hotsLogsURL.indexOf('https://www.hotslogs.com/Player/Profile?PlayerID=') == -1){\n      valid = false;\n    }\n\n    //validate the hero leauge information\n    if (this.isNullOrEmpty(this.returnedProfile.hlRankMetal) && this.isNullOrEmpty(this.returnedProfile.hlRankDivision)){\n      valid = false;\n    }\n\n    //validate looking for team:\n    if (this.isNullOrEmpty(this.returnedProfile.lookingForGroup)) {\n      valid = false;\n    }\n\n    //will we require the comp level, play history, roles?\n\n    //validate that we have start and end times for available days\n    if(!this.validAvailTimes){\n      valid=false;\n      this.timesAvailControl.setErrors({invalid:true});\n    }else{\n      this.timesAvailControl.setErrors(null);\n    }\n\n    //ensure time zone\n    if (this.isNullOrEmpty(this.returnedProfile.timeZone)) {\n      valid = false;\n    }\n\n    return valid;\n  }\n\n  isNullOrEmpty( dat ) : boolean {\n    if(dat == null || dat == undefined){\n      return true;\n    }\n    if(Array.isArray(dat)){\n      if(dat.length==0){\n        return true;\n      }\n    }else if( typeof dat == 'object' ){\n      let noe = false;\n      for(let key in dat){\n        if(this.isNullOrEmpty(dat[key])){\n          noe = true;\n        }\n      }\n      return noe;\n    }else if(typeof dat == \"string\"){\n      return dat.length==0;\n    }else{\n      return false;\n    }\n  }\n\n  ngOnDestroy(){\n    this.profSub.unsubscribe();\n  }\n}\n","module.exports = \".checkboxMargin {\\n    margin-right: 20px;\\n}\\n\\n.removeClass {\\n    border-style: solid;\\n    padding: 3px;\\n    border-width: 2px;\\n}\\n\\n.tdClass {\\n    padding: 5px;\\n}\\n\\n.vertCentButton {\\n    margin-top: auto;\\n    margin-bottom: auto;\\n}\\n\\n.questionnaireWrapper {\\n    border-style: solid;\\n    padding: 25px;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"questionnaireWrapper\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <h3>Season 6 Registration / Questionnaire</h3>\\n            </div>\\n            <div class=\\\"col\\\">\\n                <button [disabled]=\\\"responses.registered\\\" (click)=\\\"save()\\\" class=\\\"btn btn-success\\\">Save Questionnaire</button>\\n            </div>\\n        </div>\\n        <div class=\\\"row mt-3\\\">\\n            <div class=\\\"col\\\">\\n                <h5>Team Name</h5>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"passedTeam.teamName\\\">\\n            <div class=\\\"col\\\">\\n                <mat-form-field class=\\\"mat-FullWidth\\\">\\n                    <input matInput placeholder=\\\"Team Name\\\" disabled=\\\"true\\\" value={{passedTeam.teamName}}>\\n                </mat-form-field>\\n            </div>\\n        </div>\\n        <div class=\\\"row mt-3\\\">\\n            <div class=\\\"col\\\">\\n                <h5>Did you or anyone on your team play in NGS last season?</h5>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <mat-radio-group [(ngModel)]='responses.lastSeason'>\\n                    <mat-radio-button class=\\\"checkboxMargin\\\" value=\\\"yes\\\">Yes</mat-radio-button>\\n                </mat-radio-group>\\n                <mat-radio-group [(ngModel)]='responses.lastSeason'>\\n                    <mat-radio-button class=\\\"checkboxMargin\\\" value=\\\"no\\\">No</mat-radio-button>\\n                </mat-radio-group>\\n            </div>\\n        </div>\\n        <!-- if the team did not play last season don't show these -->\\n        <div *ngIf=\\\"responses.lastSeason == 'yes'\\\">\\n            <div class=\\\"row mt-3\\\">\\n                <div class=\\\"col\\\">\\n                    <h5>If so, what team name did you play under?</h5>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <mat-form-field class=\\\"mat-FullWidth\\\">\\n                        <input matInput placeholder=\\\"Old team name\\\" [(ngModel)]=\\\"responses.oldTeam\\\">\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <div class=\\\"row mt-3\\\">\\n                <div class=\\\"col\\\">\\n                    <h5>What Div did you play in?</h5>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <mat-form-field class=\\\"mat-FullWidth\\\">\\n                        <input matInput placeholder=\\\"Old Division\\\" [(ngModel)]=\\\"responses.oldDivision\\\">\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <div class=\\\"row mt-3\\\">\\n                <div class=\\\"col\\\">\\n                    <h5>How many returning players do you have? Based on Season 5 NGS divisions, what level were they?</h5>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <mat-form-field class=\\\"mat-FullWidth\\\">\\n                        <input matInput placeholder=\\\"Returning players\\\" [(ngModel)]=\\\"responses.returningPlayers\\\">\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col\\\">\\n                    <mat-form-field class=\\\"mat-FullWidth\\\">\\n                        <input matInput placeholder=\\\"Returning players Div\\\" [(ngModel)]=\\\"responses.returningPlayersDiv\\\">\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <!-- div branch end -->\\n        </div>\\n\\n        <div class=\\\"row mt-3\\\">\\n            <div class=\\\"col\\\">\\n                <h5>Has your team played in any other competitions? At what level?</h5>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <mat-form-field class=\\\"mat-FullWidth\\\">\\n                    <input matInput placeholder=\\\"Other competitions\\\" [(ngModel)]=\\\"responses.otherLeagues\\\">\\n                </mat-form-field>\\n            </div>\\n        </div>\\n        <!-- didn't play ngs -->\\n        <div *ngIf=\\\"responses.lastSeason == 'no'\\\">\\n            <div class=\\\"row mt-3\\\">\\n                <div class=\\\"col\\\">\\n                    <h5>If you didn’t play in NGS last season, what do you feel the overall playing skill of your team is? (Bronze, Silver, Gold, Plat…...) </h5>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <mat-form-field class=\\\"mat-FullWidth\\\">\\n                        <input matInput placeholder=\\\"Skill level\\\" [(ngModel)]=\\\"responses.skillGuess\\\">\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n        <div class=\\\"row mt-3\\\">\\n            <div class=\\\"col\\\">\\n                <h5>Pick 9 maps for the NGS player 6 map pool.</h5>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"pickedMaps.length<9\\\">\\n            <div class=\\\"col\\\">\\n                <mat-form-field class=\\\"mat-FullWidth\\\">\\n                    <mat-select placeholder=\\\"Select a map:\\\" [(ngModel)]=\\\"selectedMap\\\" disableOptionCentering>\\n                        <mat-option *ngFor=\\\"let map of filterMaps()\\\" [value]=\\\"map\\\">{{map}}</mat-option>\\n                    </mat-select>\\n                </mat-form-field>\\n            </div>\\n            <div class=\\\"col\\\">\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"addMap(selectedMap)\\\">Select Map</button>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <h5>Selected Maps:</h5>\\n                <br>\\n                <div> </div>\\n                <table>\\n                    <tr *ngFor=\\\"let map of pickedMaps\\\">\\n                        <td class=\\\"tdClass\\\">\\n                            {{map}}\\n                        </td>\\n                        <td class=\\\"tdClass\\\">\\n                            <span class=\\\"finger removeClass bg-danger\\\" (click)=\\\"remove(map)\\\"> X </span>\\n                        </td>\\n                    </tr>\\n                </table>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row mt-3\\\">\\n            <div class=\\\"col\\\">\\n                <h5>What coastal division do you prefer? East, West, Either</h5>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <mat-radio-group [(ngModel)]='responses.eastWest'>\\n                    <mat-radio-button class=\\\"example-margin\\\" value=\\\"east\\\">East</mat-radio-button>\\n                </mat-radio-group>\\n            </div>\\n            <div class=\\\"col\\\">\\n                <mat-radio-group [(ngModel)]='responses.eastWest'>\\n                    <mat-radio-button class=\\\"example-margin\\\" value=\\\"west\\\">West</mat-radio-button>\\n                </mat-radio-group>\\n            </div>\\n            <div class=\\\"col\\\">\\n                <mat-radio-group [(ngModel)]='responses.eastWest'>\\n                    <mat-radio-button class=\\\"example-margin\\\" value=\\\"either\\\">Either</mat-radio-button>\\n                </mat-radio-group>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row mt-3\\\">\\n            <div class=\\\"col\\\">\\n                <h5>Season 6 Registration Check List</h5>\\n                <div>\\n                    <table>\\n                        <tr>\\n                            <td>\\n                                At least 5 members on team.\\n                            </td>\\n                            <td>\\n                                <span *ngIf=\\\"!checkTeamMates()\\\"><i class=\\\"material-icons text-danger\\\">close</i></span><span *ngIf=\\\"checkTeamMates()\\\" class=\\\"material-icons text-success\\\">check</span>\\n                            </td>\\n                        </tr>\\n                        <tr>\\n                            <td>Maps Picked for Pool</td>\\n                            <td><span *ngIf=\\\"pickedMaps.length!=9\\\"><i class=\\\"material-icons text-danger\\\">close</i></span><span *ngIf=\\\"pickedMaps.length==9\\\" class=\\\"material-icons text-success\\\">check</span></td>\\n                        </tr>\\n                        <tr>\\n                            <td>Season 6 Questionnaire Completed </td>\\n                            <td><span *ngIf=\\\"!checkQuestionnaire()\\\"><i class=\\\"material-icons text-danger\\\">close</i></span><span *ngIf=\\\"checkQuestionnaire()\\\" class=\\\"material-icons text-success\\\">check</span></td>\\n                        </tr>\\n\\n                    </table>\\n\\n                </div>\\n            </div>\\n            <div class=\\\"col vertCentButton\\\">\\n                <button [disabled]=\\\"!checkValid() || responses.registered\\\" (click)=\\\"completeRegistration()\\\" class=\\\"btn btn-info\\\">Register for Season 6!</button>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { TeamService } from '../services/team.service';\nimport { merge } from 'lodash';\nimport { UtilitiesService } from '../services/utilities.service';\n\n@Component({\n  selector: 'app-questionnaire',\n  templateUrl: './questionnaire.component.html',\n  styleUrls: ['./questionnaire.component.css']\n})\nexport class QuestionnaireComponent implements OnInit {\n\n  passedTeam: any = {};\n  responses: any = {};\n  pickedMaps: any[] = [];\n\n  constructor(private teamService: TeamService, private util:UtilitiesService) {  }\n  \n  @Input() set team(_team){\n    if(_team != undefined || _team != null){\n      this.passedTeam = _team;\n      if (_team.questionnaire != null && _team.questionnaire != undefined){\n        this.responses = _team.questionnaire\n        if (_team.questionnaire.pickedMaps != null && _team.questionnaire.pickedMaps != undefined){\n          this.pickedMaps = _team.questionnaire.pickedMaps\n        }\n      } \n    }\n  }\n\n  maps = {\n    ControlPoints: 'Sky Temple',\n    TowersOfDoom: 'Towers of Doom',\n    BattlefieldOfEternity: 'Battlefield of Eternity',\n    CursedHollow: 'Cursed Hollow',\n    DragonShire: 'Dragon Shire',\n    HauntedWoods: 'Garden of Terror',\n    Shrines: 'Infernal Shrines',\n    Crypts: 'Tomb of the Spider Queen',\n    Volskaya: 'Volskaya Foundry',\n    'Warhead Junction': 'Warhead Junction',\n    BraxisHoldout: 'Braxis Holdout',\n    Hanamura: 'Hanamura',\n    AlteracPass: 'Alterac Pass'\n  };\n\n  \n  selectedMap:string;\n  \n  \n\n  checkTeamMates(){\n    if(this.passedTeam && this.passedTeam.teamMembers){\n      if (this.passedTeam.teamMembers.length >= 5) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n\n  completeRegistration(){\n    if (this.checkTeamMates() && this.checkQuestionnaire() && this.pickedMaps.length == 9){\n      this.responses['pickedMaps'] = this.pickedMaps;\n      this.responses['registered']=true;\n      this.teamService.saveTeamQuestionnaire(this.passedTeam.teamName_lower, this.responses).subscribe(res => {\n        console.log(res);\n      }, err => {\n        console.log(err);\n      })\n    }else{\n      alert('you tricked me');\n    }\n  }\n\n  checkQuestionnaire(){\n      if(this.responses.lastSeason=='yes'){\n\n        return this.util.returnBoolByPath(this.responses, 'eastWest') &&\n          this.util.returnBoolByPath(this.responses, 'oldTeam') && \n          this.util.returnBoolByPath(this.responses, 'oldDivision') &&\n          this.util.returnBoolByPath(this.responses, 'returningPlayers') &&\n          this.util.returnBoolByPath(this.responses, 'returningPlayersDiv') &&\n          this.util.returnBoolByPath(this.responses, 'otherLeagues');\n\n      } else if (this.responses.lastSeason == 'no'){\n\n        return this.util.returnBoolByPath(this.responses, 'eastWest') &&\n          this.util.returnBoolByPath(this.responses, 'otherLeagues') &&\n          this.util.returnBoolByPath(this.responses, 'skillGuess')\n      \n      }else{\n        return false;\n      }\n  }\n\n  checkValid(){\n    return this.checkTeamMates() && this.checkQuestionnaire() && this.pickedMaps.length==9;\n  }\n\n  remove(map){\n   let ind = this.pickedMaps.indexOf(map);\n   this.pickedMaps.splice(ind, 1);\n  }\n\n  filterMaps(){\n    let returnArray = [];\n    let keys = Object.keys(this.maps);\n    keys.forEach(key=>{\n      if(this.pickedMaps.indexOf(this.maps[key])==-1){\n        returnArray.push(this.maps[key]);\n      }\n    });\n    return returnArray;\n  }\n\n  save(){\n    this.responses['pickedMaps']=this.pickedMaps;\n    this.teamService.saveTeamQuestionnaire(this.passedTeam.teamName_lower,this.responses).subscribe(res=>{\n      console.log(res);\n    },err=>{\n      console.log(err);\n    })\n  }\n\n  addMap(map){\n    this.pickedMaps.push(map);\n  }\n\n\n  ngOnInit() {\n\n  }\n\n}\n","module.exports = \".FullWidth {\\n    width: 100%;\\n}\\n\\n.invalid {\\n    color: red;\\n}\\n\\n.matchBox {\\n    border-left-style: solid;\\n    border-right-style: solid;\\n    border-width: 2px;\\n    border-top-style: solid;\\n    border-color: grey;\\n    padding: 25px;\\n}\\n\\n.matchBoxPadder {\\n    padding: 25px;\\n}\\n\\n.banBox {\\n    border-top-style: solid;\\n}\\n\\n.reportingDiv {\\n    border-style: solid;\\n    border-width: 2px;\\n    border-color: grey;\\n    padding: 10px;\\n}\\n\\n.m-t-20 {\\n    margin-top: 20px\\n}\\n\\n.m-t-10 {\\n    margin-top: 10px\\n}\\n\\n.m-t-5 {\\n    margin-top: 5px;\\n}\\n\\n.gameBorder {\\n    border-bottom-style: solid;\\n    padding-bottom: 10px;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row bg-white\\\">\\n        <div class=\\\"col\\\">\\n            <div class=\\\"row matchBoxPadder finger\\\" [ngClass]=\\\"{'matchBox':show}\\\" (click)=\\\"showHide()\\\">\\n                <div class=\\\"col\\\">\\n                    <div *ngIf=\\\"recMatch.home.teamName\\\">{{recMatch.home.teamName}}</div>\\n                </div>\\n                <div class=\\\"col\\\">\\n                    - VS -\\n                </div>\\n                <div class=\\\"col\\\">\\n                    <div *ngIf=\\\"recMatch.away.teamName\\\">{{recMatch.away.teamName}} <i *ngIf=\\\"!show\\\" class=\\\"float-right material-icons\\\">arrow_drop_down</i><i *ngIf=\\\"show\\\" class=\\\"float-right material-icons\\\">arrow_drop_up</i></div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row reportingDiv\\\" *ngIf=\\\"show\\\">\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"row m-t-20\\\">\\n                        <div class=\\\"col\\\">\\n                            Home Map Ban\\n                            <div class=\\\"row m-t-5\\\">\\n                                <div class=\\\"col\\\">\\n                                    <mat-select placeholder=\\\"Map \\\" [(ngModel)]=\\\"mapBans.home\\\">\\n                                        <mat-option *ngFor=\\\"let map of maps | keyvalue\\\" [value]=\\\"map.value\\\">{{map.value}}</mat-option>\\n                                    </mat-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col\\\">\\n\\n                        </div>\\n                        <div class=\\\"col\\\">\\n                            Away Map Ban\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col\\\">\\n                                    <mat-select placeholder=\\\"Map \\\" [(ngModel)]=\\\"mapBans.away\\\">\\n                                        <mat-option *ngFor=\\\"let map of maps | keyvalue\\\" [value]=\\\"map.value\\\">{{map.value}}</mat-option>\\n                                    </mat-select>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row gameBorder\\\" *ngFor=\\\"let game of games | keyvalue\\\">\\n\\n                        <div class=\\\"col\\\">\\n                            <div class=\\\"row m-t-20\\\">\\n                                <div class=\\\"col\\\">\\n                                    Game {{game.key}} <span *ngIf=\\\"!recMatch.reported\\\" (click)=\\\"removeGame(game.key, games)\\\"><i class=\\\"float-right material-icons\\\">close</i></span>\\n                                </div>\\n                            </div>\\n                            <!-- report hero bans -->\\n                            <div class=\\\"row m-t-10\\\">\\n                                <div class=\\\"col\\\">\\n                                    Home Hero Bans: <span *ngIf=\\\"game.value.homeBans.length == 3\\\"><i class=\\\"material-icons text-success\\\">done</i></span>\\n\\n                                    <div class=\\\"row m-t-5\\\" *ngIf=\\\"game.value.homeBans.length<3\\\">\\n                                        <div class=\\\" col \\\">\\n                                            <mat-select placeholder=\\\"Hero Banned \\\" [(ngModel)]=\\\"game.value.tmp.leftSelect \\\">\\n                                                <!-- heroes | keyvalue -->\\n                                                <mat-option *ngFor=\\\"let hero of returnFilteredHeroes(game)\\\" [value]=\\\"hero \\\">{{hero}}</mat-option>\\n                                            </mat-select>\\n                                        </div>\\n                                        <div class=\\\"col \\\">\\n                                            <button [disabled]=\\\"!game.value.tmp.leftSelect || recMatch.reported\\\" (click)=\\\"addBan(game.value.tmp.leftSelect, game.value.homeBans) \\\"> Add Ban </button>\\n\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"m-t-10 banBox\\\">\\n                                        <div *ngFor=\\\"let ban of game.value.homeBans\\\">{{ban}} <span *ngIf=\\\"!recMatch.reported\\\" (click)=\\\"removeBan(ban, game.value.homeBans)\\\"><i\\n                                                    class=\\\"float-right material-icons\\\">close</i></span></div>\\n                                    </div>\\n\\n                                </div>\\n                                <div class=\\\"col \\\">\\n                                    <!-- space holder -->\\n                                </div>\\n                                <div class=\\\"col \\\">\\n                                    Away Hero Bans: <span *ngIf=\\\"game.value.awayBans.length == 3\\\"><i class=\\\"material-icons text-success\\\">done</i></span>\\n\\n                                    <div class=\\\"row m-t-5 \\\" *ngIf=\\\"game.value.awayBans.length<3 \\\">\\n                                        <div class=\\\"col \\\">\\n                                            <mat-select placeholder=\\\"Hero Banned \\\" [(ngModel)]=\\\"game.value.tmp.rightSelect \\\">\\n                                                <!-- heroes | keyvalue -->\\n                                                <mat-option *ngFor=\\\"let hero of returnFilteredHeroes(game)  \\\" [value]=\\\"hero \\\">{{hero}}</mat-option>\\n                                            </mat-select>\\n                                        </div>\\n                                        <div class=\\\"col\\\">\\n                                            <button [disabled]=\\\"!game.value.tmp.rightSelect || recMatch.reported\\\" (click)=\\\"addBan(game.value.tmp.rightSelect, game.value.awayBans) \\\">Add Ban </button>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"banBox m-t-10\\\">\\n                                        <div *ngFor=\\\"let ban of game.value.awayBans \\\">{{ban}}<span *ngIf=\\\"!recMatch.reported\\\" (click)=\\\"removeBan(ban, game.value.awayBans) \\\"><i\\n                                                    class=\\\"float-right material-icons \\\">close</i></span></div>\\n                                    </div>\\n\\n                                </div>\\n                            </div>\\n                            <!-- report match winner -->\\n                            <div class=\\\"row m-t-20 \\\">\\n                                <div class=\\\"col \\\">\\n                                    Who won this game? <span *ngIf=\\\"game.value.winner\\\"><i class=\\\"material-icons text-success\\\">done</i></span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row m-t-5 \\\">\\n                                <div class=\\\"col \\\">\\n                                    <mat-radio-group [(ngModel)]='game.value.winner'>\\n                                        <mat-radio-button class=\\\"example-margin\\\" [disabled]=\\\"recMatch.reported\\\" value=\\\"home\\\">Home</mat-radio-button>\\n                                    </mat-radio-group>\\n                                </div>\\n                                <div class=\\\"col \\\">\\n\\n                                </div>\\n                                <div class=\\\"col \\\">\\n                                    <mat-radio-group [(ngModel)]='game.value.winner'>\\n                                        <mat-radio-button class=\\\"example-margin\\\" [disabled]=\\\"recMatch.reported\\\" value=\\\"away\\\">Away</mat-radio-button>\\n                                    </mat-radio-group>\\n                                </div>\\n                            </div>\\n                            <!-- match replay -->\\n                            <div class=\\\"row m-t-20\\\" *ngIf=\\\"!recMatch.reported\\\">\\n                                <div class=\\\"col\\\" *ngIf=\\\"!game.value.replay else fileReported\\\">\\n                                    Select file*:\\n                                    <input type=\\\"file\\\" ngf accept=\\\".StormReplay\\\" [(file)]=\\\"game.value.replay\\\">\\n                                </div>\\n                                <ng-template #fileReported>\\n                                    <div class=\\\"col-7\\\">\\n                                        {{game.value.replay.name}} <span *ngIf=\\\"game.value.replay\\\"><i class=\\\"material-icons text-success\\\">done</i></span>\\n                                    </div>\\n                                    <div class=\\\"col-2\\\">\\n                                        <span class=\\\"float-right finger\\\" (click)=\\\"resetReplay(game)\\\"><i class=\\\"material-icons\\\">close</i> Remove</span>\\n                                    </div>\\n                                </ng-template>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row m-t-20\\\">\\n                        <div class=\\\"col\\\" *ngIf=\\\"showAdd && !recMatch.reported\\\">\\n                            <button class=\\\"btn btn-primary\\\" (click)=\\\"addGame() \\\">Add Game</button>\\n                        </div>\\n                        <div class=\\\"col\\\" *ngIf=\\\"showReport\\\">\\n                            <button class=\\\"btn btn-success\\\" (click)=\\\"report() \\\">Report Match!</button>\\n                        </div>\\n                    </div>\\n\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ngf } from 'angular-file';\nimport { ScheduleService } from 'src/app/services/schedule.service';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { UtilitiesService } from 'src/app/services/utilities.service';\nimport { element } from '@angular/core/src/render3/instructions';\n\n@Component({\n  selector: 'app-reporting-deck',\n  templateUrl: './reporting-deck.component.html',\n  styleUrls: ['./reporting-deck.component.css']\n})\nexport class ReportingDeckComponent implements OnInit {\n   \n  hideButton:boolean=false;\n  recMatch\n  @Input() set match(match){\n    if(match!=null && match != undefined){\n      console.log(match);\n      this.recMatch = match;\n    }\n    if(this.recMatch.other != null && this.recMatch.mapBans != undefined){\n      this.games = this.recMatch.other;\n    }\n    if(this.recMatch.mapBans != null && this.recMatch.mapBans != undefined){\n      this.mapBans = this.recMatch.mapBans;\n    }\n    \n    if(this.recMatch.reported){\n      this.hideButton = true;\n      this.formControlsDisable();\n      \n    }\n  }\n  constructor(private scheduleService: ScheduleService, private util: UtilitiesService) { }\n    \n  maps = {\n  ControlPoints: 'Sky Temple',\n  TowersOfDoom: 'Towers of Doom',\n  HauntedMines: 'Haunted Mines',\n  BattlefieldOfEternity: 'Battlefield of Eternity',\n  BlackheartsBay: \"Blackheart's Bay\",\n  CursedHollow: 'Cursed Hollow',\n  DragonShire: 'Dragon Shire',\n  HauntedWoods: 'Garden of Terror',\n  Shrines: 'Infernal Shrines',\n  Crypts: 'Tomb of the Spider Queen',\n  Volskaya: 'Volskaya Foundry',\n  'Warhead Junction': 'Warhead Junction',   // blizz why\n  BraxisHoldout: 'Braxis Holdout',\n  Hanamura: 'Hanamura',\n  AlteracPass: 'Alterac Pass'\n};\n\nremoveBan(hero, arr){\n  let ind = arr.indexOf(hero);\n  if(ind!=-1){\n    arr = arr.splice(ind, 1);\n  }\n}\n  \n  mapBans = {\n    away:'',\n    home:''\n  };\n  games = {};\n  showAdd:boolean = true;\n  showReport:boolean = false;\n  addGame(){\n    let keys = Object.keys(this.games);\n    if(keys.length<3){\n      this.games[(keys.length + 1).toString()] = {\n        homeBans: [],\n        awayBans: [],\n        winner: '',\n        replay: '',\n        tmp: {}\n      };\n    }\n    if (keys.length >= 1) {\n      this.showReport = true;\n    }\n    if(keys.length>=2){\n      this.showAdd=false;\n    }\n\n    console.log(this.games);\n  }\n\n  returnFilteredHeroes(game){\n    let disArr = [];\n    let currentArr = game.value.homeBans.concat(game.value.awayBans);\n    let keys = Object.keys(this.heroes);\n    keys.forEach(element=>{\n      let heroName = this.heroes[element];\n      if(currentArr.indexOf(heroName)==-1){\n        disArr.push(this.heroes[element]);\n      }\n    });\n    return disArr;\n  }\n\n  heroes = {\n    \"Abat\": \"Abathur\",\n    \"Alar\": \"Alarak\",\n    \"Alex\": \"Alexstrasza\",\n    \"HANA\": \"Ana\",\n    \"Anub\": \"Anub'arak\",\n    \"Arts\": \"Artanis\",\n    \"Arth\": \"Arthas\",\n    \"Auri\": \"Auriel\",\n    \"Azmo\": \"Azmodan\",\n    \"Fire\": \"Blaze\",\n    \"Faer\": \"Brightwing\",\n    \"Amaz\": \"Cassia\",\n    \"Chen\": \"Chen\",\n    \"CCho\": \"Cho\",\n    \"Chro\": \"Chromie\",\n    \"DECK\": \"Deckard\",\n    \"Deha\": \"Dehaka\",\n    \"Diab\": \"Diablo\",\n    \"DVA0\": \"D.Va\",\n    \"L90E\": \"E.T.C.\",\n    \"Fals\": \"Falstad\",\n    \"FENX\": \"Fenix\",\n    \"Gall\": \"Gall\",\n    \"Garr\": \"Garrosh\",\n    \"Tink\": \"Gazlowe\",\n    \"Genj\": \"Genji\",\n    \"Genn\": \"Greymane\",\n    \"Guld\": \"Gul'dan\",\n    \"Hanz\": \"Hanzo\",\n    \"Illi\": \"Illidan\",\n    \"Jain\": \"Jaina\",\n    \"Crus\": \"Johanna\",\n    \"Junk\": \"Junkrat\",\n    \"Kael\": \"Kael'thas\",\n    \"KelT\": \"Kel'Thuzad\",\n    \"Kerr\": \"Kerrigan\",\n    \"Monk\": \"Kharazim\",\n    \"Leor\": \"Leoric\",\n    \"LiLi\": \"Li Li\",\n    \"Wiza\": \"Li-Ming\",\n    \"Medi\": \"Lt. Morales\",\n    \"Luci\": \"Lucio\",\n    \"Drya\": \"Lunara\",\n    \"Maie\": \"Maiev\",\n    \"Malf\": \"Malfurion\",\n    \"Malg\":\"Mal'Ganis\",\n    \"MALT\": \"Malthael\",\n    \"Mdvh\": \"Medivh\",\n    \"Mura\": \"Muradin\",\n    \"Murk\": \"Murky\",\n    \"Witc\": \"Nazeebo\",\n    \"Nova\": \"Nova\",\n    \"Oprh\":\"Orphea\",\n    \"Prob\": \"Probius\",\n    \"Ragn\": \"Ragnaros\",\n    \"Rayn\": \"Raynor\",\n    \"Rehg\": \"Rehgar\",\n    \"Rexx\": \"Rexxar\",\n    \"Samu\": \"Samuro\",\n    \"Sgth\": \"Sgt. Hammer\",\n    \"Barb\": \"Sonya\",\n    \"Stit\": \"Stitches\",\n    \"STUK\": \"Stukov\",\n    \"Sylv\": \"Sylvanas\",\n    \"Tass\": \"Tassadar\",\n    \"Butc\": \"The Butcher\",\n    \"Lost\": \"The Lost Vikings\",\n    \"Thra\": \"Thrall\",\n    \"Tra0\": \"Tracer\",\n    \"Tych\": \"Tychus\",\n    \"Tyrl\": \"Tyrael\",\n    \"Tyrd\": \"Tyrande\",\n    \"Uthe\": \"Uther\",\n    \"VALE\": \"Valeera\",\n    \"Demo\": \"Valla\",\n    \"Vari\": \"Varian\",\n    \"Necr\": \"Xul\",\n    \"YREL\": \"Yrel\",\n    \"Zaga\": \"Zagara\",\n    \"Zary\": \"Zarya\",\n    \"Zera\": \"Zeratul\",\n    \"ZULJ\": \"Zul'jin\"\n  }\n\naddBan(hero, arr){\n  arr.push(hero);\n  hero=null;\n}\n\nresetReplay(game){\n  game.value.replay=null;\n}\n\n  formControlsDisable(){\n    this.awayScoreControl.disable();\n    this.homeScoreControl.disable();\n    this.replay1Control.disable();\n    this.replay2Control.disable();\n  }\n\n  hideReplaySubmit(){\n    if(this.recMatch.replays){\n      return false;\n    }else{\n      return true;\n    }\n    \n  }\n\n  removeGame(game, games){\n    delete games[game];\n  }\n\n  awayScoreControl = new FormControl('', [\n    Validators.required\n  ]);\n  homeScoreControl = new FormControl('', [\n    Validators.required\n  ]);\n  replay1Control = new FormControl('', [\n    Validators.required\n  ]); \n  replay2Control = new FormControl('', [\n    Validators.required\n  ]);\n  replay3Control = new FormControl('', [\n    Validators.required\n  ]);\n\n  reportForm = new FormGroup({\n    awayScore: this.awayScoreControl,\n    homeScore: this.homeScoreControl,\n    replay1: this.replay1Control,\n    replay2: this.replay2Control\n  })\n\n  ngOnInit() {\n    this.util.markFormGroupTouched(this.reportForm);\n  }\n\n  homeScore: number\n  awayScore: number\n  replay1:any\n  replay2:any\n  replay3:any\n\n  thirdReplayRequired:boolean = false;\n\n  scoreSelected(changed) {\n   if(this.homeScore + this.awayScore > 2){\n     this.thirdReplayRequired = true;\n   }else{\n     this.thirdReplayRequired = false;\n     this.replay3 = null;\n   }\n  }\n\n  scoreError:string ='';\n  disableSubmit():boolean{\n    let disable = true;\n\n    if(this.homeScore == 2){\n      if(this.awayScore <= 1){\n        disable = false;\n        this.scoreError = '';\n      }else{\n        disable = true;\n        this.scoreError = 'Invalid Score';\n      }\n    }else if(this.homeScore == 1){\n      if(this.awayScore == 2){\n        disable = false;\n        this.scoreError = '';\n      }else{\n        disable = true;\n        this.scoreError = 'Invalid Score';\n      }\n    }else if(this.homeScore == 0){\n      if(this.awayScore == 2){\n        disable = false;\n        this.scoreError = '';\n      }else{\n        disable = true;\n        this.scoreError = 'Invalid Score';\n      }\n    }\n\n    if (this.thirdReplayRequired) {\n      if (this.homeScore != null && this.awayScore != null && this.replay1 != null && this.replay2 != null && this.replay3 != null) {\n        disable = false;\n      }else{\n        disable = true;\n      }\n    } else {\n      if (this.homeScore != null && this.awayScore != null && this.replay1 != null && this.replay2 != null) {\n        disable = false;\n      }else{\n        disable = true;\n      }\n    }\n    \n    return disable;\n  }\n\n  parseFile(replays){\n    console.log(replays);\n  }\n\n  show:boolean=false;\n\n  showHide(){\n    this.show = !this.show;\n  }\n\n  report() {  \n\n    let submittable = true;\n\n    let report = {\n      matchId:this.recMatch.matchId,\n      homeTeamScore:0,\n      awayTeamScore:0\n    };\n    let otherData = {};\n    console.log(this.games);\n    let keys = Object.keys(this.games);\n    keys.forEach(key => {\n      let game = this.games[key];\n      if(game.winner == 'home'){\n        report.homeTeamScore+=1;\n      }else if(game.winner == 'away'){\n        report.awayTeamScore+=1;\n      }else{\n        submittable = false;\n        alert('Game ' + key + ' winner is not selected, can not submit.');\n      }\n\n      if (game.replay == null && game.replay == undefined){\n        submittable=false;\n        alert( 'Game '+key+' replay is not attached, can not submit.' );\n      }\n      report['replay'+key.toString()]=game.replay;\n\n      let gamenum = key.toString();\n      if(game.homeBans.length<3){\n        alert('Game ' + key + ' home bans is not filled, can not submit.');\n        submittable = false\n      }\n      if (game.awayBans.length < 3) {\n        alert('Game ' + key + ' away bans is not filled, can not submit.');\n        submittable = false\n      }\n      otherData[gamenum]={\n        awayBans:game.awayBans,\n        homeBans:game.homeBans,\n        winner : game.winner\n      }\n    });\n\n    if (report.homeTeamScore == 1 && report.awayTeamScore == 1 || report.awayTeamScore == 1 && report.homeTeamScore == 1){\n      submittable = false;\n      alert('This out come is not allowed, matches must end 2-0 or 2-1');\n    }\n\n    report['otherDetails']=JSON.stringify(otherData);\n    report['mapBans']=JSON.stringify(this.mapBans);\n\n    console.log('report ', report);\n\n    if(submittable){\n      this.scheduleService.reportMatch(report).subscribe( res=>{\n        console.log(res);\n        this.recMatch.reported = true;\n        this.showReport = false;\n      })\n    }  \n\n  }\n\n}\n","module.exports = \".matchBoxPadder {\\n    padding: 25px;\\n}\"","module.exports = \"<div class=\\\"container pt-4\\\">\\n    <div class=\\\"row bg-white forceFull\\\">\\n        <div class=\\\"col\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <h2>Match Reporting:</h2>\\n                </div>\\n            </div>\\n            <div class=\\\"fillUpDeadSpace\\\" *ngIf=\\\"noMatches else showMatches\\\">\\n                <div class=\\\"row mt-3\\\">\\n                    <div class=\\\"col text-center\\\">\\n                        <h5>Your team doesn't currently have any matches generated by the system</h5>\\n                        <h6> Check back later! </h6>\\n                    </div>\\n                </div>\\n            </div>\\n            <ng-template #showMatches>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        Home Team\\n                    </div>\\n                    <div class=\\\"col\\\">\\n\\n                    </div>\\n                    <div class=\\\"col\\\">\\n                        Away Team\\n                    </div>\\n                </div>\\n                <div class=\\\"row mt-2\\\" *ngFor=\\\"let round of rounds | keyvalue\\\">\\n                    <div class=\\\"col\\\">\\n                        <h4>Week: {{round.key}}</h4>\\n                        <div *ngIf=\\\"round.value.length>0 else bye\\\">\\n                            <div class=\\\"row\\\" *ngFor=\\\"let match of round.value\\\">\\n                                <div class=\\\"col\\\">\\n                                    <app-reporting-deck [match]=\\\"match\\\"></app-reporting-deck>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n            </ng-template>\\n        </div>\\n    </div>\\n</div>\\n<ng-template #bye>\\n    <div class=\\\"row mt-2 matchBoxPadder\\\">\\n        <div class=\\\"col text-center\\\">\\n            <span>BYE</span>\\n        </div>\\n    </div>\\n</ng-template>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ScheduleService } from '../services/schedule.service';\nimport { AuthService } from '../services/auth.service';\nimport { TeamService } from '../services/team.service';\n\n@Component({\n  selector: 'app-reporting',\n  templateUrl: './reporting.component.html',\n  styleUrls: ['./reporting.component.css']\n})\nexport class ReportingComponent implements OnInit {\n\n  recTeam\n  constructor(private Auth: AuthService, private teamService:TeamService, private route: ActivatedRoute, private scheduleService: ScheduleService) {\n    if (this.route.snapshot.params['id']) {\n      this.recTeam = this.route.snapshot.params['id'];\n    }\n  }\n  rounds:any\n  noMatches: Boolean;\n  ngOnInit() {\n    let getTeam;\n    if (this.recTeam) {\n      getTeam = this.recTeam;\n      getTeam = this.teamService.realTeamName(getTeam);\n    } else {\n      getTeam = this.Auth.getTeam()\n    }\n\n    \n    this.scheduleService.getTeamSchedules(6, getTeam).subscribe(\n      res => {\n        let matches = res;\n        if(matches.length == 0){\n          this.noMatches = true;\n        }else{\n          this.noMatches = false;\n        }\n        for (var i = 0; i <= matches.length; i++) {\n          if (this.rounds == null || this.rounds == undefined) {\n            this.rounds = {};\n          }\n          \n          let realMatchNumber = i+1;\n          this.rounds[realMatchNumber.toString()]=[];\n          matches.forEach(match => {\n            if (match.round == realMatchNumber) {\n              if (this.rounds[realMatchNumber.toString()] == null || this.rounds[realMatchNumber.toString()] == undefined) {\n                this.rounds[realMatchNumber.toString()] = [];\n              }\n              this.rounds[realMatchNumber.toString()].push(match);\n            }\n          });\n\n        }\n        this.rounds;\n      },\n      err => { console.log(err) }\n    )\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container pt-4 forceFull\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div *ngIf=\\\"checkDate()\\\" class=\\\"row\\\">\\n                <div class=\\\"col text-center text-danger\\\">\\n\\n                    This match was not scheduled before it's schedule due date!\\n                    <div> Please contact an admin</div>\\n\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row\\\" *ngIf=\\\"match\\\">\\n                <div class=\\\"col\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col\\\">\\n                            Week {{match.round}}\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row mt-2\\\">\\n                        <div class=\\\"col text-center\\\">\\n                            <div *ngIf=\\\"match.home.teamName\\\">{{match.home.teamName}}</div>\\n                        </div>\\n                        <div class=\\\"col text-center\\\">\\n                            - VS -\\n                        </div>\\n                        <div class=\\\"col text-center\\\">\\n                            <div *ngIf=\\\"match.away.teamName; else bye\\\">{{match.away.teamName}}</div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n\\n            <div class=\\\"row mt-4\\\">\\n                <div class=\\\"col-6\\\">\\n                    <mat-form-field class=\\\"mat-FullWidth\\\">\\n                        <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" [(ngModel)]=\\\"mydate\\\">\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #picker></mat-datepicker>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col-6\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col\\\">\\n                            <mat-form-field class=\\\"mat-FullWidth\\\">\\n                                <mat-select placeholder=\\\"Start Time:\\\" [(ngModel)]=\\\"time\\\">\\n                                    <mat-option *ngFor=\\\"let time of times\\\" [value]=\\\"time\\\">\\n                                        {{time}}\\n                                    </mat-option>\\n                                </mat-select>\\n                                <mat-hint>Times are localized</mat-hint>\\n                            </mat-form-field>\\n                        </div>\\n                        <div class=\\\"col\\\">\\n                            <mat-form-field class=\\\"mat-FullWidth\\\">\\n                                <mat-select placeholder=\\\"AM/PM:\\\" [(ngModel)]=\\\"suffix\\\">\\n                                    <mat-option *ngFor=\\\"let suffix of amPm\\\" [value]=\\\"suffix\\\">\\n                                        {{suffix}}\\n                                    </mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                        </div>\\n                    </div>\\n\\n\\n                </div>\\n            </div>\\n            <div class=\\\"row mt-2\\\">\\n                <div class=\\\"col text-center\\\">\\n                    <button [disabled]=\\\"checkDate()\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"saveSched()\\\">Save</button>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ScheduleService } from 'src/app/services/schedule.service';\n\n\n@Component({\n  selector: 'app-match-schedule',\n  templateUrl: './match-schedule.component.html',\n  styleUrls: ['./match-schedule.component.css']\n})\nexport class MatchScheduleComponent implements OnInit {\n\n  //component properties\n  matchId //local prop to hold match Id recieved from route\n  mydate = new Date();  //local prop that holds the selected date by user from the calendar \n  time: any //local prop that hold the selected time from user\n  suffix: any //local prop for selected AM/PM suffix\n  times: any[] = [];  //local array that is populated progromatticaly to give users a drop down of times on 15 min interval to select\n  match: any;  //local prop for holding the returned match\n  homeScore: number //local prop for scores\n  awayScore: number //local prop for scores\n  amPm = ['PM', 'AM']; //local propery holds array for the am/pm dropdown\n\n  constructor(private route: ActivatedRoute, private scheduleService:ScheduleService, private router:Router) {\n    //get the id provided in the URL route\n    this.matchId = this.route.snapshot.params['id'];\n   }\n\n  \n\n \n  ngOnInit() {\n    //get the match from the ID we receieved\n    this.scheduleService.getMatchInfo(6, this.matchId).subscribe(\n      res=>{ \n        //assign the result to local prop match\n        this.match = res;\n       },\n      err=>{ console.log(err) }\n    )\n    //build out the selectable times for the user, in 15 min intervals\n    for(let i=1; i < 13; i++){\n      for(let j=0;j<=3;j++){\n        let min:any = j*15;\n        if(min==0){\n          min = '00';\n        }\n        let time = i+\":\"+min;\n        this.times.push(time);\n      }\n    }\n\n  }\n\n  checkDate() {\n    let todayDate = new Date().getTime();\n    let ret = false;\n    if (this.match['scheduleDeadline']) {\n      let intDate = parseInt(this.match['scheduleDeadline']);\n\n      if (todayDate > intDate) {\n        ret = true;\n      }\n    }\n    return ret;\n  }\n\n  //function from click to save schedule\n  saveSched(){\n    //calculate the millisecond date of the scheduled start of the match cause that's easy to save.\n    //TODO: this might go into a service because I think it's used other places\n    let years = this.mydate.getFullYear();\n    let month = this.mydate.getMonth();\n    let day = this.mydate.getDate();\n    \n    let colonSplit = this.time.split(':');\n    \n    colonSplit[1]=parseInt(colonSplit[1]);\n    \n    if(this.suffix == 'PM'){\n      colonSplit[0] = parseInt(colonSplit[0]);\n      colonSplit[0]+=12;\n    }\n    \n    let setDate = new Date();\n    setDate.setFullYear(years);\n    setDate.setMonth(month);\n    setDate.setDate(day);\n    setDate.setHours(colonSplit[0]);\n    setDate.setMinutes(colonSplit[1]);\n    \n    let msDate = setDate.getTime();\n    let endDate = msDate + 5400000;\n    \n    this.scheduleService.scheduleMatchTime(this.match.matchId, msDate, endDate).subscribe(\n      res=>{\n        //TODO: will i need to implement a route here?\n        this.router.navigateByUrl('/schedule/teamSchedule');\n      },\n      err=>{\n        console.log(err)\n      }\n    )\n\n  }\n\n}\n","module.exports = \".vertical-middle {\\n    margin-top: auto;\\n    margin-bottom: auto;\\n}\"","module.exports = \"<div class=\\\"container pt-4\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div class=\\\"row\\\" *ngIf=\\\"!this.provDiv; else provDiv\\\">\\n                <div class=\\\"col\\\">\\n                    <mat-form-field>\\n                        <mat-select placeholder=\\\"Division:\\\" [(ngModel)]=\\\"selectedDivision\\\" (ngModelChange)=\\\"calculateRounds()\\\" disableOptionCentering>\\n                            <mat-option *ngFor=\\\"let division of divisions; let i = index\\\" [value]=\\\"division\\\">{{division.displayName}}</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n                <div class=\\\"col\\\">\\n                    <mat-form-field>\\n                        <mat-select placeholder=\\\"Round:\\\" [(ngModel)]=\\\"selectedRound\\\" (ngModelChange)=\\\"getMatches()\\\" disableOptionCentering>\\n                            <mat-option *ngFor=\\\"let round of rounds; let i = index\\\" [value]=\\\"round\\\">{{round}}</mat-option>\\n                        </mat-select>\\n                    </mat-form-field>\\n                </div>\\n            </div>\\n            <ng-template #provDiv>\\n                <div class=\\\"row\\\" *ngIf=\\\"rounds.length>0\\\">\\n                    <div>\\n                        <div class=\\\"col\\\">\\n                            <mat-form-field>\\n                                <mat-select placeholder=\\\"Round:\\\" [(ngModel)]=\\\"selectedRound\\\" (ngModelChange)=\\\"getMatches()\\\" disableOptionCentering>\\n                                    <mat-option *ngFor=\\\"let round of rounds; let i = index\\\" [value]=\\\"round\\\">{{round}}</mat-option>\\n                                </mat-select>\\n                            </mat-form-field>\\n                        </div>\\n                    </div>\\n                    <!-- <div class=\\\"fillUpDeadSpace\\\" *ngIf=\\\"!selectedRound\\\"></div> -->\\n                </div>\\n            </ng-template>\\n            <!-- else noMatches -->\\n            <div *ngIf=\\\"matches.length>0 else noMatch\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                        <h2>Matches</h2>\\n                    </div>\\n                </div>\\n                <div class=\\\"row mt-3\\\" *ngFor=\\\"let match of matches\\\">\\n                    <div class=\\\"col\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-5\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col\\\">\\n                                        <img class=\\\"img-fluid\\\" src=\\\"{{team.imageFQDN(match.home.logo)}}\\\" width=\\\"150\\\" alt=\\\"Team Logo\\\">\\n                                    </div>\\n                                    <div class=\\\"col vertical-middle\\\">\\n                                        <div *ngIf=\\\"match.home.teamName\\\">{{match.home.teamName}}</div>\\n\\n                                    </div>\\n                                    <div class=\\\"col vertical-middle\\\">\\n                                        <span> {{match.home.wins}} - {{match.home.losses}} </span>\\n                                    </div>\\n                                </div>\\n\\n                            </div>\\n                            <div class=\\\"col-2 vertical-middle\\\">\\n                                - VS -\\n                            </div>\\n                            <div class=\\\"col-5\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col vertical-middle\\\">\\n                                        <span> {{match.away.wins}} - {{match.away.losses}} </span>\\n                                    </div>\\n                                    <div class=\\\"col vertical-middle\\\">\\n                                        <div *ngIf=\\\"match.away.teamName; else bye\\\">{{match.away.teamName}}</div>\\n                                    </div>\\n                                    <div class=\\\"col\\\">\\n                                        <img class=\\\"img-fluid\\\" src=\\\"{{team.imageFQDN(match.away.logo)}}\\\" width=\\\"150\\\" alt=\\\"Team Logo\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col\\\">\\n\\n                            </div>\\n                            <div class=\\\"col-7 text-center\\\">\\n                                Scheduled Time: <span *ngIf=\\\"match.scheduledTime else tbd\\\">{{match.friendlyDate}} - {{match.friendlyTime}} {{match.suffix}}</span>\\n                                <ng-template #tbd><span> TBD </span></ng-template>\\n                            </div>\\n                            <div class=\\\"col\\\">\\n\\n                            </div>\\n                        </div>\\n                        <div class=\\\"row\\\" *ngIf=\\\"match.casterName && match.casterUrl\\\">\\n                            <div class=\\\"col\\\"></div>\\n                            <div class=\\\"col-7 text-center\\\">\\n                                <span> Casted by:</span> {{match.casterName}} : <a href=\\\"{{util.prePendHttp(match.casterUrl)}}\\\" target=\\\"_blank\\\">{{match.casterUrl}}</a>\\n                            </div>\\n                            <div class=\\\"col\\\"></div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<ng-template #bye>\\n    BYE\\n</ng-template>\\n<ng-template #noMatch>\\n    <div>No matches currently for this round!</div>\\n</ng-template>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { DivisionService } from 'src/app/services/division.service';\nimport { ScheduleService } from 'src/app/services/schedule.service';\nimport { TeamService } from 'src/app/services/team.service';\nimport { StandingsService } from 'src/app/services/standings.service';\nimport { UtilitiesService } from 'src/app/services/utilities.service';\n\n@Component({\n  selector: 'app-schedule-view',\n  templateUrl: './schedule-view.component.html',\n  styleUrls: ['./schedule-view.component.css']\n})\nexport class ScheduleViewComponent implements OnInit {\n\n  constructor(private divisionService: DivisionService, private standingsService:StandingsService, private scheduleService: ScheduleService, public team: TeamService, public util:UtilitiesService) { }\n  divisions:any=[];\n  standings:any[]=[];\n\n  ngOnInit() {\n    if (this.provDiv == undefined && this.provDiv == null) {\n      this.divisionService.getDivisionInfo().subscribe((res) => {\n        this.divisions = res;\n      }, (err) => {\n        console.log(err);\n      })\n    }\n  }\n\n  provDiv\n\n  @Input() set division(div){\n    if(div!=undefined && div != null){\n      this.provDiv = div;\n      this.calculateRounds();\n    }\n  }\n\n  matches:any[]=[];\n  selectedDivision:any\n  rounds: number[] = [];\n  \n  calculateRounds() {\n    let roundNumber = 0;\n    if (this.provDiv != undefined && this.provDiv != null && this.provDiv.teams != undefined && this.provDiv.teams != null) {\n      if(this.provDiv % 2 == 0){\n        roundNumber = this.provDiv.teams.length - 1;\n      }else{\n        roundNumber = this.provDiv.teams.length;\n      }\n      \n    } else if (this.selectedDivision != null && this.selectedDivision != undefined && this.selectedDivision.teams != undefined && this.selectedDivision.teams != null){\n      roundNumber = this.selectedDivision.teams.length - 1;\n    }\n    this.rounds = [];\n    this.matches=[];\n    if (roundNumber == 0){\n      roundNumber = 1;\n    }\n    for (let i = 0; i < roundNumber; i++) {\n      this.rounds.push(i + 1);\n    }\n  }\n\n  selectedRound:number\n  getMatches(){\n    let div;\n    if(this.provDiv!=undefined&&this.provDiv!=null){\n      div=this.provDiv.divisionConcat;\n    }else{\n      div = this.selectedDivision.divisionConcat;\n    }\n\n    let season = 6;\n    this.scheduleService.getScheduleMatches(season, div, this.selectedRound).subscribe(\n      res=>{\n        this.matches = res; \n        this.standingsService.getStandings(this.provDiv.divisionConcat).subscribe(\n          res => {\n            this.standings = res;\n            this.matches.forEach(match => {\n          this.standings.forEach(standing=>{\n            if (match.home.teamName == standing.teamName){\n              match.home['losses']=standing.losses;\n              match.home['wins']=standing.wins;\n            }\n            if(match.away.teamName == standing.teamName){\n              match.away['losses'] = standing.losses;\n              match.away['wins'] = standing.wins;\n            }\n          });\n          if(match.scheduledTime){\n            match['friendlyDate'] = this.util.getDateFromMS(match.scheduledTime.startTime);\n            match['friendlyTime']=this.util.getTimeFromMS(match.scheduledTime.startTime);\n            match['suffix'] = this.util.getSuffixFromMS(match.scheduledTime.startTime);\n          }\n          },\n          err => {\n            console.log(err);\n          }\n        ) \n        });\n      },\n      err=>{ console.log(err)}\n    )\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container pt-4\\\">\\n    <div class=\\\"row forceFull\\\">\\n        <div class=\\\"col\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <h2>Matches</h2>\\n                </div>\\n            </div>\\n            <div class=\\\"fillUpDeadSpace\\\" *ngIf=\\\"noMatches else showMatches\\\">\\n                <div class=\\\"row mt-3\\\">\\n                    <div class=\\\"col text-center\\\">\\n                        <h5>Your team doesn't currently have any matches generated by the system</h5>\\n                        <h6> Check back later! </h6>\\n                    </div>\\n                </div>\\n            </div>\\n            <ng-template #showMatches>\\n                <div class=\\\"row mt-2\\\" *ngFor=\\\"let round of rounds | keyvalue\\\">\\n                    <div class=\\\"col\\\">\\n                        <h4>Week: {{round.key}}</h4>\\n                        <div *ngIf=\\\"round.value.length>0 else bye\\\">\\n                            <div class=\\\"row mt-3\\\" *ngFor=\\\"let match of round.value\\\">\\n                                <div class=\\\"col\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col text-center text-warning\\\">\\n                                            Scheduling Deadline:\\n                                            <span *ngIf=\\\"match.friendlyDeadline else freeGame\\\">{{match.friendlyDeadline}}</span>\\n                                            <ng-template #freeGame> Open Game or No Deadline Set Yet </ng-template>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"row mt-3\\\">\\n                                        <div class=\\\"col-5\\\">\\n                                            <div class=\\\"row\\\">\\n                                                <div class=\\\"col\\\">\\n                                                    <img class=\\\"img-fluid\\\" src=\\\"{{team.imageFQDN(match.home.logo)}}\\\" width=\\\"150\\\" alt=\\\"Team Logo\\\">\\n                                                </div>\\n                                                <div class=\\\"col vertical-middle\\\">\\n                                                    <div *ngIf=\\\"match.home.teamName\\\">{{match.home.teamName}}</div>\\n\\n                                                </div>\\n                                                <div class=\\\"col vertical-middle\\\">\\n                                                    <span> {{match.home.wins}} - {{match.home.losses}} </span>\\n                                                </div>\\n                                            </div>\\n\\n                                        </div>\\n                                        <div class=\\\"col-2 vertical-middle\\\">\\n                                            - VS -\\n                                        </div>\\n                                        <div class=\\\"col-5\\\">\\n                                            <div class=\\\"row\\\">\\n                                                <div class=\\\"col vertical-middle\\\">\\n                                                    <span> {{match.away.wins}} - {{match.away.losses}} </span>\\n                                                </div>\\n                                                <div class=\\\"col vertical-middle\\\">\\n                                                    <div *ngIf=\\\"match.away.teamName; else bye\\\">{{match.away.teamName}}</div>\\n                                                </div>\\n                                                <div class=\\\"col\\\">\\n                                                    <img class=\\\"img-fluid\\\" src=\\\"{{team.imageFQDN(match.away.logo)}}\\\" width=\\\"150\\\" alt=\\\"Team Logo\\\">\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col\\\">\\n\\n                                        </div>\\n                                        <div class=\\\"col-7 text-center\\\">\\n                                            <span *ngIf=\\\"match.scheduledTime else tbd\\\">Scheduled Time: {{match.friendlyDate}} - {{match.friendlyTime}} {{match.suffix}}</span>\\n\\n                                            <ng-template #tbd>\\n                                                <div class=\\\"p-1 text-danger\\\" *ngIf=\\\"checkDate(match) else timeElapsed\\\">\\n                                                    This match was not scheduled before it's due date contact an admin!\\n                                                </div>\\n                                                <ng-template #timeElapsed> <button class=\\\"btn btn-info\\\" (click)=\\\"scheduleMatch(match.matchId)\\\">\\n    Schedule this match! </button>\\n                                                </ng-template>\\n\\n                                            </ng-template>\\n                                        </div>\\n                                        <div class=\\\"col\\\">\\n\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"row\\\" *ngIf=\\\"match.casterName && match.casterUrl\\\">\\n                                        <div class=\\\"col\\\"></div>\\n                                        <div class=\\\"col-7 text-center\\\">\\n                                            <span> Casted by:</span> {{match.casterName}} : <a href=\\\"{{util.prePendHttp(match.casterUrl)}}\\\" target=\\\"_blank\\\">{{match.casterUrl}}</a>\\n                                        </div>\\n                                        <div class=\\\"col\\\"></div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                </div>\\n\\n                <!-- <div class=\\\"row mt-2\\\" *ngFor=\\\"let round of rounds | keyvalue\\\">\\n                    <div class=\\\"col\\\">\\n                        <h4>Round: {{round.key}}</h4>\\n                        <div class=\\\"row\\\" *ngFor=\\\"let match of round.value\\\">\\n                            <div class=\\\"col\\\">\\n                                <div *ngIf=\\\"match.home.teamName\\\">{{match.home.teamName}}</div>\\n                            </div>\\n                            <div class=\\\"col\\\">\\n                                - VS -\\n                            </div>\\n                            <div class=\\\"col\\\">\\n                                <div *ngIf=\\\"match.away.teamName; else bye\\\">{{match.away.teamName}}</div>\\n                            </div>\\n                            <div class=\\\"col\\\">\\n                                <div [hidden]=\\\"byeWeekHide(match)\\\">\\n                                    <div *ngIf=\\\"showSchedule(match); else showLink\\\">\\n                                        {{displayTime(match.scheduledTime.startTime)}}\\n                                    </div>\\n                                    <ng-template #showLink>\\n                                        <a [routerLink]=\\\"['/schedule/scheduleMatch',match.matchId]\\\">Schedule this Match!</a>\\n                                    </ng-template>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div> -->\\n            </ng-template>\\n\\n        </div>\\n    </div>\\n</div>\\n<ng-template #bye>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col text-center\\\">\\n            BYE\\n        </div>\\n    </div>\\n\\n</ng-template>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ScheduleService } from 'src/app/services/schedule.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UtilitiesService } from 'src/app/services/utilities.service';\nimport { TeamService } from 'src/app/services/team.service';\nimport { StandingsService } from 'src/app/services/standings.service';\n\n@Component({\n  selector: 'app-team-schedule',\n  templateUrl: './team-schedule.component.html',\n  styleUrls: ['./team-schedule.component.css']\n})\nexport class TeamScheduleComponent implements OnInit {\n  \n  //component properties\n  recTeam  //holds id received in the url route\n  noMatches: boolean; // set to true if there are no matches returned or false if there are, used for displaying certain messages\n  rounds: any //local variable to parse received team matches into\n  \n  constructor(private Auth: AuthService, private route: ActivatedRoute, private router: Router, private scheduleService:ScheduleService, private util:UtilitiesService, public team: TeamService, private standingsService:StandingsService) {\n    //get the ID from the route\n    if (this.route.snapshot.params['id']) {\n      this.recTeam = this.route.snapshot.params['id'];\n    }\n   }\n\n\n  scheduleMatch(id){\n    this.router.navigate(['schedule/scheduleMatch', id]);\n  }\n  todayDate\n\n  checkDate(match){\n   \n    let ret = false;\n    if (match['scheduleDeadline']){\n      let intDate = parseInt(match['scheduleDeadline']);\n      \n      if (this.todayDate > intDate){\n        ret = true;\n      }\n    }\n    return ret;\n  }\n\n  ngOnInit() {\n    this.todayDate = new Date().getTime();\n    //get the team from the route, if it that is not present get it from the auth service\n    let getTeam;\n    if(this.recTeam){\n      getTeam = this.recTeam;\n    }else{\n      getTeam = this.Auth.getTeam();\n    }\n    \n    //TODO: remove hard coded season 6!!!\n    this.scheduleService.getTeamSchedules(6, getTeam).subscribe(\n      res=>{\n        let matches = res;\n        //set the nomatches state\n        if (matches.length == 0 ){\n          this.noMatches = true;\n        }else{\n          this.noMatches = false;\n        }\n\n        let div = matches[0].divisionConcat\n        this.standingsService.getStandings(div).subscribe(\n          res => {\n            let standings = res;\n            matches.forEach(match => {\n              standings.forEach(standing => {\n                if (match.home.teamName == standing.teamName) {\n                  match.home['losses'] = standing.losses;\n                  match.home['wins'] = standing.wins;\n                }\n                if (match.away.teamName == standing.teamName) {\n                  match.away['losses'] = standing.losses;\n                  match.away['wins'] = standing.wins;\n                }\n              });\n              if (match.scheduleDeadline){\n                match['friendlyDeadline'] = this.util.getDateFromMS(match.scheduleDeadline);\n                console.log('yyy ', this.util.getDateFromMS(match.scheduleDeadline))\n              }\n\n              if (match.scheduledTime) {\n                match['friendlyDate'] = this.util.getDateFromMS(match.scheduledTime.startTime);\n                match['friendlyTime'] = this.util.getTimeFromMS(match.scheduledTime.startTime);\n                match['suffix'] = this.util.getSuffixFromMS(match.scheduledTime.startTime);\n              }\n            })\n          },err=>{\n            console.log(err);\n          });\n\n        //build out the rounds object:\n        /*\n        rounds = { \n          'roundNubmer':[\n                          {matchObject},\n                          {matchObject}\n                        ] \n                      }\n        */\n       console.log(matches)\n        for(var i = 0; i<=matches.length; i++){\n          if(this.rounds == null || this.rounds == undefined){\n            this.rounds = {};\n          }\n          let realRoundNumber = i+1;\n          matches.forEach(match => {\n              if (this.rounds[realRoundNumber.toString()] == null || this.rounds[realRoundNumber.toString()] == undefined){\n                this.rounds[realRoundNumber.toString()] = [];\n              }\n              if(match.round == realRoundNumber){\n                this.rounds[realRoundNumber.toString()].push(match);\n              }\n              \n          });\n        }\n\n        console.log('rounds ', this.rounds)\n        this.rounds;\n      },\n      err=>{console.log(err)}\n    )\n  }\n\n  //returns true if there is a scheduled time, and displays the scheduled time\n  //returns false if there is not a scheduled time and displays the link to scheduling component\n  showSchedule(match){\n      if (this.util.returnBoolByPath(match, 'scheduledTime.priorScheduled')) {\n        return true;\n      } else {\n        return false;\n      }\n  }\n\n\n  //hides rows if the team has a bye week, no need for scheduling\n  byeWeekHide(match){\n    //if this is a bye week don't show\n    if (!this.util.returnBoolByPath(match, 'away.teamName') || !this.util.returnBoolByPath(match, 'home.teamName')) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  //TODO: seen this code or similiar a few times, can we refactor?\n  displayTime(ms){\n    let d = new Date(parseInt(ms));\n    let day = d.getDate();\n    let year = d.getFullYear();\n    let month = d.getMonth();\n    month=month+1;\n    let hours = d.getHours();\n    let suffix = \"AM\";\n    if(hours>12){\n      hours = hours-12;\n      suffix = \"PM\";\n    }\n    let min = d.getMinutes();\n    let minStr;\n    if(min == 0){\n      minStr = '00';\n    }else{\n      minStr = min.toString();\n    }\n    let dateTime = month+'/'+day+'/'+year+' @ '+hours+':'+minStr+\" \"+suffix;\n    return dateTime;\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { HttpServiceService } from './http-service.service';\nimport { Team } from '../classes/team.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  constructor(private httpService: HttpServiceService) { }\n\n  //returns a list of all teams\n  getTeams(){\n    let url = 'admin/get/teams/all';\n    return this.httpService.httpGet(url,[]);\n  }\n\n  //returns a list of teams not assigned to division\n  getTeamsNotDivisioned(){\n    let url = 'admin/getTeamsUndivisioned';\n\n    return this.httpService.httpGet(url, []);\n  }\n\n  //admin function to remove memvers from team accepts team name and name of user to remove\n  //member can be an array of strings or string\n  removeMembers(team:string, member){\n    let url = 'admin/team/removeMember';\n    let payload = {\n      teamName:team,\n      removeUser:member\n    }\n    return this.httpService.httpPost(url, payload, true);\n  }\n\n  //refreshes specified teams MMR\n  refreshTeamMMR(team){\n    let url = 'admin/team/refreshMmr';\n    let payload = {\n      teamName:team\n    }\n    return this.httpService.httpPost(url, payload, true);\n  }\n\n\n  //edits division, accepts the division object and division name: divisionConcat\n  saveDivisionEdits(divname, divobj){\n  let url = \"admin/upsertDivision\";\n  let payload = {\n    \"divObj\": divobj,\n    \"divName\":divname\n  };\n    return this.httpService.httpPost(url, payload, true);\n  }\n\n  //calculates the teams MMR based on the provided usersMmr and the team's name\n  resultantMmr(userMmr, teamName){\n    let url ='/admin/resultantmmr';\n    let payload = {\n      userMmr: userMmr,\n      teamName: teamName\n    }\n    return this.httpService.httpPost(url, payload, true);\n  }\n\n  //moves teams provided into the division provided\n  //divisionConcat, array of team names as string\n  divisionTeam(teamArr: string[], divisionName:string){\n    let url = \"admin/divisionTeams\";\n    let payload = {\n      teamInfo:teamArr,\n      divisionName:divisionName\n    };\n    return this.httpService.httpPost(url, payload, true);\n  }\n\n  //removes teams provided from the division provided\n  //divisionConcat, array of string names to remove\n  removeTeams(teamArr:string[], divName:string){\n    let url = 'admin/removeTeams';\n    let payload = {\n      \"teams\":teamArr,\n      \"divName\":divName\n    }\n    return this.httpService.httpPost(url, payload, true);\n  }\n\n  //returns list of all divisions\n  getDivisionList(){\n    let url = 'admin/getDivisionInfo';\n\n    return this.httpService.httpGet(url, []).pipe(\n      map(res=>{\n          let divisionArr = res;\n          divisionArr.sort((a, b) => {\n            if (a.sorting < b.sorting) {\n              return -1;\n            }\n            if (a.sorting > b.sorting) {\n              return 1\n            }\n            return 0;\n          });\n          return divisionArr;\n        }\n      )\n    )\n  }\n\n  //returns to the pending member queue the admins approval or declining of a team member add\n  queuePost(teamName:string, memberName:string, action:boolean){\n    let url = 'admin/approveMemberAdd';\n    let payload = {\n      teamName:teamName,\n      member:memberName,\n      approved:action\n    }\n    return this.httpService.httpPost(url, payload, true);\n  }\n\n  //deletes user from provided username\n  deleteUser(user:string){\n    let url = 'admin/delete/user';\n    let payload = {displayName:user};\n    return this.httpService.httpPost(url, payload, true);\n  }\n\n  //deletes provided team by teamName\n  deleteTeam(team){\n    let url = 'admin/delete/team';\n    team = team.toLowerCase();\n    let payload = { teamName : team};\n    return this.httpService.httpPost(url, payload, true);\n  }\n\n  //saves team name with provided teamName, and team Object\n  saveTeam(teamName:string, teamObj:Team){\n     let url = 'admin/teamSave'\n\n    let payload = {\n      \"teamName\": teamName.toLowerCase(),\n      \"teamObj\":teamObj\n    }\n    return this.httpService.httpPost(url, payload, true);\n  }\n\n  //changes captain of provided string to provided user\n  changeCaptain(team:string, user:string){\n    let url = 'admin/reassignCaptain';\n    let payload = { teamName: team, userName: user};\n    return this.httpService.httpPost(url, payload, true);\n  }\n\n  //creates division from provided division object\n  createDivision(divObj){\n    let url = 'admin/createDivision';\n    let payload = {division:divObj};\n    return this.httpService.httpPost(url, payload, true);\n  }\n\n  //deletes division from provided division name divisionConcat\n  deleteDivision(div:string){\n    let url = 'admin/deleteDivision';\n    let payload = {division:div};\n    return this.httpService.httpPost(url, payload, true);\n  }\n\n  //posts updates made to match (accepts whole match object)\n  matchUpdate(match){\n    let url = 'admin/match/update';\n    let payload = {\n      match:match\n    };\n    return this.httpService.httpPost(url, payload, true);\n  }\n\n  setScheduleDeadline(div, time, endWeek){\n    let url = 'admin/match/set/schedule/deadline';\n    let payload = {\n      division:div,\n      date:time,\n      endWeek:endWeek\n    };\n    return this.httpService.httpPost(url, payload, true);\n  }\n\n  //returns list of all users and the access level lists\n  getUsersAcls(){\n    let url = 'admin/user/get/usersacl/all';\n    return this.httpService.httpGet(url, []);\n  }\n\n  //returns specified user and access level list\n  getUserAcls(id) {\n    let url = 'admin/user/get/usersacl';\n    let payload = {\n      id:id\n    };\n    return this.httpService.httpPost(url, payload);\n  }\n\n  //updates user ACL lists, accpets entire admin object\n  upsertUserAcls( userACL ){\n    let url ='admin/user/upsertRoles';\n    return this.httpService.httpPost(url, userACL, true);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Route } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private auth:AuthService, private router: Router) { }\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    \n    if (next.data.role == 'caster'){\n      if(this.auth.getCaster()){\n        return true;\n      }\n    } else if (next.data.role == undefined || next.data.role == null){\n      if (this.auth.getAdmin()){\n        return true;\n      }\n    }else if (this.auth.getAdmin().indexOf(next.data.role)>-1){\n      return true;\n    }\n    // navigate to login page\n    this.router.navigate(['/noAccess/', next.data.role]);\n    // you can save redirect url so after authing we can move them back to the page they requested\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { UtilitiesService } from './utilities.service';\n\n\n@Injectable({providedIn: 'root'})\n\nexport class AuthService {\n\n  constructor(private router:Router, private http: HttpClient, private util:UtilitiesService){\n   \n  }\n\n  helper = new JwtHelperService();\n\n  isAuthenticated():Boolean{\n    var test = localStorage.getItem('token');\n    if(test!=null&&test!=undefined&&test!=''){\n      return true;\n    }else{\n      return false;\n    }\n  }\n\n  setReferral(token){\n    \n     localStorage.setItem('referral', token);\n  }\n  getReferral(){\n\n     return localStorage.getItem('referral');\n  }\n  destroyReferral(){\n    localStorage.removeItem('referral');\n  }\n\n  //auth initializater\n  createAuth(token){\n    let decodedToken = this.helper.decodeToken(token);\n    // console.log(decodedToken);\n    localStorage.setItem('token', token);\n    localStorage.setItem('userName', decodedToken.displayName);\n    if (decodedToken.teamInfo){\n      if (this.util.returnBoolByPath(decodedToken, 'teamInfo.teamName')){\n        localStorage.setItem('teamName', decodedToken.teamInfo.teamName);\n      }\n      if (this.util.returnBoolByPath(decodedToken, 'teamInfo.isCaptain')){\n        localStorage.setItem('captain', decodedToken.teamInfo.isCaptain.toString());\n      }else{\n        localStorage.setItem('captain', 'false');\n      }\n    }\n    //TODO: do something with the new admin bits passed to local\n    if(decodedToken.adminLevel){\n      let adminString = '';\n      decodedToken.adminLevel.forEach(element => {\n        let keys = Object.keys(element);\n        if(keys.length>0){\n          if(keys[0]!='CASTER'){\n            adminString += keys[0].toLowerCase()\n          }else{\n            localStorage.setItem('caster', 'true');\n          }\n        }\n        \n      });\n      if(adminString.length>0){\n        localStorage.setItem('admin', adminString);\n      }\n    }\n  }\n\n  //caster methods\n  setCaster(caster){\n    localStorage.setItem('caster', caster);\n  }\n  getCaster(){\n    return localStorage.getItem('caster');\n  }\n  destroyCaster(){\n    localStorage.removeItem('caster');\n  }\n  //captain methods:\n  setCaptain(cap){\n    localStorage.setItem('captain', cap);\n  }\n  getCaptain():string {\n    return localStorage.getItem('captain');\n  }\n  destroyCaptain(){\n    localStorage.removeItem('captain');\n  }\n\n  //token methods:\n  setToken(token){\n    localStorage.setItem('token', token);\n  }\n  getToken():string{\n    return localStorage.getItem('token');\n  }\n  destroyToken(){\n    localStorage.removeItem('token');\n  }\n\n  //user methods:\n  setUser(user){\n    localStorage.setItem('userName',user);\n  }\n  getUser():string{\n    return localStorage.getItem('userName');\n  }\n  destroyUser() {\n    localStorage.removeItem('userName');\n  }\n\n  //admin methods\n  setAdmin(admin){\n    localStorage.setItem('admin', admin.toLowerCase());\n  }\n  getAdmin():string{\n    return localStorage.getItem('admin');\n  }\n  destroyAdmin(){\n    localStorage.removeItem('admin');\n  }\n\n  checkAdminLevel(level){\n    let admin = localStorage.getItem('admin');\n    return !!admin.indexOf(level.toLowerCase());\n  }\n\n  //team methods:\n  setTeam(teamName){\n    localStorage.setItem('teamName', teamName);\n  }\n  getTeam():string{\n    return localStorage.getItem('teamName');\n  }\n  destroyTeam(){\n    localStorage.removeItem('teamName');\n  }\n\n  //destroy all auth\n  destroyAuth(route){\n    // let url = 'http://localhost:3000/auth/logout';\n    let url = '/auth/logout';\n\n\n    this.http.get(url).subscribe(\n      res => {\n        localStorage.removeItem('userName');\n        localStorage.removeItem('token');\n        localStorage.removeItem('teamName');\n        localStorage.removeItem('captain');\n        this.destroyAdmin();\n        this.destroyCaster();\n        this.router.navigate([route]);\n      }\n    );\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { createClient, Entry } from 'contentful';\nimport { environment } from '../../environments/environment';\nimport { merge } from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContentfulService {\n\n  private client = createClient({\n    space: environment.contentful.spaceID,\n    accessToken: environment.contentful.token\n  });\n  localCategories: any[] = [];\n\n  constructor() { \n    \n  }\n\n  async getCategories():Promise<Entry<any>[] >{\n      try {\n      const res = await this.client.getEntries((Object.assign({ content_type: 'category' })));\n      return res.items;\n    }\n    catch (err) {\n      console.log(err);\n    }\n  }\n\n  async getBlogs(query?:object):Promise<Entry<any>[]>{\n    try {\n      const res = await this.client.getEntries((Object.assign({ content_type: 'blogPost'}, query)));\n      this.clearCache();\n      return res.items;\n    }\n    catch (err) {\n      return err;\n    }\n  }\n\n  async getBlog(blog) {\n    const res = await this.client.getEntry(blog);\n    return res;\n  }\n\n\n  tempBlog: any;\n  //store this blog in the local service so we don't have to HTTP request it again\n  cacheBlog(blog){\n    this.tempBlog=blog;\n  }\n  clearCache(){\n    this.tempBlog = {};\n  }\n  getCache(){\n    if (this.tempBlog == undefined || this.tempBlog == null){\n     return null; \n    }\n    var prop = Object.keys(this.tempBlog);\n    if(prop.length == 0){\n      return null;\n    }else{\n      return this.tempBlog;\n    }\n    \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpServiceService } from './http-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DivisionService {\n\n  //returns and sorts all divisions\n  getDivisionInfo(){\n    let turl = '/admin/getDivisionInfo';\n    return this.httpService.httpGet(turl, []).pipe(\n      map(\n        res => {\n          let divisionArr = res;\n          divisionArr.sort((a, b) => {\n            if (a.sorting < b.sorting) {\n              return -1;\n            }\n            if (a.sorting > b.sorting) {\n              return 1\n            }\n            return 0;\n          });\n          return divisionArr;\n        }\n      )\n    );\n  }\n\n  //returns division information of provided division; divisionConcat\n  getDivision(divisionName:string):Observable<any>{\n    let url = '/division/get';\n    let parameters = [{ 'division': divisionName}];\n    return this.httpService.httpGet(url,parameters);\n  }\n\n  constructor( private httpService:HttpServiceService) {\n\n   }\n}\n\n\n  // getDivInfo(divisionName:string){\n  //   let url = 'admin/getDivInfo'\n\n  //   return this.http.get<any>(url + '?division=' + divisionName).pipe(\n  //     map((res) => {\n  //       return res.returnObject;\n  //     })); \n  // }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HotsLogsService {\n\n\n  private url = 'https://api.hotslogs.com/Public/Players/?id';\n  constructor(private http: HttpClient) { \n   }\n  \n   getMMR(playerId):Observable<any>{\n     if (playerId.indexOf('https://www.hotslogs.com/Player/Profile?PlayerID=')>-1){\n      playerId = playerId.slice(playerId.indexOf(\"=\")+1, playerId.length); \n     }\n     let callUrl = this.url.replace('?id', playerId);\n     return this.http.get(callUrl).pipe(\n       map( res => {\n         if (res.hasOwnProperty('LeaderboardRankings')){\n           var inc = 0\n           var totalMMR = 0;\n           res['LeaderboardRankings'].forEach(element => {\n             if (element['GameMode'] != 'QuickMatch'){\n               if (element['CurrentMMR']>0){\n                inc+=1;\n                totalMMR += element.CurrentMMR;\n              }\n             }\n           });\n           return Math.round(totalMMR/inc);\n         }else{\n           if( res.hasOwnProperty('Message') ){\n             if(res['Message'].indexOf('invalid') > -1){\n               return 'error';\n             }\n           }\n         }\n       })\n     )\n   }\n\n   validCheck(url):Observable<any>{\n     let playerId = '';\n     if (url.indexOf('https://www.hotslogs.com/Player/Profile?PlayerID=') > -1) {\n       playerId = url.slice(url.indexOf(\"=\") + 1, url.length);\n     }\n     let callUrl = this.url.replace('?id', playerId);\n     return this.http.get(callUrl);\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { NotificationService } from './notification.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpServiceService {\n\n  constructor(private http: HttpClient, private notificationService:NotificationService) { }\n\n  httpPost(url, payload, showNotification?:boolean){\n    if(showNotification){\n      this.notificationService.subj_notification.next('Working..');\n    }\n    return this.http.post(url, payload).pipe(\n      map(\n        res=> { \n          if(showNotification){\n            this.notificationService.subj_notification.next(res['message']);\n          }\n          return res['returnObject'];\n        },\n        err=>{\n          console.log('httpPostService ', err);\n        }\n      )\n    )\n  };\n\n  httpGet(url, parameters, showNotification?:boolean){\n    /*\n    [{parameter:query}]\n    */\n   parameters.forEach((element, index) => {\n      let key = Object.keys(element);\n      if(index==0){\n        url+='?'+key[0]+ '=' + element[key[0]];\n      }else{\n        url += '&' + key[0] + '=' + element[key[0]];\n      }\n      \n   });\n    if (showNotification) {\n      this.notificationService.subj_notification.next('Working..');\n    }\n    return this.http.get(url).pipe(\n      map(\n        res=>{ \n          if (showNotification) {\n            this.notificationService.subj_notification.next(res['message']);\n          }\n          return res['returnObject']\n        },\n        err=>{\n          console.log('httpGetService ', err);\n        }\n      )\n    )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as marked from 'marked';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MarkdownParserService {\n\n  private md\n\n  constructor() {\n    this.md = marked;\n   }\n   //this is used to parse the contentful returns as they are returned with markdown\n   convertMarkdown(markdown:string){\n     return this.md.parse(markdown);\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  public subj_notification: Subject<string> = new Subject();\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators'\nimport { HttpServiceService } from './http-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QueuesService {\n\n  constructor( private httpService:HttpServiceService) {\n\n   }\n\n   getQueues(queue){\n     let url = 'admin/';\n     url += queue;\n     return this.httpService.httpGet(url, []);\n  }\n   \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators'\nimport { HttpServiceService } from './http-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScheduleService {\n\n  constructor(private httpService: HttpServiceService) { }\n\n  //returns all generated matches\n  getAllMatches(){\n    let url = 'schedule/get/matches/all';\n    let payload = {\n\n    };\n    return this.httpService.httpPost(url, payload);\n  }\n  //schedule/get/matches/scheduled\n  getAllMatchesWithStartTime(){\n    let url = 'schedule/get/matches/scheduled';\n    return this.httpService.httpGet(url, []);\n  }\n\n  //returns matches that match criteria of season, division\n  getDivisionScheduleMatches(season, division: string) {\n    let url = 'schedule/get/division/matches';\n    let payload = {\n      'season': season,\n      'division': division\n    };\n    return this.httpService.httpPost(url, payload);\n  };\n\n  //returns matches that match criteria of season, division, round\n  getScheduleMatches(season, division:string, round:number){  \n    let url = 'schedule/get/matches';\n    let payload = {\n      'season':season,\n      'division':division,\n      'round':round\n    };\n    return this.httpService.httpPost(url, payload);\n  };\n\n  //returns matches that match criteria of provided season and team\n  getTeamSchedules(season:number, team:string){\n    let url = 'schedule/get/matches/team';\n    team = team.toLowerCase();\n    let payload = {\n      'season':season,\n      'team':team\n    };\n    return this.httpService.httpPost(url, payload);\n  }\n\n  //returns a match given the matchId and season\n  getMatchInfo(season, matchId:string){\n    let url = 'schedule/get/match';\n    let payload={\n      \"season\":season,\n      \"matchId\":matchId\n    }\n    return this.httpService.httpPost(url, payload);\n  }\n\n  //accepts match id and two dates, schedules the provided match stard, and end times\n  scheduleMatchTime(matchId:string, scheduledStartTime:number, scheduledEndTime:number){\n    // let url = 'http://localhost:3000/schedule/setMatchTime';\n    let url = 'schedule/update/match/time';\n  \n    let payload = {\n      \"matchId\":matchId,\n      \"scheduledStartTime\": scheduledStartTime,\n      \"scheduledEndTime\":scheduledEndTime\n    }\n    return this.httpService.httpPost(url, payload, true);\n  }\n\n  //accepts an object that contains elements for reporting the match outcome:\n  /*\n    {\n      replay1:File,\n      replay2:File,\n      awayScore:number,\n      homeScore:number,\n      matchId:string\n    }\n  */\n  reportMatch(payload){\n    let url = 'schedule/report/match';\n    let input = new FormData();\n\n    let keys = Object.keys(payload);\n    keys.forEach(element=>{\n      input.append(element, payload[element]);\n    });\n\n    return this.httpService.httpPost(url, input, true);\n  }\n\n  // /match/add / caster\n  addCaster(matchId:string, casterName:string, casterUrl:string) {\n    let payload = {\n      matchId:matchId,\n      casterName:casterName,\n      casterUrl:casterUrl\n    }\n    let url = 'schedule/match/add/caster';\n    return this.httpService.httpPost(url, payload, true);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { HttpServiceService } from './http-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StandingsService {\n\n  //accepts the divisionConcat and returns the standings of the division based on reported matches\n  getStandings(div:string){\n    let url = 'standings/get/division';\n    let payload = {\n      division:div\n    };\n    return this.httpService.httpPost(url, payload);\n  }\n\n  constructor(private httpService: HttpServiceService) { }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { HttpServiceService } from './http-service.service';\nimport { Team } from '../classes/team.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n\n  //returns sys data\n  getSysData(name:string){\n    let url = 'team/get/sys/dat';\n    let payload = {'data':name};\n    return this.httpService.httpPost(url, payload);\n  }\n\n  //returns requested team\n  getTeam(name:string):Observable<any>{\n    let encodededID = encodeURIComponent(this.realTeamName(name));\n    let url = 'team/get';\n    let params = [{team:encodededID}];\n    return this.httpService.httpGet(url, params);\n  };\n\n  //retuns teams from an array of team names\n  getTeams(names){\n    let url = 'team/getTeams';\n    let payload = {teams:names}\n    return this.httpService.httpPost(url, payload)\n  }\n\n  //changes the teams captain to passed user\n  changeCaptain(team:string, user:string){\n    let url = 'team/reassignCaptain';\n    team = team.toLowerCase();\n    let payload = {\n      teamName: team,\n      username:user\n    }\n    return this.httpService.httpPost(url, payload, true);\n  }\n\n  //deletes the passed team\n  deleteTeam(team:string){\n    let url = 'team/delete';\n    team = team.toLowerCase();\n    let payload = {teamName:team};\n    return this.httpService.httpPost(url, payload, true);\n  }\n\n  //searches team via provided string\n  teamSearch(team:string){\n    let url = 'search/team';\n    team = team.toLowerCase();\n    let payload = {teamName:team};\n    return this.httpService.httpPost(url, payload);\n  }\n\n  //create team\n  createTeam(team:Team){\n    let url = 'team/create';\n    return this.httpService.httpPost(url, team, true);\n  }\n\n  //saves any changes to team info\n  saveTeam(team:Team): Observable<any>{\n    let url = 'team/save';\n    return this.httpService.httpPost(url, team, true);\n  }\n\n  //saves team questionnaire\n  saveTeamQuestionnaire(team, questionnaire) {\n    let url = '/team/questionnaire/save';\n    let payload = {\n      teamName: team,\n      questionnaire: questionnaire\n    };\n    return this.httpService.httpPost(url, payload, true);\n  }\n\n  //removes user from team members list\n  removeUser(user:string, team:string){\n    let url = '/team/removeMember';\n    let payload = {\n      remove: user,\n      teamName: team\n    }\n    return this.httpService.httpPost(url, payload, true);\n  }\n\n  //adds user to perscribed team\n  addUser(user, team){\n    let postData = {}\n    if(typeof user!='object'){\n      postData['teamName'] = team;\n      postData['addMember']= user;\n    }else{\n      postData = user;\n    }\n    let url = 'team/addMember';\n    return this.httpService.httpPost(url, postData, true);\n  }\n\n  logoUpload(imgInput){\n    let url = 'team/uploadLogo';\n    return this.httpService.httpPost(url, imgInput, true);\n  }\n\n\n  //retuns a formatted string that includes the requisite info to retrieve an image from s3 bucket\n  imageFQDN(img) {\n    let imgFQDN = 'https://s3.amazonaws.com/' + environment.s3bucketImages + '/'\n    if(img){\n      imgFQDN += img;\n    }else{\n      imgFQDN += 'defaultTeamLogo.png';\n    }\n    \n    return imgFQDN;\n  }\n\n  //returns a route friendly URL name for a team, removing any spaces\n  routeFriendlyTeamName(teamname):string{\n    var pattern = ' ';\n    var re = new RegExp(pattern, \"g\");\n    if(teamname!=null&&teamname!=undefined){\n      return teamname.replace(re, '_');\n    }else{\n      return '';\n    }\n  }\n\n  //returns team name re formatted with spaces\n  realTeamName(teamname):string{\n    var pattern = '_';\n    var re = new RegExp(pattern, \"g\");\n    if (teamname != null && teamname != undefined) {\n      return teamname.replace(re, ' ');\n    }else{\n      return '';\n    }\n    \n  }\n\n  constructor(private httpService: HttpServiceService) { }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimezoneService {\n  timezones = [\n    {\n      \"value\": \"-12\",\n      \"text\": \"(GMT -12:00) Eniwetok, Kwajalein\"\n    },\n    {\n      \"value\": \"-11\",\n      \"text\": \"(GMT -11:00) Midway Island, Samoa\"\n    },\n    {\n      \"value\": \"-10\",\n      \"text\": \"(GMT -10:00) Hawaii\"\n    },\n    {\n      \"value\": \"-9\",\n      \"text\": \"(GMT -9:00) Alaska\"\n    },\n    {\n      \"value\": \"-8\",\n      \"text\": \"(GMT -8:00) Pacific Time (US & Canada)\"\n    },\n    {\n      \"value\": \"-7\",\n      \"text\": \"(GMT -7:00) Mountain Time (US & Canada)\"\n    },\n    {\n      \"value\": \"-6\",\n      \"text\": \"(GMT -6:00) Central Time (US & Canada), Mexico City\"\n    },\n    {\n      \"value\": \"-5\",\n      \"text\": \"(GMT -5:00) Eastern Time (US & Canada), Bogota, Lima\"\n    },\n    {\n      \"value\": \"-4\",\n      \"text\": \"(GMT -4:00) Atlantic Time (Canada), Caracas, La Paz\"\n    },\n    {\n      \"value\": \"-3.5\",\n      \"text\": \"(GMT -3:30) Newfoundland\"\n    },\n    {\n      \"value\": \"-3\",\n      \"text\": \"(GMT -3:00) Brazil, Buenos Aires, Georgetown\"\n    },\n    {\n      \"value\": \"-2\",\n      \"text\": \"(GMT -2:00) Mid-Atlantic\"\n    },\n    {\n      \"value\": \"-1\",\n      \"text\": \"(GMT -1:00) Azores, Cape Verde Islands\"\n    },\n    {\n      \"value\": \"0\",\n      \"text\": \"(GMT) Western Europe Time, London, Lisbon, Casablanca\"\n    },\n    {\n      \"value\": \"1\",\n      \"text\": \"(GMT +1:00) Brussels, Copenhagen, Madrid, Paris\"\n    },\n    {\n      \"value\": \"2\",\n      \"text\": \"(GMT +2:00) Kaliningrad, South Africa\"\n    },\n    {\n      \"value\": \"3\",\n      \"text\": \"(GMT +3:00) Baghdad, Riyadh, Moscow, St. Petersburg\"\n    },\n    {\n      \"value\": \"3.5\",\n      \"text\": \"(GMT +3:30) Tehran\"\n    },\n    {\n      \"value\": \"4\",\n      \"text\": \"(GMT +4:00) Abu Dhabi, Muscat, Baku, Tbilisi\"\n    },\n    {\n      \"value\": \"4.5\",\n      \"text\": \"(GMT +4:30) Kabul\"\n    },\n    {\n      \"value\": \"5\",\n      \"text\": \"(GMT +5:00) Ekaterinburg, Islamabad, Karachi, Tashkent\"\n    },\n    {\n      \"value\": \"5.5\",\n      \"text\": \"(GMT +5:30) Bombay, Calcutta, Madras, New Delhi\"\n    },\n    {\n      \"value\": \"5.75\",\n      \"text\": \"(GMT +5:45) Kathmandu\"\n    },\n    {\n      \"value\": \"6\",\n      \"text\": \"(GMT +6:00) Almaty, Dhaka, Colombo\"\n    },\n    {\n      \"value\": \"7\",\n      \"text\": \"(GMT +7:00) Bangkok, Hanoi, Jakarta\"\n    },\n    {\n      \"value\": \"8\",\n      \"text\": \"(GMT +8:00) Beijing, Perth, Singapore, Hong Kong\"\n    },\n    {\n      \"value\": \"9\",\n      \"text\": \"(GMT +9:00) Tokyo, Seoul, Osaka, Sapporo, Yakutsk\"\n    },\n    {\n      \"value\": \"9.5\",\n      \"text\": \"(GMT +9:30) Adelaide, Darwin\"\n    },\n    {\n      \"value\": \"10\",\n      \"text\": \"(GMT +10:00) Eastern Australia, Guam, Vladivostok\"\n    },\n    {\n      \"value\": \"11\",\n      \"text\": \"(GMT +11:00) Magadan, Solomon Islands, New Caledonia\"\n    },\n    {\n      \"value\": \"12\",\n      \"text\": \"(GMT +12:00) Auckland, Wellington, Fiji, Kamchatka\"\n    }\n  ];\n  constructor() { }\n}\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class ResponseInterceptor implements HttpInterceptor {\n  \n  constructor(public auth: AuthService, private router:Router) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        req = req.clone({ setHeaders:{\n          Authorization: `Bearer ${this.auth.getToken()}`\n        } });\n\n        return next.handle(req).pipe(\n          tap(\n            event=>{\n              if(event instanceof HttpResponse){\n                if (event.headers.get('Authorization') != null && event.headers.get('Authorization')!= undefined){\n                  let token = event.headers.get('Authorization');\n                  token = token.replace('Bearer ', '');\n                  this.auth.createAuth(token);\n                }\n              }\n            },\n            (err)=>{\n              if(err.status==401){\n                console.log('we have a 401 here!!!')\n                this.auth.destroyAuth('/sessionTimeOut')\n                // this.router.navigateByUrl['/sessionTimeOut'];\n              }else{\n\n              }\n              \n            }\n          )\n        )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, tap } from 'rxjs/operators';\nimport { Profile } from  '../classes/profile.class';\nimport { Observable } from 'rxjs';\nimport { HttpServiceService } from './http-service.service';\n\n\n\n//methods for getting and calling user information\n\n@Injectable({ providedIn: 'root' })\n\nexport class UserService {\n\n  //gets the user profile to match\n  getUser(id): Observable<Profile>{\n    let encodedID = encodeURIComponent(id);\n    let url = 'user/get';\n    let params = [{user: encodedID}];\n    return this.httpService.httpGet(url, params);    \n  }\n\n  //sends the information to the outreach route\n  emailOutreach(email){\n    let url = '/outreach/invite';\n    let payload = {\n      userEmail:email\n    }\n    return this.httpService.httpPost(url, payload, true);\n\n  }\n\n  //searchs for users\n  userSearch(id, type?):Observable<any>{\n\n    let allUrl = 'search/user';\n    let unTeamedUrl = '/search/user/unteamed';\n    let url;\n    \n    if(typeof id != 'object'){\n        id = {'userName':id}\n    }\n\n   if(type==undefined||type==null){\n    url = allUrl;\n   }else if( type == 'unteamed'){\n     url = unTeamedUrl;\n   }else if( type == 'all'){\n     url = allUrl;\n   }\n\n   return this.httpService.httpPost(url, id);   \n\n  }\n\n  //saves user profile\n  saveUser(user):Observable<any>{\n    let url = \"user/save\";\n    return this.httpService.httpPost(url, user, true);\n  }\n\n  //deletes the user\n  deleteUser(){\n    let url = \"user/delete\";\n    return this.httpService.httpGet(url,[], true);\n  }\n\n  //captures and sends created user and the invite token they used when logging in;\n  //this clears the pending outreach in queue\n  outreachResponse(token, user):Observable<any>{\n    let url = 'outreach/inviteResponseComplete';\n\n    if(typeof token != 'object'){\n      token = { \"referral\":token , \"user\":user };\n    }\n    return this.httpService.httpPost(url, token);\n  }\n\n  //replaces URL safe character # with _ for URLs for usernames\n  routeFriendlyUsername(username): string {\n    if(username!=null&&username!=undefined){\n      return username.replace('#', '_');\n    }else{\n      return '';\n    }\n  }\n\n  //turns any user name that has been sanatised for URL back to the real user name\n  realUserName(username): string {\n    if (username != null && username != undefined) {\n      return username.replace('_', '#');\n    }else{\n      return '';\n    }\n  }\n\n  constructor(private httpService: HttpServiceService) { }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilitiesService {\n\n  constructor() { }\n\n  prePendHttp(link){\n    if(link.indexOf('http://www.')==-1 || link.indexOf('https://wwww.')==-1){\n      return 'http://www.'+link;\n    }else{\n      return link;\n    }\n  }\n\n  getTimeFromMS(msDate) {\n    let time = new Date(parseInt(msDate));\n    // this.friendlyDate = time;\n    // this.suffix = 'AM';\n    let hours = time.getHours();\n    if (hours > 12) {\n      hours = hours - 12;\n    }\n    let min = time.getMinutes();\n    let minStr;\n    if (min == 0) {\n      minStr = '00';\n    } else {\n      minStr = min.toString();\n    }\n    return hours + \":\" + minStr\n  }\n\n  dayOfWeekAsString(dayIndex) {\n    return [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"][dayIndex];\n}\n\n  getDatePickerFormatFromMS(msDate) {\n    return new Date(parseInt(msDate));\n  }\n\n  getDateFromMS(msDate){\n    let time = new Date(parseInt(msDate));\n    let year = time.getFullYear();\n    let day = this.dayOfWeekAsString(time.getDay());\n    let date = time.getDate();\n    let month = time.getMonth()+1;\n    if( day == undefined || month == NaN || date == NaN || year == NaN ){\n      console.log('???')\n      return null;\n    }else{\n      return day + ' ' + month + '/' + date + '/' + year;\n    }\n    \n  }\n\n  getSuffixFromMS(msDate){\n    let suffix = 'AM';\n    let time = new Date(parseInt(msDate));\n    let hours = time.getHours();\n    if (hours > 12) {\n      hours = hours - 12;\n      suffix = \"PM\";\n    }\n    return suffix;\n\n  }\n\n  markFormGroupTouched(formGroup: FormGroup) {\n\n    if (formGroup.controls) {\n      const keys = Object.keys(formGroup.controls);\n      for (let i = 0; i < keys.length; i++) {\n        const control = formGroup.controls[keys[i]];\n\n        if (control instanceof FormControl) {\n          control.markAsTouched();\n        } else if (control instanceof FormGroup) {\n          this.markFormGroupTouched(control);\n        }\n      }\n    }\n  }\n\n  returnBoolByPath(obj, path): boolean {\n    //path is a string representing a dot notation object path;\n    //create an array of the string for easier manipulation\n    let pathArr = path.split('.');\n    //return value\n    let retVal = null;\n    //get the first element of the array for testing\n    let ele = pathArr[0];\n    //make sure the property exist on the object\n    if (obj.hasOwnProperty(ele)) {\n      if (typeof obj[ele] == 'boolean') {\n        retVal = true;\n      }\n      //property exists:\n      //property is an object, and the path is deeper, jump in!\n      else if (typeof obj[ele] == 'object' && pathArr.length > 1) {\n        //remove first element of array\n        pathArr.splice(0, 1);\n        //reconstruct the array back into a string, adding \".\" if there is more than 1 element\n        if (pathArr.length > 1) {\n          path = pathArr.join('.');\n        } else {\n          path = pathArr[0];\n        }\n        //recurse this function using the current place in the object, plus the rest of the path\n        retVal = this.returnBoolByPath(obj[ele], path);\n      } else if (typeof obj[ele] == 'object' && pathArr.length == 0) {\n        retVal = obj[ele];\n      } else {\n        retVal = obj[ele]\n      }\n    }\n    return !!retVal;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"containter forceFull\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col text-center\\\">\\n            <h3>Session time out</h3>\\n            <h5>Your session has timed out. Please log back in!</h5>\\n            <a class=\\\"btn btn-default\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-session-timeout',\n  templateUrl: './session-timeout.component.html',\n  styleUrls: ['./session-timeout.component.css']\n})\nexport class SessionTimeoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  snackbar works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.css']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <h3>Standings</h3>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            Position\\n        </div>\\n        <div class=\\\"col\\\">\\n            Team Name\\n        </div>\\n        <div class=\\\"col\\\">\\n            Points\\n        </div>\\n        <div class=\\\"col\\\">\\n            Dominations\\n        </div>\\n        <div class=\\\"col\\\">\\n            Wins\\n        </div>\\n        <div class=\\\"col\\\">\\n            Losses\\n        </div>\\n    </div>\\n    <div *ngIf=\\\"standings.length>0 else noStandings\\\">\\n        <div class=\\\"row\\\" *ngFor=\\\"let standing of standings\\\">\\n            <div class=\\\"col\\\">\\n                {{standing.standing}}\\n            </div>\\n            <div class=\\\"col\\\">\\n                {{standing.teamName}}\\n            </div>\\n            <div class=\\\"col\\\">\\n                {{standing.points}}\\n            </div>\\n            <div class=\\\"col\\\">\\n                {{standing.dominations}}\\n            </div>\\n            <div class=\\\"col\\\">\\n                {{standing.wins}}\\n            </div>\\n            <div class=\\\"col\\\">\\n                {{standing.losses}}\\n            </div>\\n        </div>\\n    </div>\\n\\n    <ng-template #noStandings>\\n        <div class=\\\"row mt-3\\\">\\n            <div class=\\\"col text-center\\\">\\n                <h5>There are currently no matches generated to calculate standings!</h5>\\n                <h6> Check back later! </h6>\\n            </div>\\n        </div>\\n    </ng-template>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { StandingsService } from '../services/standings.service';\n\n@Component({\n  selector: 'app-standings-view',\n  templateUrl: './standings-view.component.html',\n  styleUrls: ['./standings-view.component.css']\n})\nexport class StandingsViewComponent implements OnInit {\n\n  constructor(private standingsService:StandingsService) { }\n\n  div:any;\n  standings:any[]=[];\n  @Input() set division(div){\n    if(div!=null&&div!=undefined){\n      this.div = div;\n      this.getStandings(div.divisionConcat);\n      \n    }\n  }\n\n  getStandings(div){\n    this.standingsService.getStandings(div).subscribe(\n      (res) => {\n        this.standings = res;\n      },\n      (err) => {\n        console.log(err);\n      }\n    )\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container p-3\\\">\\n    <div class=\\\"row mt-3\\\" *ngFor=\\\"let row of rows\\\">\\n        <div class=\\\"col-4\\\" *ngFor=\\\"let item of row\\\">\\n            <mat-card class=\\\"example-card\\\">\\n                <mat-card-header>\\n                    <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n                    <mat-card-title><a [routerLink]=\\\"['/teamProfile/', team.routeFriendlyTeamName(item.teamName)]\\\">{{item.teamName}}</a></mat-card-title>\\n                </mat-card-header>\\n                <img mat-card-image src=\\\"{{teamImage(item.logo)}}\\\" alt=\\\"team logo\\\">\\n                <mat-card-content>\\n                    <mat-accordion>\\n                        <mat-expansion-panel>\\n                            <mat-expansion-panel-header>\\n                                <mat-panel-title>\\n                                    Members\\n                                </mat-panel-title>\\n                            </mat-expansion-panel-header>\\n                            <app-members-display [members]=\\\"item.teamMembers\\\"></app-members-display>\\n                        </mat-expansion-panel>\\n                    </mat-accordion>\\n                </mat-card-content>\\n            </mat-card>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Team } from '../classes/team.class';\nimport { TeamService } from '../services/team.service';\n\n@Component({\n  selector: 'app-team-display',\n  templateUrl: './team-display.component.html',\n  styleUrls: ['./team-display.component.css']\n})\nexport class TeamDisplayComponent implements OnInit {\n  _teams: Team[] = [];\n  MemberRows: Array<any> = [];\n\n  @Input() perColumn:any\n  @Input() set teams(teams:Team[]){\n    if(teams != null && teams != undefined){\n      this._teams = teams;\n      this.createMyDisplay();\n    }else{\n      this._teams = [];\n      this.rows = [];\n    }\n  }\n\n  get teams():Team[]{\n    return this._teams;\n  }\n\n  teamImage(img){\n    if(img == null || img == undefined){\n      return this.team.imageFQDN('defaultTeamLogo.png');\n    }else{\n      return this.team.imageFQDN(img);\n    }\n  }\n\n  rows: Array<any> = [];\n\n  constructor(private team:TeamService) { }\n\n  createMyDisplay(){\n    if(!this.perColumn){\n      this.perColumn = 3;\n    }\n    this.rows = [];\n    if (this._teams != undefined && this._teams.length > 0) {\n      if (this._teams.length > this.perColumn) {\n        let temparr = [];\n        for (var i = 0; i < this._teams.length; i++) {\n          if (i>0 && i % this.perColumn == 0) {\n            this.rows.push(temparr);\n            temparr = [];\n          }else if(i == this._teams.length-1){\n            if(temparr.length>0){\n              this.rows.push(temparr);\n            }\n          }\n          temparr.push(this._teams[i]);\n        }\n      } else {\n        this.rows.push(this._teams);\n      }\n    } else {\n      this.rows = [];\n    }\n  }\n\n  ngOnInit() {\n    \n  }\n\n}\n","module.exports = \".role-margin {\\n    margin: 0 10px;\\n}\\n\\n.icon-align {\\n    display: inline-flex;\\n    vertical-align: middle;\\n}\\n\\n.material-icons.md-16 {\\n    font-size: 16px;\\n}\\n\\n.material-icons.md-18 {\\n    font-size: 18px;\\n}\\n\\n.material-icons.md-24 {\\n    font-size: 24px;\\n}\\n\\n.material-icons.md-36 {\\n    font-size: 36px;\\n}\\n\\n.material-icons.md-48 {\\n    font-size: 48px;\\n}\\n\\n.error-avail {\\n    border-style: solid;\\n    border-width: 2px;\\n    border-color: red;\\n    padding-left: 10px;\\n}\\n\\n.req-field {\\n    color: red;\\n    font-size: .80em;\\n    font-weight: 600;\\n}\\n\\n.whiteBg {\\n    background-color: white;\\n}\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"showMe\\\">\\n    <div class=\\\"whiteBg\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div>\\n                    <!-- captain options -->\\n                    <div class=\\\"row\\\" *ngIf=\\\"showEditDialog()\\\">\\n                        <div class=\\\"col-8 offset-2\\\">\\n                            <div class=\\\"row mt-3\\\">\\n                                <div class=\\\"col-6\\\">\\n                                    Welcome to your team profile!\\n                                </div>\\n                                <div class=\\\"col-6\\\">\\n                                    <div *ngIf=\\\"editOn == true\\\">\\n                                        <button type=\\\"button\\\" (click)=\\\"openEdit()\\\" class=\\\"btn btn-primary float-right\\\">Edit</button>\\n                                    </div>\\n                                    <div class=\\\"row\\\" *ngIf=\\\"!editOn\\\">\\n                                        <div class=\\\"col\\\">\\n                                            <div class=\\\"dropdown\\\">\\n                                                <button type=\\\"button\\\" class=\\\"btn btn-danger dropdown-toggle\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                                                <span class=\\\"icon-align\\\">\\n                                                    <i class=\\\"material-icons md-18\\\">settings</i> \\n                                                    Manage \\n                                                </span>\\n                                            </button>\\n                                                <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\n                                                    <a class=\\\"dropdown-item finger\\\" (click)=\\\"openCaptainChangeDialog()\\\"><span class=\\\"icon-align\\\"><i class=\\\"material-icons\\\">cached</i>Change\\n                                                        captain</span></a>\\n                                                    <a class=\\\"dropdown-item finger\\\" (click)=\\\"openDialog()\\\"><span class=\\\"icon-align\\\"><i class=\\\"material-icons\\\">delete_forever</i>Delete team</span></a>\\n                                                </div>\\n                                            </div>\\n\\n                                        </div>\\n                                        <div class=\\\"col\\\">\\n                                            <button type=\\\"button\\\" [disabled]=\\\"!validate()\\\" (click)=\\\"save()\\\" class=\\\"btn btn-success \\\">Save</button>\\n                                        </div>\\n                                        <div class=\\\"col\\\">\\n                                            <button type=\\\"button\\\" (click)=\\\"cancel()\\\" class=\\\"btn btn-danger\\\">Cancel</button>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <!-- admin options -->\\n                    <div class=\\\"row\\\" *ngIf=\\\"componentEmbedded\\\">\\n                        <div class=\\\"col-8 offset-2\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col\\\">\\n                                    <div class=\\\"dropdown\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-danger dropdown-toggle\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                                        <span class=\\\"icon-align\\\">\\n                                            <i class=\\\"material-icons md-18\\\">settings</i>\\n                                                 Manage\\n                                        </span>\\n                                    </button>\\n                                        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\n                                            <a class=\\\"dropdown-item finger\\\" (click)=\\\"openAdminCaptainChangeDialog()\\\"><span class=\\\"icon-align\\\"><i class=\\\"material-icons\\\">cached</i>Change captain</span></a>\\n                                            <a class=\\\"dropdown-item finger\\\" (click)=\\\"openAdminDeleteDialog()\\\"><span class=\\\"icon-align\\\"><i class=\\\"material-icons\\\">delete_forever</i>Delete team</span></a>\\n                                        </div>\\n                                    </div>\\n\\n                                </div>\\n                                <div class=\\\"col\\\">\\n                                    <button type=\\\"button\\\" (click)=\\\"adminRefreshMMR()\\\" class=\\\"btn btn-info\\\">Update Team MMR</button>\\n                                </div>\\n                                <div class=\\\"col\\\">\\n                                    <button type=\\\"button\\\" (click)=\\\"adminSave()\\\" class=\\\"btn btn-success \\\">Save</button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"row mt-3\\\">\\n                    <div class=\\\"col-sm-12 col-md-5\\\">\\n                        <app-image-upload [showEdit]=\\\"auth.getUser()===returnedProfile.captain\\\" [teamName]=\\\"returnedProfile.teamName\\\" [teamLogo]=\\\"returnedProfile.logo\\\"></app-image-upload>\\n                    </div>\\n                    <div class=\\\"col-sm-12 col-md-7\\\">\\n                        <mat-form-field class=\\\"mat-FullWidth\\\">\\n                            <input matInput placeholder=\\\"Team Name\\\" [(ngModel)]=\\\"returnedProfile.teamName\\\" (ngModelChange)=\\\"modelChange()\\\" [disabled]=\\\"!componentEmbedded\\\">\\n                        </mat-form-field>\\n                        <mat-form-field class=\\\"mat-FullWidth\\\">\\n                            <input matInput placeholder=\\\"Team Division\\\" [(ngModel)]=\\\"returnedProfile.divisionDisplayName\\\" disabled=\\\"true\\\">\\n                        </mat-form-field>\\n                        <mat-form-field class=\\\"mat-FullWidth\\\">\\n                            <input matInput placeholder=\\\"Team MMR Average\\\" [(ngModel)]=\\\"returnedProfile.teamMMRAvg\\\" disabled=\\\"true\\\">\\n                        </mat-form-field>\\n                        <mat-slide-toggle [disabled]=\\\"editOn\\\" [(ngModel)]=\\\"returnedProfile.lookingForMore\\\">\\n                            Looking for More.\\n                        </mat-slide-toggle>\\n                    </div>\\n                </div>\\n\\n                <div *ngIf=\\\"!componentEmbedded\\\">\\n\\n                    <!-- add team member -->\\n                    <div class=\\\"row mt-3\\\" *ngIf=\\\"!editOn\\\">\\n                        <div class=\\\"col\\\">\\n                            <h3>Invite users to your team!</h3>\\n                            <mat-accordion>\\n                                <mat-expansion-panel>\\n                                    <mat-expansion-panel-header>\\n                                        <mat-panel-title>\\n                                            Existing User:\\n                                        </mat-panel-title>\\n                                        <mat-panel-description>\\n                                            Search if user is a member of NGS all ready.\\n                                        </mat-panel-description>\\n                                    </mat-expansion-panel-header>\\n\\n                                    <app-user-search [filterUser]=\\\"filterUsers\\\" [type]=\\\"'unteamed'\\\" [buttonText]=\\\"'Invite User'\\\" (userSelected)=\\\"invite($event)\\\"></app-user-search>\\n\\n                                </mat-expansion-panel>\\n\\n                                <mat-expansion-panel>\\n                                    <mat-expansion-panel-header>\\n                                        <mat-panel-title>\\n                                            New User:\\n                                        </mat-panel-title>\\n                                        <mat-panel-description>\\n                                            Invite a user to join NGS!\\n                                        </mat-panel-description>\\n                                    </mat-expansion-panel-header>\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-7\\\">\\n                                            <mat-form-field class=\\\"mat-FullWidth\\\">\\n                                                <input matInput [formControl]=\\\"emailControl\\\" [(ngModel)]=\\\"emailAddress\\\" placeholder=\\\"Enter users email to send them an invite to NGS!\\\">\\n                                            </mat-form-field>\\n                                        </div>\\n                                        <div class=\\\"col\\\">\\n                                            <button type=\\\"button\\\" [disabled]=\\\"emailControl.invalid\\\" (click)=\\\"inviteEmail()\\\">Invite!</button>\\n                                        </div>\\n                                    </div>\\n\\n\\n\\n                                </mat-expansion-panel>\\n                            </mat-accordion>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row mt-3\\\">\\n                        <div class=\\\"col\\\">\\n                            <span class=\\\"p-3 text-success\\\">{{message}}</span>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n                <div class=\\\"row mt-3\\\">\\n                    <div class=\\\"col\\\">\\n                        <h2>Current Team Members:</h2>\\n                    </div>\\n                </div>\\n                <!-- team members list -->\\n                <div class=\\\"row mt-3\\\">\\n                    <div class=\\\"col\\\">\\n                        <div class=\\\"row mt-3\\\" *ngFor=\\\"let player of displayMembersLeft\\\">\\n                            <div class=\\\"col-7\\\">\\n                                <mat-form-field class=\\\"mat-FullWidth\\\">\\n                                    <input matInput placeholder=\\\"Player Name\\\" value={{player.displayName}} disabled=\\\"true\\\">\\n                                </mat-form-field>\\n                            </div>\\n                            <div *ngIf=\\\"showLeaveTeam(player.displayName)\\\" class=\\\"col\\\">\\n                                <button class=\\\"btn btn-danger\\\" (click)=\\\"removeMember(player.displayName)\\\" [disabled]=\\\"deleteUserButtonOn(player.displayName)\\\">\\n                                Leave Team \\n                            </button>\\n                            </div>\\n                            <div *ngIf=\\\"!editOn\\\" class=\\\"col\\\">\\n                                <button class=\\\"btn btn-danger\\\" (click)=\\\"removeMember(player.displayName)\\\" [disabled]=\\\"deleteUserButtonOn(player.displayName)\\\"> X </button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col\\\">\\n                        <div class=\\\"row mt-3\\\" *ngFor=\\\"let player of displayMembersRight\\\">\\n                            <div class=\\\"col\\\">\\n                                <mat-form-field class=\\\"mat-FullWidth\\\">\\n                                    <input matInput placeholder=\\\"Player Name\\\" value={{player.displayName}} disabled=\\\"true\\\">\\n                                </mat-form-field>\\n                            </div>\\n                            <div *ngIf=\\\"showLeaveTeam(player.displayName)\\\" class=\\\"col\\\">\\n                                <button class=\\\"btn btn-danger\\\" (click)=\\\"removeMember(player.displayName)\\\" [disabled]=\\\"deleteUserButtonOn(player.displayName)\\\">\\n                                Leave Team \\n                            </button>\\n                            </div>\\n                            <div *ngIf=\\\"!editOn\\\" class=\\\"col\\\">\\n                                <button class=\\\"btn btn-danger\\\" (click)=\\\"removeMember(player.displayName)\\\" [disabled]=\\\"deleteUserButtonOn(player.displayName)\\\"> X </button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"row mt-3\\\">\\n                    <div class=\\\"col\\\">\\n                        <mat-form-field class=\\\"mat-FullWidth\\\">\\n                            <mat-select placeholder=\\\"Team Competitive Level\\\" [disabled]=\\\"editOn\\\" [(ngModel)]=\\\"returnedProfile.competitiveLevel\\\">\\n                                <mat-option *ngFor=\\\"let level of competitonLevel\\\" [value]=\\\"level.val\\\">\\n                                    {{level.display}}\\n                                </mat-option>\\n                            </mat-select>\\n                            <mat-hint align=\\\"start\\\"><strong>Generally how serious / competitively you're looking to play</strong> </mat-hint>\\n                        </mat-form-field>\\n                        <mat-form-field class=\\\"mat-FullWidth\\\">\\n                            <mat-label>Describe the teams play history / style</mat-label>\\n                            <textarea matInput cdkTextareaAutosize [(ngModel)]=\\\"returnedProfile.descriptionOfTeam\\\" [disabled]=\\\"editOn\\\"></textarea>\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"row mt-3\\\">\\n                    <div class=\\\"col\\\">\\n                        Roles the team needs:\\n                        <section>\\n                            <mat-checkbox class=\\\"role-margin\\\" [(ngModel)]=\\\"returnedProfile.rolesNeeded.tank\\\" [disabled]=\\\"editOn\\\">Tank</mat-checkbox>\\n                            <mat-checkbox class=\\\"role-margin\\\" [(ngModel)]=\\\"returnedProfile.rolesNeeded.offlane\\\" [disabled]=\\\"editOn\\\">Offlane</mat-checkbox>\\n                            <mat-checkbox class=\\\"role-margin\\\" [(ngModel)]=\\\"returnedProfile.rolesNeeded.meleeassassin\\\" [disabled]=\\\"editOn\\\">Melee Assassin</mat-checkbox>\\n                            <mat-checkbox class=\\\"role-margin\\\" [(ngModel)]=\\\"returnedProfile.rolesNeeded.rangedassassin\\\" [disabled]=\\\"editOn\\\">Ranged Assassin</mat-checkbox>\\n                            <mat-checkbox class=\\\"role-margin\\\" [(ngModel)]=\\\"returnedProfile.rolesNeeded.support\\\" [disabled]=\\\"editOn\\\">Support</mat-checkbox>\\n                            <mat-checkbox class=\\\"role-margin\\\" [(ngModel)]=\\\"returnedProfile.rolesNeeded.flex\\\" [disabled]=\\\"editOn\\\">Flex</mat-checkbox>\\n                        </section>\\n                    </div>\\n                </div>\\n                <!-- Availability Schedule -->\\n                <app-times-available [availObj]=\\\"returnedProfile.availability\\\" [disabled]=\\\"editOn\\\" (availValid)=\\\"receiveValidTimes($event)\\\"></app-times-available>\\n\\n                <div class=\\\"row mt-3\\\">\\n                    <div class=\\\"col\\\">\\n                        <mat-form-field class=\\\"mat-FullWidth\\\">\\n                            <mat-select placeholder=\\\"Timezone:\\\" [formControl]=\\\"timezoneControl\\\" [(ngModel)]=\\\"returnedProfile.timeZone\\\">\\n                                <mat-option *ngFor=\\\"let zone of timezone.timezones\\\" [value]=\\\"zone.value\\\" [disabled]=\\\"editOn\\\">\\n                                    {{zone.text}}\\n                                </mat-option>\\n                            </mat-select>\\n                            <mat-error *ngIf=\\\"timezoneControl.hasError('required')\\\">\\n                                Timezone is required\\n                            </mat-error>\\n                        </mat-form-field>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"row\\\" *ngIf=\\\"showRegisteredQuestionnaire else registered\\\">\\n                    <div class=\\\"col\\\">\\n                        <app-questionnaire [team]=\\\"returnedProfile\\\"></app-questionnaire>\\n\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<ng-template #registered>\\n    <div class=\\\"text-center text-success p-5\\\"> Thanks for registering for NGS Season 6! Good Luck and We'll see you in the Nexus</div>\\n</ng-template>\"","import { Component, OnInit, Input} from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { DeleteConfrimModalComponent } from '../modal/delete-confrim-modal/delete-confrim-modal.component'\nimport { ChangeCaptainModalComponent } from '../modal/change-captain-modal/change-captain-modal.component';\nimport { TimezoneService } from '../services/timezone.service';\nimport { TeamService } from '../services/team.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { merge } from 'lodash';\nimport { Team } from '../classes/team.class';\nimport { AuthService } from '../services/auth.service';\nimport { UserService } from '../services/user.service';\nimport { AdminService } from '../services/admin.service';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { Profile } from '../classes/profile.class';\n\n\n@Component({\n  selector: 'app-team-profile',\n  templateUrl: './team-profile.component.html',\n  styleUrls: ['./team-profile.component.css']\n})\nexport class TeamProfileComponent implements OnInit {\n\n  //these properties are used for inputs\n  editOn: boolean = true;\n  teamName: string;\n  displayDivision: string = \"\"\n  returnedProfile = new Team(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);\n  filterUsers: any[] = []\n  tempProfile\n  message: string\n  showMe:boolean = true;\n  errorAvail:boolean = false;\n  displayMembersLeft: any[] = [];\n  displayMembersRight: any[] = [];\n\n  hlMedals = ['Grand Master', 'Master', 'Diamond', 'Platinum', 'Gold', 'Silver', 'Bronze'];\n  hlDivision = [1, 2, 3, 4, 5];\n  competitonLevel = [\n    { val: 1, display: 'Low' },\n    { val: 3, display: 'Medium' },\n    { val: 5, display: 'High' }\n  ]\n\n  //form controls\n  timezoneControl = new FormControl({ value: '', disabled: true }, [\n    Validators.required\n  ]);\n\n  emailControl = new FormControl({ value: '' }, [\n    Validators.email,\n    Validators.required\n  ]);\n\n  emailAddress: string;\n  inviteEmail() {\n    let storedEmail = this.emailAddress;\n    this.emailAddress = '';\n    if (storedEmail.length > 0) {\n      this.user.emailOutreach(storedEmail).subscribe(\n        (res) => {\n          this.message = res['message'];\n        },\n        (err) => {\n\n        }\n      )\n    }\n  }\n\n  //constructor\n  constructor(private auth: AuthService, private user: UserService, public timezone: TimezoneService, private team: TeamService, private route: ActivatedRoute, public dialog: MatDialog, private router: Router,\n    private admin:AdminService) {\n    this.teamName = team.realTeamName(this.route.snapshot.params['id']);\n  }\n\n  //methods\n\n  deleteUserButtonOn(player){\n    return player==this.returnedProfile.captain;\n  }\n\n  removeMember(player){\n    if(this.componentEmbedded){\n      this.admin.removeMembers(this.returnedProfile.teamName_lower, player).subscribe(\n        (res) => {\n          // console.log('user removed');\n          this.ngOnInit();\n        },\n        (err) => {\n          console.log(err);\n        }\n      )\n    }else{\n      this.team.removeUser(player, this.returnedProfile.teamName_lower).subscribe(\n        (res) => {\n          console.log('user removed');\n          this.ngOnInit();\n        },\n        (err) => {\n          console.log(err);\n        }\n      )\n    }\n\n  }\n\n  adminRefreshMMR(){\n    this.admin.refreshTeamMMR(this.returnedProfile.teamName_lower).subscribe(\n      (res)=>{\n        this.returnedProfile.teamMMRAvg = res.newMMR;\n      },\n      (err)=>{\n        console.log(err);\n      }\n    )\n  }\n\n\n  formControlledEnable() {\n    this.timezoneControl.enable();\n  }\n\n  formControlledDisable() {\n    this.timezoneControl.disable();\n  }\n\n  //init implementation\n  ngOnInit() {\n    this.displayMembersLeft = [];\n    this.displayMembersRight = [];\n    this.returnedProfile = new Team(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);\n    let getProfile: string;\n    // console.log('typeof this.providedProfile: ', typeof this.providedProfile);\n    // console.log('his.providedProfile: ', this.providedProfile);\n    if (this.providedProfile != null && this.providedProfile != undefined) {\n      if (typeof this.providedProfile == 'string') {\n        getProfile = this.providedProfile;\n        this.orignalName = this.team.realTeamName(this.providedProfile);\n        this.getTeamByString(getProfile);\n        \n      } else {\n        merge(this.returnedProfile, this.providedProfile);\n        this.setUpTeamMemberFilter(this.returnedProfile);\n        this.stratifyTeamMembers()\n        this.orignalName = this.returnedProfile.teamName_lower;\n        // this.cleanUpDivision();\n      }\n    } else {\n      getProfile = this.teamName;\n      this.getTeamByString(getProfile);\n    }\n  }\n\n  setUpTeamMemberFilter(teamProfile){\n    if (teamProfile.teamMembers && teamProfile.teamMembers.length > 0) {\n      teamProfile.teamMembers.forEach(element => {\n        this.filterUsers.push(element['displayName']);\n      });\n    }\n    // console.log('teamProfile ',teamProfile);\n    if (teamProfile.pendingMembers && teamProfile.pendingMembers.length > 0) {\n      teamProfile.pendingMembers.forEach(element => {\n        this.filterUsers.push(element['displayName']);\n      });\n    }\n  }\n\n  //this boolean will keep up with wether the component is embedded in another or is acting as it's own standalone page\n  componentEmbedded: boolean = false;\n  //if this component is used in the admin view the team name can be changed, we must hold on to the old team name to update the proper object\n  orignalName:string = null;\n  \n  // this model change method will be bound to the name change input, so we can update the lower case name along with the display name\n  modelChange() {\n    // console.log('model change');\n    // console.log('this.returnedProfile.teamName ', this.returnedProfile.teamName);\n    // console.log('this.returnedProfile.teamName_lower ', this.returnedProfile.teamName_lower);\n    if (this.returnedProfile.teamName != this.returnedProfile.teamName_lower) {\n      this.returnedProfile.teamName_lower = this.returnedProfile.teamName.toLowerCase();\n    }\n  }\n\n  //provided profile holds anything bound to the component when it's embedded\n  providedProfile: any;\n  //passedProfile binding for when this component is embedded\n  @Input() set passedProfile(profile) {\n    if (profile != null && profile != undefined) {\n      this.providedProfile = profile;\n      //if we received a profile; the component is embedded:\n      this.componentEmbedded = true;\n      this.editOn = false;\n      this.formControlledEnable();\n      \n      this.ngOnInit();\n    }\n  }\n\n  showRegisteredQuestionnaire(){\n    if (this.embedSource == 'admin'){\n      return true;\n    }else{\n      return !this.returnedProfile.questionnaire['registered'];\n    }\n   \n  }\n\n  embedSource:string='';\n  @Input() set source(_source){\n    this.embedSource = _source;\n  } \n\n  validAvailableTimes:boolean\n  receiveValidTimes(event){\n    this.validAvailableTimes=event;\n  }\n\n\n  //this method controls the opening of the change captain modal\n  openCaptainChangeDialog():void{\n    const changeCptDialogRef = this.dialog.open(ChangeCaptainModalComponent, {\n      width:'450px',\n      data:{members:this.returnedProfile.teamMembers, captain:this.returnedProfile.captain}\n    });\n\n    changeCptDialogRef.afterClosed().subscribe( result => {\n        if(result!=undefined&&result!=null){\n\n          this.team.changeCaptain(this.returnedProfile.teamName_lower,result).subscribe(\n            (res)=>{\n              this.auth.destroyCaptain();\n              this.ngOnInit();\n            },\n            (err)=>{\n              console.log(err)\n            }\n          )\n        }\n    });\n  }\n\n  //this method opens the admin change captain modal\n  openAdminCaptainChangeDialog():void{\n    const dialogRef = this.dialog.open(ChangeCaptainModalComponent, {\n      width: '450px',\n      data: { members: this.returnedProfile.teamMembers, captain: this.returnedProfile.captain }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result != null && result != undefined) {\n        this.admin.changeCaptain(this.returnedProfile.teamName_lower, result).subscribe((res) => {\n          this.returnedProfile = null;\n          this.returnedProfile = res;\n        }, (err) => {\n          console.log(err);\n        })\n      }\n    });\n  }\n\n  openAdminDeleteDialog():void{\n    const dialogRef = this.dialog.open(DeleteConfrimModalComponent, {\n      width: '300px',\n      data: { confirm: this.confirm }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result.toLowerCase() == 'delete') {\n        this.admin.deleteTeam(this.returnedProfile.teamName_lower).subscribe(\n          res => {\n            this.showMe = false;\n          }, err => {\n            console.log(err);\n          }\n        )\n      }\n    });\n  }\n\n  //this method constorls the opening of the delete team confirm modal\n  confirm: string\n  openDialog(): void {\n\n    const dialogRef = this.dialog.open(DeleteConfrimModalComponent, {\n      width: '300px',\n      data: { confirm: this.confirm }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result.toLowerCase() == 'delete') {\n        this.team.deleteTeam(this.returnedProfile.teamName_lower).subscribe(\n          res => {\n            this.returnedProfile = null;\n            this.auth.destroyTeam();\n            this.auth.destroyCaptain();\n            this.router.navigate(['/profile',this.user.routeFriendlyUsername(this.auth.getUser())]);\n          }, err => {\n            console.log(err);\n          }\n        )\n      }\n    });\n  }\n\n  adminSave(){\n    if (this.validate()) {\n      this.editOn = true;\n      this.formControlledDisable();\n      let cptRemoved = Object.assign({}, this.returnedProfile);\n      delete cptRemoved.captain;\n      this.admin.saveTeam(this.orignalName,this.returnedProfile).subscribe((res) => {\n        // console.log('team was saved!');\n        this.orignalName = res.teamName_lower;\n        this.returnedProfile = res;\n      }, (err) => {\n        console.log(err);\n        alert(err.message);\n      });\n    } else {\n      //activate validator errors\n      console.log('the data was invalid')\n    }\n  }\n\n  //this method enables form inputs for changes\n  openEdit(){\n    this.editOn=false;\n    this.formControlledEnable();\n    this.tempProfile = Object.assign({}, this.returnedProfile);\n  } \n\n  //this method resets the profile back to pre-edit state and disables inputs for changes\n  cancel() {\n    this.returnedProfile = Object.assign({}, this.tempProfile);\n    this.editOn = true;\n    this.formControlledDisable();\n  }\n\n  //this method checks that the inputs are valid and if so, saves the team object\n  save() {\n    if (this.validate()) {\n      this.editOn = true;\n      this.formControlledDisable();\n      let cptRemoved = Object.assign({}, this.returnedProfile);\n      delete cptRemoved.captain;\n      this.team.saveTeam(cptRemoved).subscribe((res) => {\n        this.editOn = true;\n        this.formControlledDisable();\n      }, (err) => {\n        console.log(err);\n        alert(err.message);\n      });\n    } else {\n      //activate validator errors\n      console.log('the data was invalid')\n    }\n\n  }\n\n  //method for inviting users to join this team\n  invite(user) {\n    // console.log(user);\n    if (this.returnedProfile.teamName && user) {\n      this.team.addUser(user, this.returnedProfile.teamName_lower).subscribe(res => {\n        this.message = res.message;\n        this.filterUsers.push(user);\n        // console.log(this.filterUsers);\n      }, err => {\n        this.message = err.error.message;\n      });\n    }\n  }\n\n  //method takes in the factors at hand to show the captain edit options or the admin edit options\n  showEditDialog(){\n    if(this.embedSource == 'admin'){\n      return false;\n    }else{\n      let isteamcpt;\n      if (this.auth.getCaptain()) {\n        isteamcpt = this.auth.getUser() === this.returnedProfile.captain;\n      }\n      return isteamcpt;\n    }\n  }\n\n\n  //method hides or shows days based on whether the team is available or not, and shows all in edit mode.\n  hideDay(editSwitch, dayAvailabilty): boolean {\n    if (!editSwitch) {\n      return false;\n    } else {\n      if (dayAvailabilty) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }\n\n\n  //helper function of dubious helpfulness.\n  isNullOrEmpty(dat): boolean {\n    if (dat == null || dat == undefined) {\n      return true;\n    }\n    if (Array.isArray(dat)) {\n      if (dat.length == 0) {\n        return true;\n      }\n    } else if (typeof dat == 'object') {\n      let noe = false;\n      for (let key in dat) {\n        if (this.isNullOrEmpty(dat[key])) {\n          noe = true;\n        }\n      }\n      return noe;\n    } else if (typeof dat == \"string\") {\n      return dat.length == 0;\n    } else {\n      return false;\n    }\n  }\n\n  //method to validate the inputs we require.\n  validate() {\n\n    let valid = true;\n    if (!this.validAvailableTimes){\n      valid = false;\n    }\n    \n    //ensure time zone\n    if (this.isNullOrEmpty(this.returnedProfile.timeZone)) {\n      valid = false;\n      this.timezoneControl.setErrors({required:true});\n    }else{\n      this.timezoneControl.setErrors(null);\n    }\n    \n    return valid;\n  }\n\n  stratifyTeamMembers(){\n    this.displayMembersLeft = [];\n    this.displayMembersRight = [];\n    if(this.returnedProfile.teamMembers.length>3){\n      let half = Math.round(this.returnedProfile.teamMembers.length / 2);\n      for(var i = 0; i < half; i++){\n        this.displayMembersLeft.push(this.returnedProfile.teamMembers[i]);\n      }\n\n      for (var j = half; j < this.returnedProfile.teamMembers.length; j++){\n        this.displayMembersRight.push(this.returnedProfile.teamMembers[j]);\n      }\n    }else{\n      this.displayMembersLeft = this.returnedProfile.teamMembers;\n      this.displayMembersRight = [];\n    }\n  }\n\n  //method to get team by provided string\n  private getTeamByString(getProfile: string) {\n    this.team.getTeam(getProfile).subscribe((res) => {\n      merge(this.returnedProfile, res);\n      this.setUpTeamMemberFilter(this.returnedProfile);\n      this.stratifyTeamMembers()\n      // console.log('team ', this.returnedProfile);\n      // this.cleanUpDivision();\n    });\n  }\n\n  //method to determine if user is a member of a team but not captain\n  //shows button to leave team if so, and is not admin embedded\n  showLeaveTeam(playerName){\n    if(this.componentEmbedded){\n      return false;\n    }else{\n      if (this.returnedProfile.teamName == this.auth.getTeam() && this.returnedProfile.captain != this.auth.getUser() && playerName == this.auth.getUser()) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  leaveTeam(){\n    this.team.removeUser(this.auth.getUser(), this.returnedProfile.teamName_lower).subscribe(\n      (res) => {\n        console.log('team left');\n        this.ngOnInit();\n      },\n      (err) => {\n        console.log(err);\n      }\n    )\n  }\n\n  imageFQDN(img){\n    return this.team.imageFQDN(img);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-7\\\">\\n        <form class=\\\"teamSearchForm\\\">\\n            <mat-form-field class=\\\"tp-FullWidth\\\">\\n                <input matInput placeholder=\\\"Enter team name\\\" [(ngModel)]=\\\"selectedTeam\\\" aria-label=\\\"Enter team name\\\" [matAutocomplete]=\\\"auto\\\" [formControl]=\\\"teamCtrl\\\">\\n                <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n                    <mat-option *ngFor=\\\"let name of foundTeams \\\" [value]=\\\"name\\\">\\n                        {{name}}\\n                    </mat-option>\\n                </mat-autocomplete>\\n            </mat-form-field>\\n        </form>\\n    </div>\\n    <div class=\\\"col\\\">\\n        <button type=\\\"button\\\" (click)=\\\"nameSelect(selectedTeam)\\\"> {{btnTxt}} </button>\\n    </div>\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { TeamService } from '../services/team.service';\n\n@Component({\n  selector: 'app-team-search',\n  templateUrl: './team-search.component.html',\n  styleUrls: ['./team-search.component.css']\n})\nexport class TeamSearchComponent implements OnInit {\n\n  priorSelect: any\n  lastChange: number = 0;\n  selectedTeam: any\n  btnTxt: string\n  cantClick: boolean = false;\n\n  @Output() teamSelected = new EventEmitter();\n\n  nameSelect(user) {\n    this.priorSelect = user;\n    this.teamSelected.emit(user);\n  }\n\n  @Input() set buttonText(text) {\n    if (text != undefined && text != null) {\n      this.btnTxt = text;\n    } else {\n      this.btnTxt = \"Seach\";\n    }\n  }\n\n  teamCtrl = new FormControl();\n  foundTeams: any[]\n  search: string\n\n  constructor(private team: TeamService) {\n    this.teamCtrl.valueChanges.subscribe(\n      data => {\n        if (data && data.length > 2) {\n          //give this a delay so we don't swamp the server with calls! .875 seconds to make call\n          let timestamp = Date.now();\n          if (timestamp - this.lastChange > 1000) {\n            this.lastChange = timestamp;\n            this.team.teamSearch(data).subscribe(res => {\n              this.foundTeams = res;\n            });\n          }\n        }\n\n\n      }\n    )\n\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n","module.exports = \".error-avail {\\n    border-style: solid;\\n    border-width: 2px;\\n    border-color: red;\\n    padding-left: 10px;\\n}\\n\\n.req-field {\\n    color: red;\\n    font-size: .80em;\\n    font-weight: 600;\\n}\"","module.exports = \"<div class=\\\"row mt-3\\\">\\n    <div class=\\\"col\\\">\\n        {{displayText}} <span class=\\\"req-field\\\">*At least one time is required.</span>\\n        <div class=\\\"row\\\" *ngIf=\\\"!editOn && errorReply.length>0\\\">\\n            <div class=\\\"col req-field\\\">\\n                {{errorReply}}\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<div [ngClass]=\\\"{'error-avail':errorAvail}\\\">\\n    <div class=\\\"row mt-3\\\">\\n        <div class=\\\"col\\\">\\n            <mat-checkbox [(ngModel)]=\\\"availability.monday.available\\\" [disabled]=\\\"editOn\\\">Monday</mat-checkbox>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <mat-form-field>\\n                <input matInput type=\\\"time\\\" [(ngModel)]=\\\"availability.monday.startTime\\\" placeholder=\\\"Start Time\\\" [disabled]=\\\"editOn\\\">\\n            </mat-form-field>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <mat-form-field>\\n                <input matInput [(ngModel)]=\\\"availability.monday.endTime\\\" type=\\\"time\\\" placeholder=\\\"End Time\\\" [disabled]=\\\"editOn\\\">\\n            </mat-form-field>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <mat-checkbox class=\\\"\\\" [(ngModel)]=\\\"availability.tuesday.available\\\" [disabled]=\\\"editOn\\\">Tuesday</mat-checkbox>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <mat-form-field>\\n                <input matInput type=\\\"time\\\" [(ngModel)]=\\\"availability.tuesday.startTime\\\" placeholder=\\\"Start Time\\\" [disabled]=\\\"editOn\\\">\\n            </mat-form-field>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <mat-form-field>\\n                <input matInput type=\\\"time\\\" [(ngModel)]=\\\"availability.tuesday.endTime\\\" placeholder=\\\"End Time\\\" [disabled]=\\\"editOn\\\">\\n            </mat-form-field>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <mat-checkbox class=\\\"\\\" [(ngModel)]=\\\"availability.wednesday.available\\\" [disabled]=\\\"editOn\\\">Wednesday</mat-checkbox>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <mat-form-field>\\n                <input matInput type=\\\"time\\\" [(ngModel)]=\\\"availability.wednesday.startTime\\\" placeholder=\\\"Start Time\\\" [disabled]=\\\"editOn\\\">\\n            </mat-form-field>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <mat-form-field>\\n                <input matInput type=\\\"time\\\" [(ngModel)]=\\\"availability.wednesday.endTime\\\" placeholder=\\\"End Time\\\" [disabled]=\\\"editOn\\\">\\n            </mat-form-field>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <mat-checkbox class=\\\"\\\" [(ngModel)]=\\\"availability.thursday.available\\\" [disabled]=\\\"editOn\\\">Thursday</mat-checkbox>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <mat-form-field>\\n                <input matInput type=\\\"time\\\" [(ngModel)]=\\\"availability.thursday.startTime\\\" placeholder=\\\"Start Time\\\" [disabled]=\\\"editOn\\\">\\n            </mat-form-field>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <mat-form-field>\\n                <input matInput type=\\\"time\\\" [(ngModel)]=\\\"availability.thursday.endTime\\\" placeholder=\\\"End Time\\\" [disabled]=\\\"editOn\\\">\\n            </mat-form-field>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <mat-checkbox class=\\\"\\\" [(ngModel)]=\\\"availability.friday.available\\\" [disabled]=\\\"editOn\\\">Friday</mat-checkbox>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <mat-form-field>\\n                <input matInput type=\\\"time\\\" [(ngModel)]=\\\"availability.friday.startTime\\\" placeholder=\\\"Start Time\\\" [disabled]=\\\"editOn\\\">\\n            </mat-form-field>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <mat-form-field>\\n                <input matInput type=\\\"time\\\" [(ngModel)]=\\\"availability.friday.endTime\\\" placeholder=\\\"End Time\\\" [disabled]=\\\"editOn\\\">\\n            </mat-form-field>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <mat-checkbox class=\\\"\\\" [(ngModel)]=\\\"availability.saturday.available\\\" [disabled]=\\\"editOn\\\">Saturday</mat-checkbox>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <mat-form-field>\\n                <input matInput type=\\\"time\\\" [(ngModel)]=\\\"availability.saturday.startTime\\\" placeholder=\\\"Start Time\\\" [disabled]=\\\"editOn\\\">\\n            </mat-form-field>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <mat-form-field>\\n                <input matInput type=\\\"time\\\" [(ngModel)]=\\\"availability.saturday.endTime\\\" placeholder=\\\"End Time\\\" [disabled]=\\\"editOn\\\">\\n            </mat-form-field>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <mat-checkbox class=\\\"\\\" [(ngModel)]=\\\"availability.sunday.available\\\" [disabled]=\\\"editOn\\\">Sunday</mat-checkbox>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <mat-form-field>\\n                <input matInput type=\\\"time\\\" [(ngModel)]=\\\"availability.sunday.startTime\\\" placeholder=\\\"Start Time\\\" [disabled]=\\\"editOn\\\">\\n            </mat-form-field>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <mat-form-field>\\n                <input matInput type=\\\"time\\\" [(ngModel)]=\\\"availability.sunday.endTime\\\" placeholder=\\\"End Time\\\" [disabled]=\\\"editOn\\\">\\n            </mat-form-field>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter, DoCheck, OnChanges, SimpleChange, SimpleChanges } from '@angular/core';\nimport { UtilitiesService } from '../services/utilities.service';\n\n@Component({\n  selector: 'app-times-available',\n  templateUrl: './times-available.component.html',\n  styleUrls: ['./times-available.component.css']\n})\nexport class TimesAvailableComponent implements OnInit, DoCheck {\n  \n  \n  availability = {\n    \"monday\": {\n      \"available\": false,\n      \"startTime\": null,\n      \"endTime\": null\n    },\n    \"tuesday\": {\n      \"available\": false,\n      \"startTime\": null,\n      \"endTime\": null\n    },\n    \"wednesday\": {\n      \"available\": false,\n      \"startTime\": null,\n      \"endTime\": null\n    }\n    , \"thursday\": {\n      \"available\": false,\n      \"startTime\": null,\n      \"endTime\": null\n    }\n    , \"friday\": {\n      \"available\": false,\n      \"startTime\": null,\n      \"endTime\": null\n    }\n    , \"saturday\": {\n      \"available\": false,\n      \"startTime\": null,\n      \"endTime\": null\n    }\n    , \"sunday\": {\n      \"available\": false,\n      \"startTime\": null,\n      \"endTime\": null\n    }\n  };\n  errorAvail: boolean = false;\n  errorReply: string = '';\n  differ: any\n\n  hell(){\n    console.log(this.availability)\n  }\n  constructor(private util: UtilitiesService) { \n   \n  }\n\n  ngOnInit() {\n  }\n\n \n  @Input() set availObj(_obj){\n    if(typeof _obj == 'object' && _obj != null && _obj != undefined){\n      this.availability = Object.assign({},_obj);\n    }\n  }\n\n  displayText: string ='Times the team plays and practices:';\n  @Input() set customText(_text){\n    if (typeof _text == 'string' && _text != null && _text != undefined){\n      this.displayText = _text;\n    }\n  }\n\n  editOn:boolean=false;\n  @Input() set disabled(_editOn) {\n    if (typeof _editOn == 'boolean' && _editOn != null && _editOn != undefined) {\n      this.editOn = _editOn;\n    }\n  }\n\n  ngDoCheck() {\n   this.checkAvailabilityDays();\n  }\n\n  @Output() availValid = new EventEmitter();\n\n  emitValid(){\n    this.availValid.emit('?');\n  }\n\n  modelChange(){\n    console.log('model is changing!')\n  }\n\n\n  //check that the availability exists and that at least one day has been set to true and has time\n  checkAvailabilityDays(): void {\n    let ret = true;\n    let nodays = 0;\n      //validate that we have start and end times for available days\n      for (let day in this.availability) {\n        let checkDay = this.availability[day];\n        if (checkDay.available) {\n          if (checkDay.startTime == null || checkDay.startTime.length == 0) {\n            this.errorReply = day.substring(0, 1).toUpperCase() + day.substring(1, day.length) + \" start time required!\";\n            ret = false;\n          } else if (checkDay.endTime == null || checkDay.endTime.length == 0) {\n            this.errorReply = day.substring(0, 1).toUpperCase() + day.substring(1, day.length) + \" end time required!\";\n            ret = false;\n            ret = false;\n          } else if (false) {\n            ret = false;\n          } else {\n            let endTimeStrArr = checkDay.endTime.split(':');\n            let endTime = new Date();\n            endTime.setMinutes(endTimeStrArr[1]);\n            endTime.setHours(endTimeStrArr[0]);\n            let startTime = new Date();\n            let startTimeStrArr = checkDay.startTime.split(':');\n            startTime.setMinutes(startTimeStrArr[1]);\n            startTime.setHours(startTimeStrArr[0]);\n            if (startTime >= endTime) {\n              this.errorReply = day.substring(0, 1).toUpperCase() + day.substring(1, day.length) + \" end time must be later than start time!\";\n              ret = false;\n            }\n          }\n        } else {\n          nodays += 1;\n        }\n      }\n    if (nodays == 7) {\n      ret = false;\n      this.errorReply = 'Must include at least 1 day of availability';\n    }\n    if (ret) {\n      this.errorReply = '';\n    }\n    this.errorAvail = !ret;\n    this.availValid.emit(ret);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!-- <input matInput placeholder=\\\"Battle tag\\\" [matAutocomplete]=\\\"auto\\\">\\n<mat-autocomplete #auto=\\\"matAutocomplete\\\" [displayWith]=\\\"displayFn\\\">\\n    <mat-option *ngFor=\\\"let btag of getUsers | async\\\" [value]=\\\"btag\\\">{{btag}}</mat-option>\\n</mat-autocomplete> -->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-7\\\">\\n        <form class=\\\"userSearchForm\\\">\\n            <mat-form-field class=\\\"mat-FullWidth\\\">\\n                <input matInput placeholder=\\\"Enter battle tag\\\" [(ngModel)]=\\\"selectedUser\\\" aria-label=\\\"Enter battle tag\\\" [matAutocomplete]=\\\"auto\\\" [formControl]=\\\"userCtrl\\\">\\n                <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n                    <mat-option *ngFor=\\\"let btag of foundUsers \\\" [value]=\\\"btag\\\">\\n                        {{btag}}\\n                    </mat-option>\\n                </mat-autocomplete>\\n            </mat-form-field>\\n        </form>\\n    </div>\\n    <div class=\\\"col\\\">\\n        <button type=\\\"button\\\" [disabled]=\\\"disableButton\\\" (click)=\\\"userSelect(selectedUser)\\\"> {{btnTxt}} </button>\\n    </div>\\n</div>\\n\\n<div><span>{{message}}</span></div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { UserService } from '../services/user.service';\nimport { AuthService } from '../services/auth.service';\n\n\n\n@Component({\n  selector: 'app-user-search',\n  templateUrl: './user-search.component.html',\n  styleUrls: ['./user-search.component.css']\n})\nexport class UserSearchComponent implements OnInit {\n\n  usersToFilter: any[] = [];\n  \n  priorSelect: any\n  lastChange: number = 0;\n  selectedUser:any\n  btnTxt:string\n  cantClick:boolean = false;\n\n  disableButton:boolean = false;\n\n  @Output() userSelected = new EventEmitter();\n\n  userSelect(user){\n    this.priorSelect = this.selectedUser;\n    this.selectedUser = user;\n    this.disableButton = true;\n    this.userSelected.emit(user);\n  }\n\n  @Input() set buttonText(text){\n    if(text!=undefined&&text!=null){\n      this.btnTxt = text;\n    }else{\n      this.btnTxt = \"Seach\";\n    }\n  }\n\n  userSearchType:string = 'all';\n  @Input() set type(_type){\n    if (_type != null && _type != undefined && _type.length > 0) {\n      this.userSearchType = _type;\n    } else {\n      this.userSearchType = 'all'\n    }\n  }\n\n  @Input() set filterUser(users){\n    if(users != null && users != undefined && users.length>0){\n      this.usersToFilter = users;\n    }else{\n      this.usersToFilter = []\n    }\n  }\n\n  message:string\n\n  filterUsers(master, remove){\n    console.log('master ', master, 'remove ', remove)\n    remove.forEach(element => {\n      let index = master.indexOf(element)\n      if(index >-1 ){\n        master.splice(index, 1);\n      }\n    });\n    return master;\n  }\n \n  userCtrl = new FormControl();\n  foundUsers: any[]\n  search: string\n\n  constructor(private users: UserService, private Auth:AuthService) {\n    this.userCtrl.valueChanges.subscribe(\n      data => {\n        if(data && data.length>2){\n          this.disableButton = false;\n          //give this a delay so we don't swamp the server with calls! .875 seconds to make call\n          let timestamp = Date.now();\n          if (timestamp - this.lastChange > 1000) {\n            this.lastChange = timestamp;\n              this.users.userSearch(data, this.userSearchType).subscribe(res => {\n                this.foundUsers = this.filterUsers(res, this.usersToFilter);\n              });\n          }\n        }\n      }\n    )\n\n  }\n\n  ngOnInit(){\n    this.usersToFilter.push(this.Auth.getUser());\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n  contentful:{\n    spaceID:'b73d407c7z3q',\n    token:'173bbb7627a7cdc82292e2a99d28d5004612fbc724a4e74a643629c67d98919f',\n    categoryIDs:{\n      news: '4bGp5zRaVOAmO2gaMuagEO',\n      jumbotron: '28BCNlBF6Msggwa2ECkokm'\n    }\n  },\n  s3bucketImages: 'dev-ngs-image-storage',\n  s3bucketReplays: 'dev-ngs-replay-storage'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\n\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","/* (ignored) */"],"sourceRoot":""}